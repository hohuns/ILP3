/**
 * Copyright Â© INOVUA TRADING.
 *
 * This source code is licensed under the Commercial License found in the
 * LICENSE file in the root directory of this source tree.
 */
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _typeof = require("@babel/runtime/helpers/typeof");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
Object.defineProperty(exports, "filterTypes", {
  enumerable: true,
  get: function get() {
    return _factory.filterTypes;
  }
});

var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));

var _reactdatagridCommunity = require("@inovua/reactdatagrid-community");

var _factory = _interopRequireWildcard(require("@inovua/reactdatagrid-community/factory"));

var _rowDetails = _interopRequireDefault(require("./plugins/row-details"));

var _lockedColumns = _interopRequireDefault(require("./plugins/locked-columns"));

var _groupAndPivot = _interopRequireDefault(require("./plugins/group-and-pivot"));

var _tree = _interopRequireDefault(require("./plugins/tree"));

var _license = _interopRequireDefault(require("./plugins/license"));

var _rowReorder = _interopRequireDefault(require("./plugins/row-reorder"));

var _livePagination = _interopRequireDefault(require("./plugins/live-pagination"));

var _rowIndexColumn = _interopRequireDefault(require("./plugins/row-index-column"));

var _footerRows = _interopRequireDefault(require("./plugins/footer-rows"));

var _lockedRows = _interopRequireDefault(require("./plugins/locked-rows"));

var _clipboard = _interopRequireDefault(require("./plugins/clipboard"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var enterprisePlugins = [].concat((0, _toConsumableArray2.default)(_reactdatagridCommunity.plugins), [_tree.default, _groupAndPivot.default, _lockedRows.default, _footerRows.default, _license.default, _rowDetails.default, _lockedColumns.default, _rowReorder.default, _rowIndexColumn.default, _livePagination.default, _clipboard.default]);
var ReactDataGrid = (0, _factory.default)({
  plugins: enterprisePlugins
}, 'enterprise');
var _default = ReactDataGrid;
exports.default = _default;