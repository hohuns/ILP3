/**
 * Copyright Â© INOVUA TRADING.
 *
 * This source code is licensed under the Commercial License found in the
 * LICENSE file in the root directory of this source tree.
 */
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var onCopyClickHandle = function onCopyClickHandle(computedProps) {
  if (!computedProps) {
    return;
  }

  if (computedProps.computedCellSelection) {
    computedProps.copySelectedCellsToClipboard();
  } else {
    computedProps.copyActiveRowToClipboard();
  }
};

var onPasteClickHandle = function onPasteClickHandle(computedProps) {
  if (!computedProps) {
    return;
  }

  if (computedProps.computedCellSelection) {
    computedProps.pasteSelectedCellsFromClipboard();
  } else {
    computedProps.pasteActiveRowFromClipboard();
  }
};

var pasteDisableHandle = function pasteDisableHandle(computedProps) {
  var result = true;

  if (computedProps.clipboard && computedProps.clipboard.current) {
    result = false;
  }

  return result;
};

var renderClipboardContextMenu = function renderClipboardContextMenu(menuProps, _ref) {
  var computedProps = _ref.computedProps;

  if (!computedProps) {
    return;
  }

  if (!computedProps.enableClipboard) {
    return null;
  }

  menuProps.autoDismiss = true;
  menuProps.items = [{
    label: 'Copy',
    secondaryLabel: 'Ctrl/Cmd + C',
    onClick: function onClick() {
      return onCopyClickHandle(computedProps);
    }
  }, {
    label: 'Paste',
    secondaryLabel: 'Ctrl/Cmd + V',
    onClick: function onClick() {
      return onPasteClickHandle(computedProps);
    },
    disabled: pasteDisableHandle(computedProps)
  }];
};

var _default = renderClipboardContextMenu;
exports.default = _default;