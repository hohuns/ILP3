/**
 * Copyright Â© INOVUA TRADING.
 *
 * This source code is licensed under the Commercial License found in the
 * LICENSE file in the root directory of this source tree.
 */
export declare const expandAtIndexes: (dataArray: any[], indexes: number[] | any, config?: {}) => any;
export declare const collapseAtIndexes: (dataArray: any[], indexes: number[] | any, config?: {}) => any;
export declare const expandAtIndex: (dataArray: any[], index: number, config?: {}) => any[];
export declare const expandByIds: (dataArray: any[], idMap: {} | undefined, config?: {}) => any[];
export declare const expandByIdsWithInfo: (dataArray: any[], config?: any, parentNode?: {} | undefined, result?: any[], idToIndexMap?: any, dataMap?: any, startIndex?: number, nodesToExpand?: any[]) => {
    data: any[];
    dataMap: any;
    idToIndexMap: any;
    nodesToExpand: any[];
};
declare type IdMap = {
    [key: string]: any;
};
export declare const collapseByIds: (dataArray: any[], idMap: IdMap, config?: any) => any;
export declare const collapseAtIndexWithInfo: (dataArray: any[], index: number, config?: any) => {
    data: any[];
    removeCount: number;
};
export declare const collapseAtIndex: (dataArray: any[], index: number, config?: any) => any[];
export declare const sortTreeData: (sortInfo: any, dataArray: any[], { depth, deep }?: any) => any[];
export declare const sortTreeDataWithInfo: (sortInfo: any, dataArray: any[], depth?: number) => {
    data: any[];
    maxDepth: number;
};
export {};
