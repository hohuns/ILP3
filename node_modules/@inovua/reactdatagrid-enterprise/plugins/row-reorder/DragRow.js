/**
 * Copyright Â© INOVUA TRADING.
 *
 * This source code is licensed under the Commercial License found in the
 * LICENSE file in the root directory of this source tree.
 */
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _typeof = require("@babel/runtime/helpers/typeof");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireWildcard(require("react"));

var _join = _interopRequireDefault(require("@inovua/reactdatagrid-community/packages/join"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

var DragRow = function (_Component) {
  (0, _inherits2.default)(DragRow, _Component);

  var _super = _createSuper(DragRow);

  function DragRow(_props) {
    var _this;

    (0, _classCallCheck2.default)(this, DragRow);
    _this = _super.call(this, _props);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "dragRowRef", void 0);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "render", function () {
      var PROXY_CLASS_NAME = _this.props.PROXY_CLASS_NAME;
      var _this$state = _this.state,
          visible = _this$state.visible,
          height = _this$state.height;
      var rowProxyClassName = (0, _join.default)(PROXY_CLASS_NAME, visible ? "".concat(PROXY_CLASS_NAME, "--visible") : "".concat(PROXY_CLASS_NAME, "--hidden"));
      return _react.default.createElement("div", {
        ref: _this.dragRowRef,
        style: {
          height: height
        },
        className: rowProxyClassName
      }, _this.renderRowReorderProxy());
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "renderRowReorderProxy", function () {
      var renderRowReorderProxy = _this.props.renderRowReorderProxy;
      var _this$state2 = _this.state,
          props = _this$state2.props,
          dragIndex = _this$state2.dragIndex;

      if (!props) {
        return;
      }

      var result;

      if (renderRowReorderProxy && typeof renderRowReorderProxy === 'function') {
        var data = _this.state.props && _this.state.props.data && _this.state.props.data[_this.state.dragIndex];
        var dataSource = _this.state.props && _this.state.props.dataSource && _this.state.props.dataSource[_this.state.dragIndex];
        result = renderRowReorderProxy({
          data: data,
          dataSource: dataSource,
          dragRowIndex: _this.state.dragIndex
        });
      }

      if (result === undefined) {
        if (props) {
          var columns = props.columns;
          var firstColumn = columns && columns[0];
          var columnName = firstColumn.name;
          result = _react.default.createElement("div", null, props.data[dragIndex][columnName]);
        }
      }

      return result;
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "getProps", function () {
      return _this.state.props || _this.props;
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "setVisible", function (visible) {
      if (visible !== _this.state.visible) {
        _this.setState({
          visible: visible
        });
      }
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "setTop", function (top) {
      var offset = _this.state.offset;

      if (_this.dragRowRef && _this.dragRowRef.current) {
        _this.dragRowRef.current.style.top = "".concat(offset + top, "px");
      }
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "setLeft", function (left) {
      if (_this.dragRowRef && _this.dragRowRef.current) {
        _this.dragRowRef.current.style.left = "".concat(left, "px");
      }
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "setHeight", function (height) {
      _this.setState({
        height: height
      });
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "setOffset", function (height) {
      _this.setState({
        offset: height
      });
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "setProps", function (props) {
      _this.setState({
        props: props
      });
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "setDragIndex", function (index) {
      _this.setState({
        dragIndex: index
      });
    });
    _this.dragRowRef = (0, _react.createRef)();
    _this.state = {
      offset: 0,
      visible: false,
      props: null,
      height: 0,
      dragIndex: 0
    };
    return _this;
  }

  return (0, _createClass2.default)(DragRow);
}(_react.Component);

(0, _defineProperty2.default)(DragRow, "defaultProps", {
  PROXY_CLASS_NAME: 'InovuaReactDataGrid__row-drag-proxy'
});
var _default = DragRow;
exports.default = _default;