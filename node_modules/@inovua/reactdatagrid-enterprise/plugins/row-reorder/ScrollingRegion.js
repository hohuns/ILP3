/**
 * Copyright Â© INOVUA TRADING.
 *
 * This source code is licensed under the Commercial License found in the
 * LICENSE file in the root directory of this source tree.
 */
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _typeof = require("@babel/runtime/helpers/typeof");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireWildcard(require("react"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var ScrollingRegion = (0, _react.forwardRef)(function (props, ref) {
  var scrollRegionRef = (0, _react.useRef)();

  var setVisible = function setVisible(visible) {
    if (scrollRegionRef.current) {
      if (visible) {
        scrollRegionRef.current.style.display = 'block';
      } else {
        scrollRegionRef.current.style.display = 'none';
      }
    }
  };

  var setHeight = function setHeight(height) {
    if (scrollRegionRef.current) {
      scrollRegionRef.current.style.height = "".concat(height, "px");
    }
  };

  (0, _react.useImperativeHandle)(ref, function () {
    return {
      setVisible: setVisible,
      setHeight: setHeight
    };
  });
  var className = props.DEFAULT_CLASS_NAME;
  return _react.default.createElement("div", {
    ref: scrollRegionRef,
    style: (0, _defineProperty2.default)({}, props.dir === -1 ? 'top' : 'bottom', 0),
    className: className,
    onMouseEnter: props.onMouseEnter,
    onMouseLeave: props.onMouseLeave
  });
});
ScrollingRegion.defaultProps = {
  DEFAULT_CLASS_NAME: 'InovuaReactDataGrid__row-drag-scrolling-region'
};
var _default = ScrollingRegion;
exports.default = _default;