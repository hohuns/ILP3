/**
 * Copyright Â© INOVUA TRADING.
 *
 * This source code is licensed under the Commercial License found in the
 * LICENSE file in the root directory of this source tree.
 */
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
Object.defineProperty(exports, "groupColumnId", {
  enumerable: true,
  get: function get() {
    return _defaultGroupColumnId.id;
  }
});

var _react = _interopRequireDefault(require("react"));

var _defaultGroupColumnId = require("@inovua/reactdatagrid-community/normalizeColumns/defaultGroupColumnId");

var _renderGroupTool = _interopRequireDefault(require("@inovua/reactdatagrid-community/Layout/ColumnLayout/Cell/renderGroupTool"));

var _default = {
  id: _defaultGroupColumnId.id,
  groupColumn: true,
  cellSelectable: false,
  showColumnMenuSortOptions: false,
  showColumnMenuGroupOptions: false,
  showColumnMenuTool: false,
  showInContextMenu: false,
  header: 'Group',
  render: function render(_ref, _ref2) {
    var value = _ref.value,
        data = _ref.data,
        toggleGroup = _ref.toggleGroup;
    var cellProps = _ref2.cellProps;

    if (!data.__group) {
      return null;
    }

    var groupProps = cellProps.groupProps,
        rtl = cellProps.rtl;
    var shouldRenderGroupTool = cellProps.computedPivot ? groupProps.depth < cellProps.computedGroupBy.length - 1 : true;
    return _react.default.createElement(_react.default.Fragment, null, _react.default.createElement("div", {
      style: {
        display: 'inline-block',
        width: groupProps.groupNestingSize * groupProps.depth
      }
    }), shouldRenderGroupTool ? (0, _renderGroupTool.default)({
      render: groupProps.renderGroupTool,
      collapsed: groupProps.collapsed,
      rtl: rtl,
      size: 20,
      toggleGroup: toggleGroup
    }) : null, cellProps.renderGroupValue ? cellProps.renderGroupValue({
      value: value,
      data: data,
      groupSummary: data.groupSummary
    }) : value);
  },
  sortable: false,
  editable: false,
  groupBy: false
};
exports.default = _default;