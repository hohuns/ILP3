/**
 * Copyright Â© INOVUA TRADING.
 *
 * This source code is licensed under the Commercial License found in the
 * LICENSE file in the root directory of this source tree.
 */
import React from 'react';
declare const _default: {
    name: string;
    hook: (props: import("../../types").TypeDataGridProps, computedProps: import("../../types").TypeComputedProps, computedPropsRef: React.MutableRefObject<import("../../types").TypeComputedProps | null>) => {
        computeDataStep: ({ groupBy, config, computedProps, batchUpdateQueue, columnsMap, }: {
            groupBy: import("../../types").TypeGroupBy;
            config: any;
            columnsMap: import("../../types").TypeComputedColumnsMap;
            computedProps: import("../../types").TypeComputedProps;
            batchUpdateQueue: import("../../types").TypeBatchUpdateQueue;
        }) => any;
    };
    maybeAddColumns(columns: any, props: any): any;
    defaultProps: () => {
        renderGroupToolbar: ({ groupBy, columnsMap, onItemMouseDown, onGroupByChange, ref, theme, onSortClick, headerGroupPlaceholderText, renderSortTool, renderGroupItem, disableGroupByToolbar, rtl, }: {
            groupBy: any;
            columnsMap: any;
            onItemMouseDown: any;
            onGroupByChange: any;
            ref: any;
            theme: any;
            onSortClick: any;
            headerGroupPlaceholderText: any;
            renderSortTool: any;
            renderGroupItem: any;
            disableGroupByToolbar: any;
            rtl: any;
        }) => JSX.Element | null;
        renderDragGroupItem(ref: any): JSX.Element;
    };
};
export default _default;
