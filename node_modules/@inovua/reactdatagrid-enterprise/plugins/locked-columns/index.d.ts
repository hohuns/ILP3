/**
 * Copyright Â© INOVUA TRADING.
 *
 * This source code is licensed under the Commercial License found in the
 * LICENSE file in the root directory of this source tree.
 */
/// <reference types="react" />
declare const _default: {
    name: string;
    hook: () => void;
    defaultProps: () => {
        updateLockedWrapperPositions: ({ computedRowExpandEnabled, computedStickyRows, computedFooterRows, computedLockedRows, rowDetailsWidth, lockedStartColumns, lockedEndColumns, virtualListBorderLeft, lockedRows, getScrollLeftMax, rtl, }: {
            computedRowExpandEnabled: any;
            computedStickyRows: any;
            computedFooterRows: any;
            computedLockedRows: any;
            rowDetailsWidth: any;
            lockedStartColumns: any;
            lockedEndColumns: any;
            virtualListBorderLeft: any;
            lockedRows: any;
            getScrollLeftMax: any;
            rtl: any;
        }, scrollLeft: any, _: any) => void;
    };
    renderLockedStartCells: ({ lockedStartCount, isHeader, lockedStartColumns, virtualizeColumns, rtl, getScrollLeftMax, lockedStartContent, initialCells, sticky, scrollLeft, groupProps, expandGroupTitle, lockedEndColumns, nativeScroll, scrollbarWidth, virtualListBorderLeft, virtualListBorderRight, style, addTransitionDuration, lockedEndContent, hasRowDetails, initialRowHeight, rowHeight, lockedEndStartIndex, availableWidth, }: {
        lockedStartCount: any;
        isHeader: any;
        lockedStartColumns: any;
        virtualizeColumns: any;
        rtl: any;
        getScrollLeftMax: any;
        lockedStartContent: any;
        initialCells: any;
        sticky: any;
        scrollLeft: any;
        groupProps: any;
        expandGroupTitle: any;
        lockedEndColumns: any;
        nativeScroll: any;
        scrollbarWidth: any;
        virtualListBorderLeft: any;
        virtualListBorderRight: any;
        style: any;
        addTransitionDuration: any;
        lockedEndContent: any;
        hasRowDetails: any;
        initialRowHeight: any;
        rowHeight: any;
        lockedEndStartIndex: any;
        availableWidth: any;
    }) => JSX.Element | undefined;
    renderLockedEndCells: ({ rtl, scrollLeft, groupProps, expandGroupTitle, lockedEndColumns, nativeScroll, scrollbarWidth, isHeader, virtualListBorderLeft, virtualListBorderRight, sticky, style, addTransitionDuration, lockedEndContent, initialCells, hasRowDetails, initialRowHeight, lockedEndStartIndex, availableWidth, virtualizeColumns, }: {
        rtl: any;
        scrollLeft: any;
        groupProps: any;
        expandGroupTitle: any;
        lockedEndColumns: any;
        nativeScroll: any;
        scrollbarWidth: any;
        isHeader: any;
        virtualListBorderLeft: any;
        virtualListBorderRight: any;
        sticky: any;
        style: any;
        addTransitionDuration: any;
        lockedEndContent: any;
        initialCells: any;
        hasRowDetails: any;
        initialRowHeight: any;
        lockedEndStartIndex: any;
        availableWidth: any;
        virtualizeColumns: any;
    }) => JSX.Element;
};
export default _default;
