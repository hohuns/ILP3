/** 
 * Copyright Â© INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
/// <reference types="react" />
declare const _default: {
    name: string;
    hook: (props: {}, computedProps: TypeComputedProps, computedPropsRef: import("react").MutableRefObject<any>) => {
        onRowContextMenu: (rowProps: TypeRowProps, event: import("react").SyntheticEvent<Element, Event>) => void;
        getMenuAvailableHeight: () => number;
        showRowContextMenu: (alignTo: any, rowProps: TypeRowProps, cellProps: TypeCellProps, onHide: (...args: any[]) => void) => void;
        showColumnContextMenu: (alignTo: any, cellProps: TypeCellProps, cellInstance: any, onHide: (...args: any[]) => void) => void;
        hideColumnContextMenu: () => void;
        hideRowContextMenu: () => void;
        columnContextMenuProps: any;
        columnContextMenuInstanceProps: any;
        rowContextMenuProps: any;
        columnContextMenuInfoRef: import("react").MutableRefObject<{
            menuAlignTo: any;
            getMenuConstrainTo: () => any;
            menuOnHide: (...args: any[]) => void;
        }>;
        rowContextMenuInfoRef: import("react").MutableRefObject<{
            menuAlignTo: any;
            getMenuConstrainTo: () => any;
            cellProps?: any;
            menuOnHide: (...args: any[]) => void;
        }>;
        setColumnContextMenuProps: import("react").Dispatch<any>;
        setColumnContextMenuInstanceProps: import("react").Dispatch<any>;
        setRowContextMenuProps: import("react").Dispatch<any>;
        preventIEMenuCloseRef: import("react").MutableRefObject<boolean>;
        columnContextMenuIndex: import("react").MutableRefObject<number>;
    };
    renderColumnContextMenu: (computedProps: TypeComputedProps, computedPropsRef: import("react").MutableRefObject<any>) => any;
    renderRowContextMenu: (computedProps: TypeComputedProps, computedPropsRef: import("react").MutableRefObject<any>) => any;
    defaultProps: () => {
        showColumnMenuTool: boolean;
    };
};
export default _default;
