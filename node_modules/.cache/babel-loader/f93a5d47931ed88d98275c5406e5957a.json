{"ast":null,"code":"/** \n * Copyright Â© INOVUA TRADING.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _react = require(\"react\");\n\nvar _batchUpdate = _interopRequireDefault(require(\"../../utils/batchUpdate\"));\n\nvar _handleSelection = require(\"./handleSelection\");\n\nvar _handleRowNavigation = _interopRequireDefault(require(\"./handleRowNavigation\"));\n\nvar _handleCellNavigation = _interopRequireDefault(require(\"./handleCellNavigation\"));\n\nvar _containsNode = _interopRequireDefault(require(\"../../common/containsNode\"));\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      (0, _defineProperty2.default)(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nvar _default = function _default(props, computedProps, computedPropsRef) {\n  var computedOnKeyDown = function computedOnKeyDown(event) {\n    if (props.onKeyDown) {\n      props.onKeyDown(event);\n    }\n\n    var computedProps = computedPropsRef.current;\n\n    if (!computedProps) {\n      return;\n    }\n\n    if (event.nativeEvent && event.nativeEvent.__handled_in_details) {\n      return;\n    }\n\n    var sameElement = event.target === computedProps.getScrollingElement();\n    var handled = false;\n\n    if (event.key === 'Escape' && !sameElement && computedProps.autoFocusOnEditEscape) {\n      handled = true;\n      computedProps.focus();\n    }\n\n    if (!sameElement) {\n      return;\n    }\n\n    if (computedProps.computedHasRowNavigation) {\n      handled = (0, _handleRowNavigation.default)(event, computedProps);\n    } else if (computedProps.computedCellNavigationEnabled) {\n      handled = (0, _handleCellNavigation.default)(event, computedProps);\n    }\n\n    var activeItem = computedProps.computedActiveItem;\n    var activeIndex = computedProps.computedActiveIndex;\n    var isGroup = computedProps.isGroup(activeItem);\n    var rowExpandEnabled = computedProps.computedRowExpandEnabled;\n    var rowExpandable = activeItem && computedProps.isRowExpandableAt ? computedProps.isRowExpandableAt(activeIndex) : false;\n    var rowExpanded = rowExpandable && activeItem ? computedProps.isRowExpanded(activeItem) : false;\n    var treeEnabled = computedProps.computedTreeEnabled;\n    var nodeExpandable = treeEnabled && activeItem && computedProps.isNodeExpandableAt ? computedProps.isNodeExpandableAt(activeIndex) : false;\n    var nodeExpanded = treeEnabled && activeItem && computedProps.isNodeExpanded ? computedProps.isNodeExpanded(activeItem) : false;\n    var rowSelectionEnabled = computedProps.computedRowSelectionEnabled;\n    var keyShortcutArg = {\n      event: event,\n      data: activeItem,\n      index: activeIndex,\n      activeItem: activeItem,\n      activeIndex: activeIndex,\n      handle: computedPropsRef,\n      isGroup: isGroup,\n      treeEnabled: treeEnabled,\n      rowSelectionEnabled: rowSelectionEnabled,\n      nodeExpandable: nodeExpandable,\n      nodeExpanded: nodeExpanded,\n      rowExpandEnabled: rowExpandEnabled,\n      rowExpandable: rowExpandable,\n      rowExpanded: rowExpanded\n    };\n    var editKeyPressed = !!computedProps.isStartEditKeyPressed(keyShortcutArg);\n    var expandKeyPressed = !!computedProps.isExpandKeyPressed(keyShortcutArg);\n    var collapseKeyPressed = !expandKeyPressed ? computedProps.isCollapseKeyPressed(keyShortcutArg) : false;\n\n    if (expandKeyPressed) {\n      handled = true;\n    }\n\n    if (expandKeyPressed && activeItem) {\n      if (rowExpandEnabled && rowExpandable && !rowExpanded) {\n        computedProps.setRowExpandedAt(activeIndex, true);\n      } else {\n        if (isGroup) {\n          computedProps.expandGroup(activeItem);\n        } else if (treeEnabled && nodeExpandable && !nodeExpanded) {\n          computedProps.setNodeExpandedAt(activeIndex, true);\n        }\n      }\n    }\n\n    if (collapseKeyPressed) {\n      handled = true;\n    }\n\n    if (collapseKeyPressed && activeItem) {\n      if (rowExpandEnabled && rowExpandable && rowExpanded) {\n        computedProps.setRowExpandedAt(activeIndex, false);\n      } else {\n        if (isGroup) {\n          computedProps.collapseGroup(activeItem);\n        } else if (treeEnabled && nodeExpandable && nodeExpanded) {\n          computedProps.setNodeExpandedAt(activeIndex, false);\n        }\n      }\n    }\n\n    if (editKeyPressed) {\n      handled = true;\n\n      if (computedProps.visibleColumns && computedProps.visibleColumns.length) {\n        if (computedProps.tryStartEdit) {\n          computedProps.tryStartEdit({\n            rowIndex: activeItem ? activeIndex : 0,\n            columnId: computedProps.visibleColumns[0].id,\n            dir: 1\n          });\n        }\n      }\n    }\n\n    if (activeItem && event.key === 'Enter') {\n      if (rowExpandEnabled && rowExpandable) {\n        if (!rowSelectionEnabled) {\n          computedProps.toggleRowExpand(activeIndex);\n          handled = true;\n        }\n      } else {\n        if (isGroup) {\n          computedProps.toggleGroup(activeItem);\n          handled = true;\n        } else if (nodeExpandable && !rowSelectionEnabled && computedProps.computedTreeEnabled) {\n          computedProps.toggleNodeExpand(activeItem);\n          handled = true;\n        }\n      }\n    }\n\n    if (handled) {\n      event.preventDefault();\n\n      if (event.nativeEvent) {\n        event.nativeEvent.__handled_in_details = true;\n      }\n    }\n\n    if (computedProps.enableClipboard) {\n      if ((event.ctrlKey || event.metaKey) && event.key == 'c') {\n        if (computedProps.computedCellSelection) {\n          computedProps.copySelectedCellsToClipboard && computedProps.copySelectedCellsToClipboard();\n        } else {\n          computedProps.copyActiveRowToClipboard && computedProps.copyActiveRowToClipboard();\n        }\n      }\n\n      if ((event.ctrlKey || event.metaKey) && event.key == 'v') {\n        if (computedProps.computedCellSelection) {\n          computedProps.pasteSelectedCellsFromClipboard && computedProps.pasteSelectedCellsFromClipboard();\n        } else {\n          computedProps.pasteActiveRowFromClipboard && computedProps.pasteActiveRowFromClipboard();\n        }\n      }\n    }\n  };\n\n  var onFullBlur = (0, _react.useCallback)(function (_event) {}, []);\n  var isGroup = (0, _react.useCallback)(function (item) {\n    return !!item && !!item.__group;\n  }, []);\n  var computedOnFocus = (0, _react.useCallback)(function (event) {\n    var computedProps = computedPropsRef.current;\n\n    if (!computedProps) {\n      return;\n    }\n\n    event.preventDefault();\n\n    if (props.onFocus) {\n      props.onFocus(event);\n    }\n\n    if (event.nativeEvent.preventParentFocus) {\n      onFullBlur(event);\n      return;\n    }\n\n    event.nativeEvent.preventParentFocus = true;\n\n    if (computedProps.computedWillReceiveFocusRef.current) {\n      computedProps.computedWillReceiveFocusRef.current = false;\n      return;\n    }\n\n    if (!computedProps.computedFocused) {\n      computedProps.computedSetFocused(true);\n    }\n  }, []);\n  var computedOnBlur = (0, _react.useCallback)(function (event) {\n    var computedProps = computedPropsRef.current;\n\n    if (!computedProps) {\n      return;\n    }\n\n    if (computedProps.isInEdit.current) {\n      return;\n    }\n\n    event.preventDefault();\n\n    if (computedProps.preventBlurOnContextMenuOpen && computedProps.preventBlurOnContextMenuOpen.current) {\n      return;\n    }\n\n    var domNode = computedProps.getDOMNode();\n\n    if (event.relatedTarget && (0, _containsNode.default)(domNode, event.relatedTarget)) {\n      return;\n    }\n\n    if (props.onBlur) {\n      props.onBlur(event);\n    }\n\n    var computedActiveIndex = computedProps.computedActiveIndex;\n\n    if (computedActiveIndex >= 0) {\n      computedProps.doSetLastActiveIndex(computedActiveIndex);\n    }\n\n    computedProps.setActiveIndex(-1);\n    computedProps.computedSetFocused(false);\n  }, []);\n  var onGroupRowClick = (0, _react.useCallback)(function (rowProps, _ref, queue) {\n    var enableKeyboardNavigation = _ref.enableKeyboardNavigation,\n        setActiveIndex = _ref.setActiveIndex;\n\n    if (rowProps.groupProps || rowProps.data && rowProps.data.__group) {\n      if (enableKeyboardNavigation) {\n        queue(function () {\n          setActiveIndex(rowProps.rowIndex);\n        });\n      }\n\n      queue.commit();\n      return true;\n    }\n\n    return false;\n  }, []);\n\n  var handleRowSelectionOnClick = function handleRowSelectionOnClick(event, rowProps, computedProps, queue) {\n    if (event.nativeEvent.skipSelect) {\n      if (computedProps.enableKeyboardNavigation) {\n        queue(function () {\n          computedProps.setActiveIndex(rowProps.rowIndex);\n        });\n      }\n\n      queue.commit();\n      return;\n    }\n\n    var shiftKey = event.shiftKey,\n        metaKey = event.metaKey,\n        ctrlKey = event.ctrlKey;\n    var multiSelectKey = shiftKey || metaKey || ctrlKey;\n    var autoCheckboxColumn = props.autoCheckboxColumn;\n\n    if (autoCheckboxColumn && multiSelectKey) {\n      return;\n    }\n\n    if ((0, _handleSelection.handleSelection)(rowProps, computedProps, event, queue) !== false) {\n      queue(function () {\n        computedProps.setActiveIndex(rowProps.rowIndex);\n      });\n    }\n  };\n\n  var computedOnRowMouseDown = (0, _react.useCallback)(function () {}, []);\n  var computedOnRowClick = (0, _react.useCallback)(function (event, rowProps) {\n    var computedProps = computedPropsRef.current;\n\n    if (!computedProps) {\n      return;\n    }\n\n    var preventRowSelectionOnClickWithMouseMove = computedProps.preventRowSelectionOnClickWithMouseMove,\n        initialProps = computedProps.initialProps;\n\n    if (initialProps.onRowClick) {\n      initialProps.onRowClick({\n        rowIndex: rowProps.rowIndex,\n        remoteRowIndex: rowProps.remoteRowIndex,\n        groupProps: rowProps.groupProps,\n        empty: rowProps.empty,\n        columns: rowProps.columns,\n        dataSourceArray: rowProps.dataSourceArray,\n        data: rowProps.data\n      }, event);\n    }\n\n    var queue = (0, _batchUpdate.default)();\n    var lastMouseDownEventProps = computedProps.lastMouseDownEventPropsRef.current;\n    var mouseDidNotMove = event.type !== 'click';\n\n    if (lastMouseDownEventProps && event.type === 'click') {\n      var pageX = lastMouseDownEventProps.pageX,\n          pageY = lastMouseDownEventProps.pageY,\n          rowIndex = lastMouseDownEventProps.rowIndex;\n      mouseDidNotMove = pageX === Math.floor(event.pageX) && pageY === Math.floor(event.pageY) && rowIndex === rowProps.rowIndex;\n    }\n\n    if (!computedProps.computedFocused) {\n      queue(function () {\n        computedProps.computedSetFocused(true);\n      });\n    }\n\n    if (computedProps.computedCellSelectionEnabled) {\n      queue.commit();\n      return;\n    }\n\n    if (onGroupRowClick(rowProps, computedProps, queue)) {\n      queue.commit();\n      return;\n    }\n\n    if ((!props.checkboxOnlyRowSelect || event.type !== 'click') && (preventRowSelectionOnClickWithMouseMove ? mouseDidNotMove : true)) {\n      handleRowSelectionOnClick(event, rowProps, computedProps, queue);\n    } else {\n      if (computedProps.enableKeyboardNavigation && computedProps.computedHasRowNavigation) {\n        queue(function () {\n          computedProps.setActiveIndex(rowProps.rowIndex);\n        });\n      }\n    }\n\n    queue.commit();\n  }, []);\n  var onCellClickAction = (0, _react.useCallback)(function (event, cellProps) {\n    if (cellProps.groupProps || cellProps.cellSelectable === false) {\n      return;\n    }\n\n    var computedProps = computedPropsRef.current;\n\n    if (!computedProps) {\n      return;\n    }\n\n    var hasCellSelection = computedProps.computedCellSelectionEnabled;\n    var cellMultiSelect = computedProps.computedCellMultiSelectionEnabled;\n    var queue = (0, _batchUpdate.default)();\n\n    if (hasCellSelection) {\n      var ctrlKey = event.ctrlKey || event.metaKey;\n      var append = cellMultiSelect && ctrlKey;\n      var cellCoords = [cellProps.rowIndex, cellProps.columnIndex];\n      var key = computedProps.getCellSelectionKey(cellProps);\n      var shiftKey = event.shiftKey && (computedProps.computedActiveCell || computedProps.lastSelectedCell);\n\n      if (shiftKey && cellMultiSelect) {\n        var cellSelection = computedProps.getCellSelectionBetween(computedProps.computedActiveCell || computedProps.lastSelectedCell || undefined, cellCoords);\n        queue(function () {\n          computedProps.setLastCellInRange(Object.keys(cellSelection).pop() || '');\n          computedProps.setCellSelection(cellSelection);\n        });\n      } else {\n        var cellSelectionMap = computedProps.computedCellSelection;\n        var isSelected = !!cellSelectionMap[key];\n        var newCellSelectionMap = append ? Object.assign({}, cellSelectionMap) : {};\n\n        if (isSelected && (cellMultiSelect || computedProps.initialProps.toggleCellSelectOnClick || ctrlKey)) {\n          delete newCellSelectionMap[key];\n        } else {\n          if (!shiftKey) {\n            queue(function () {\n              computedProps.setLastSelectedCell(cellCoords);\n            });\n          }\n\n          newCellSelectionMap[key] = true;\n        }\n\n        queue(function () {\n          computedProps.setCellSelection(newCellSelectionMap);\n        });\n      }\n    }\n\n    var shouldSetActiveCell = computedProps.computedCellNavigationEnabled && (!event.shiftKey || !cellMultiSelect);\n    queue(function () {\n      if (shouldSetActiveCell) {\n        computedProps.setActiveCell([cellProps.rowIndex, cellProps.columnIndex]);\n      }\n    });\n    queue.commit();\n  }, []);\n  var setItemAtAsSelected = (0, _react.useCallback)(function (index, event) {\n    var computedProps = computedPropsRef.current;\n\n    if (!computedProps) {\n      return;\n    }\n\n    var computedRowSelectionEnabled = computedProps.computedRowSelectionEnabled,\n        getItemAt = computedProps.getItemAt,\n        getItemId = computedProps.getItemId;\n    var item = getItemAt(index);\n    var itemId = item ? getItemId(item) : undefined;\n\n    if (itemId === undefined) {\n      return;\n    }\n\n    if (computedRowSelectionEnabled) {\n      (0, _handleSelection.handleSelection)({\n        rowIndex: index,\n        data: item\n      }, computedProps, event || {\n        nativeEvent: null\n      });\n    }\n  }, []);\n  var selectionIndexRef = (0, _react.useRef)(null);\n  var shiftKeyIndexRef = (0, _react.useRef)(null);\n  var lastMouseDownEventPropsRef = (0, _react.useRef)({\n    rowIndex: -1,\n    pageX: -1,\n    pageY: -1\n  });\n  var computedOnCellMouseDown = (0, _react.useCallback)(function (event, cellProps) {\n    lastMouseDownEventPropsRef.current = {\n      rowIndex: cellProps.rowIndex,\n      pageX: Math.floor(event.pageX),\n      pageY: Math.floor(event.pageY)\n    };\n    var computedProps = computedPropsRef.current;\n\n    if (!computedProps) {\n      return;\n    }\n\n    if (computedProps.columnUserSelect && event.shiftKey && computedProps.preventDefaultTextSelectionOnShiftMouseDown) {\n      event.preventDefault();\n    }\n\n    computedProps.onCellClickAction(event, cellProps);\n\n    if (computedProps.onCellSelectionDraggerMouseDown) {\n      computedProps.onCellSelectionDraggerMouseDown(event, cellProps);\n    }\n  }, []);\n  var computedActiveIndex = computedProps.computedActiveIndex;\n  return {\n    selectionIndexRef: selectionIndexRef,\n    shiftKeyIndexRef: shiftKeyIndexRef,\n    onCellClickAction: onCellClickAction,\n    computedOnKeyDown: computedOnKeyDown,\n    computedOnFocus: computedOnFocus,\n    computedOnBlur: computedOnBlur,\n    computedOnRowClick: computedOnRowClick,\n    computedOnRowMouseDown: computedOnRowMouseDown,\n    computedOnCellMouseDown: computedOnCellMouseDown,\n    isGroup: isGroup,\n    computedActiveItem: computedActiveIndex !== -1 && computedProps.data ? computedProps.data[computedActiveIndex] : null,\n    lastMouseDownEventPropsRef: lastMouseDownEventPropsRef,\n    toggleActiveRowSelection: function toggleActiveRowSelection(event) {\n      var computedProps = computedPropsRef.current;\n\n      if (!computedProps) {\n        return;\n      }\n\n      var computedActiveIndex = computedProps.computedActiveIndex;\n\n      if (computedActiveIndex == -1) {\n        return;\n      }\n\n      setItemAtAsSelected(computedActiveIndex, event);\n    },\n    rowProps: _objectSpread(_objectSpread({}, computedProps.initialProps.rowProps), {}, {\n      onMouseDown: function onMouseDown(event) {\n        if (computedProps.initialProps.rowProps && computedProps.initialProps.rowProps.onMouseDown) {\n          computedProps.initialProps.rowProps.onMouseDown(event);\n        }\n\n        if (!computedProps.computedFocused && computedProps.enableKeyboardNavigation) {\n          computedProps.computedWillReceiveFocusRef.current = true;\n        }\n      }\n    })\n  };\n};\n\nexports.default = _default;","map":{"version":3,"sources":["/Users/sungjaejoo/Desktop/ááµáá¢á¨áá³/ááµá«áá¥áá©áá¥/ILP-main/node_modules/@inovua/reactdatagrid-community/hooks/useRow/index.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_defineProperty2","_react","_batchUpdate","_handleSelection","_handleRowNavigation","_handleCellNavigation","_containsNode","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","_default","props","computedProps","computedPropsRef","computedOnKeyDown","event","onKeyDown","current","nativeEvent","__handled_in_details","sameElement","getScrollingElement","handled","autoFocusOnEditEscape","focus","computedHasRowNavigation","computedCellNavigationEnabled","activeItem","computedActiveItem","activeIndex","computedActiveIndex","isGroup","rowExpandEnabled","computedRowExpandEnabled","rowExpandable","isRowExpandableAt","rowExpanded","isRowExpanded","treeEnabled","computedTreeEnabled","nodeExpandable","isNodeExpandableAt","nodeExpanded","isNodeExpanded","rowSelectionEnabled","computedRowSelectionEnabled","keyShortcutArg","data","index","handle","editKeyPressed","isStartEditKeyPressed","expandKeyPressed","isExpandKeyPressed","collapseKeyPressed","isCollapseKeyPressed","setRowExpandedAt","expandGroup","setNodeExpandedAt","collapseGroup","visibleColumns","tryStartEdit","rowIndex","columnId","id","dir","toggleRowExpand","toggleGroup","toggleNodeExpand","preventDefault","enableClipboard","ctrlKey","metaKey","computedCellSelection","copySelectedCellsToClipboard","copyActiveRowToClipboard","pasteSelectedCellsFromClipboard","pasteActiveRowFromClipboard","onFullBlur","useCallback","_event","item","__group","computedOnFocus","onFocus","preventParentFocus","computedWillReceiveFocusRef","computedFocused","computedSetFocused","computedOnBlur","isInEdit","preventBlurOnContextMenuOpen","domNode","getDOMNode","relatedTarget","onBlur","doSetLastActiveIndex","setActiveIndex","onGroupRowClick","rowProps","_ref","queue","enableKeyboardNavigation","groupProps","commit","handleRowSelectionOnClick","skipSelect","shiftKey","multiSelectKey","autoCheckboxColumn","handleSelection","computedOnRowMouseDown","computedOnRowClick","preventRowSelectionOnClickWithMouseMove","initialProps","onRowClick","remoteRowIndex","empty","columns","dataSourceArray","lastMouseDownEventProps","lastMouseDownEventPropsRef","mouseDidNotMove","type","pageX","pageY","Math","floor","computedCellSelectionEnabled","checkboxOnlyRowSelect","onCellClickAction","cellProps","cellSelectable","hasCellSelection","cellMultiSelect","computedCellMultiSelectionEnabled","append","cellCoords","columnIndex","getCellSelectionKey","computedActiveCell","lastSelectedCell","cellSelection","getCellSelectionBetween","undefined","setLastCellInRange","pop","setCellSelection","cellSelectionMap","isSelected","newCellSelectionMap","assign","toggleCellSelectOnClick","setLastSelectedCell","shouldSetActiveCell","setActiveCell","setItemAtAsSelected","getItemAt","getItemId","itemId","selectionIndexRef","useRef","shiftKeyIndexRef","computedOnCellMouseDown","columnUserSelect","preventDefaultTextSelectionOnShiftMouseDown","onCellSelectionDraggerMouseDown","toggleActiveRowSelection","onMouseDown"],"mappings":"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","sourcesContent":["/** \n * Copyright Â© INOVUA TRADING.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _react = require(\"react\");\n\nvar _batchUpdate = _interopRequireDefault(require(\"../../utils/batchUpdate\"));\n\nvar _handleSelection = require(\"./handleSelection\");\n\nvar _handleRowNavigation = _interopRequireDefault(require(\"./handleRowNavigation\"));\n\nvar _handleCellNavigation = _interopRequireDefault(require(\"./handleCellNavigation\"));\n\nvar _containsNode = _interopRequireDefault(require(\"../../common/containsNode\"));\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nvar _default = function _default(props, computedProps, computedPropsRef) {\n  var computedOnKeyDown = function computedOnKeyDown(event) {\n    if (props.onKeyDown) {\n      props.onKeyDown(event);\n    }\n\n    var computedProps = computedPropsRef.current;\n\n    if (!computedProps) {\n      return;\n    }\n\n    if (event.nativeEvent && event.nativeEvent.__handled_in_details) {\n      return;\n    }\n\n    var sameElement = event.target === computedProps.getScrollingElement();\n    var handled = false;\n\n    if (event.key === 'Escape' && !sameElement && computedProps.autoFocusOnEditEscape) {\n      handled = true;\n      computedProps.focus();\n    }\n\n    if (!sameElement) {\n      return;\n    }\n\n    if (computedProps.computedHasRowNavigation) {\n      handled = (0, _handleRowNavigation.default)(event, computedProps);\n    } else if (computedProps.computedCellNavigationEnabled) {\n      handled = (0, _handleCellNavigation.default)(event, computedProps);\n    }\n\n    var activeItem = computedProps.computedActiveItem;\n    var activeIndex = computedProps.computedActiveIndex;\n    var isGroup = computedProps.isGroup(activeItem);\n    var rowExpandEnabled = computedProps.computedRowExpandEnabled;\n    var rowExpandable = activeItem && computedProps.isRowExpandableAt ? computedProps.isRowExpandableAt(activeIndex) : false;\n    var rowExpanded = rowExpandable && activeItem ? computedProps.isRowExpanded(activeItem) : false;\n    var treeEnabled = computedProps.computedTreeEnabled;\n    var nodeExpandable = treeEnabled && activeItem && computedProps.isNodeExpandableAt ? computedProps.isNodeExpandableAt(activeIndex) : false;\n    var nodeExpanded = treeEnabled && activeItem && computedProps.isNodeExpanded ? computedProps.isNodeExpanded(activeItem) : false;\n    var rowSelectionEnabled = computedProps.computedRowSelectionEnabled;\n    var keyShortcutArg = {\n      event: event,\n      data: activeItem,\n      index: activeIndex,\n      activeItem: activeItem,\n      activeIndex: activeIndex,\n      handle: computedPropsRef,\n      isGroup: isGroup,\n      treeEnabled: treeEnabled,\n      rowSelectionEnabled: rowSelectionEnabled,\n      nodeExpandable: nodeExpandable,\n      nodeExpanded: nodeExpanded,\n      rowExpandEnabled: rowExpandEnabled,\n      rowExpandable: rowExpandable,\n      rowExpanded: rowExpanded\n    };\n    var editKeyPressed = !!computedProps.isStartEditKeyPressed(keyShortcutArg);\n    var expandKeyPressed = !!computedProps.isExpandKeyPressed(keyShortcutArg);\n    var collapseKeyPressed = !expandKeyPressed ? computedProps.isCollapseKeyPressed(keyShortcutArg) : false;\n\n    if (expandKeyPressed) {\n      handled = true;\n    }\n\n    if (expandKeyPressed && activeItem) {\n      if (rowExpandEnabled && rowExpandable && !rowExpanded) {\n        computedProps.setRowExpandedAt(activeIndex, true);\n      } else {\n        if (isGroup) {\n          computedProps.expandGroup(activeItem);\n        } else if (treeEnabled && nodeExpandable && !nodeExpanded) {\n          computedProps.setNodeExpandedAt(activeIndex, true);\n        }\n      }\n    }\n\n    if (collapseKeyPressed) {\n      handled = true;\n    }\n\n    if (collapseKeyPressed && activeItem) {\n      if (rowExpandEnabled && rowExpandable && rowExpanded) {\n        computedProps.setRowExpandedAt(activeIndex, false);\n      } else {\n        if (isGroup) {\n          computedProps.collapseGroup(activeItem);\n        } else if (treeEnabled && nodeExpandable && nodeExpanded) {\n          computedProps.setNodeExpandedAt(activeIndex, false);\n        }\n      }\n    }\n\n    if (editKeyPressed) {\n      handled = true;\n\n      if (computedProps.visibleColumns && computedProps.visibleColumns.length) {\n        if (computedProps.tryStartEdit) {\n          computedProps.tryStartEdit({\n            rowIndex: activeItem ? activeIndex : 0,\n            columnId: computedProps.visibleColumns[0].id,\n            dir: 1\n          });\n        }\n      }\n    }\n\n    if (activeItem && event.key === 'Enter') {\n      if (rowExpandEnabled && rowExpandable) {\n        if (!rowSelectionEnabled) {\n          computedProps.toggleRowExpand(activeIndex);\n          handled = true;\n        }\n      } else {\n        if (isGroup) {\n          computedProps.toggleGroup(activeItem);\n          handled = true;\n        } else if (nodeExpandable && !rowSelectionEnabled && computedProps.computedTreeEnabled) {\n          computedProps.toggleNodeExpand(activeItem);\n          handled = true;\n        }\n      }\n    }\n\n    if (handled) {\n      event.preventDefault();\n\n      if (event.nativeEvent) {\n        event.nativeEvent.__handled_in_details = true;\n      }\n    }\n\n    if (computedProps.enableClipboard) {\n      if ((event.ctrlKey || event.metaKey) && event.key == 'c') {\n        if (computedProps.computedCellSelection) {\n          computedProps.copySelectedCellsToClipboard && computedProps.copySelectedCellsToClipboard();\n        } else {\n          computedProps.copyActiveRowToClipboard && computedProps.copyActiveRowToClipboard();\n        }\n      }\n\n      if ((event.ctrlKey || event.metaKey) && event.key == 'v') {\n        if (computedProps.computedCellSelection) {\n          computedProps.pasteSelectedCellsFromClipboard && computedProps.pasteSelectedCellsFromClipboard();\n        } else {\n          computedProps.pasteActiveRowFromClipboard && computedProps.pasteActiveRowFromClipboard();\n        }\n      }\n    }\n  };\n\n  var onFullBlur = (0, _react.useCallback)(function (_event) {}, []);\n  var isGroup = (0, _react.useCallback)(function (item) {\n    return !!item && !!item.__group;\n  }, []);\n  var computedOnFocus = (0, _react.useCallback)(function (event) {\n    var computedProps = computedPropsRef.current;\n\n    if (!computedProps) {\n      return;\n    }\n\n    event.preventDefault();\n\n    if (props.onFocus) {\n      props.onFocus(event);\n    }\n\n    if (event.nativeEvent.preventParentFocus) {\n      onFullBlur(event);\n      return;\n    }\n\n    event.nativeEvent.preventParentFocus = true;\n\n    if (computedProps.computedWillReceiveFocusRef.current) {\n      computedProps.computedWillReceiveFocusRef.current = false;\n      return;\n    }\n\n    if (!computedProps.computedFocused) {\n      computedProps.computedSetFocused(true);\n    }\n  }, []);\n  var computedOnBlur = (0, _react.useCallback)(function (event) {\n    var computedProps = computedPropsRef.current;\n\n    if (!computedProps) {\n      return;\n    }\n\n    if (computedProps.isInEdit.current) {\n      return;\n    }\n\n    event.preventDefault();\n\n    if (computedProps.preventBlurOnContextMenuOpen && computedProps.preventBlurOnContextMenuOpen.current) {\n      return;\n    }\n\n    var domNode = computedProps.getDOMNode();\n\n    if (event.relatedTarget && (0, _containsNode.default)(domNode, event.relatedTarget)) {\n      return;\n    }\n\n    if (props.onBlur) {\n      props.onBlur(event);\n    }\n\n    var computedActiveIndex = computedProps.computedActiveIndex;\n\n    if (computedActiveIndex >= 0) {\n      computedProps.doSetLastActiveIndex(computedActiveIndex);\n    }\n\n    computedProps.setActiveIndex(-1);\n    computedProps.computedSetFocused(false);\n  }, []);\n  var onGroupRowClick = (0, _react.useCallback)(function (rowProps, _ref, queue) {\n    var enableKeyboardNavigation = _ref.enableKeyboardNavigation,\n        setActiveIndex = _ref.setActiveIndex;\n\n    if (rowProps.groupProps || rowProps.data && rowProps.data.__group) {\n      if (enableKeyboardNavigation) {\n        queue(function () {\n          setActiveIndex(rowProps.rowIndex);\n        });\n      }\n\n      queue.commit();\n      return true;\n    }\n\n    return false;\n  }, []);\n\n  var handleRowSelectionOnClick = function handleRowSelectionOnClick(event, rowProps, computedProps, queue) {\n    if (event.nativeEvent.skipSelect) {\n      if (computedProps.enableKeyboardNavigation) {\n        queue(function () {\n          computedProps.setActiveIndex(rowProps.rowIndex);\n        });\n      }\n\n      queue.commit();\n      return;\n    }\n\n    var shiftKey = event.shiftKey,\n        metaKey = event.metaKey,\n        ctrlKey = event.ctrlKey;\n    var multiSelectKey = shiftKey || metaKey || ctrlKey;\n    var autoCheckboxColumn = props.autoCheckboxColumn;\n\n    if (autoCheckboxColumn && multiSelectKey) {\n      return;\n    }\n\n    if ((0, _handleSelection.handleSelection)(rowProps, computedProps, event, queue) !== false) {\n      queue(function () {\n        computedProps.setActiveIndex(rowProps.rowIndex);\n      });\n    }\n  };\n\n  var computedOnRowMouseDown = (0, _react.useCallback)(function () {}, []);\n  var computedOnRowClick = (0, _react.useCallback)(function (event, rowProps) {\n    var computedProps = computedPropsRef.current;\n\n    if (!computedProps) {\n      return;\n    }\n\n    var preventRowSelectionOnClickWithMouseMove = computedProps.preventRowSelectionOnClickWithMouseMove,\n        initialProps = computedProps.initialProps;\n\n    if (initialProps.onRowClick) {\n      initialProps.onRowClick({\n        rowIndex: rowProps.rowIndex,\n        remoteRowIndex: rowProps.remoteRowIndex,\n        groupProps: rowProps.groupProps,\n        empty: rowProps.empty,\n        columns: rowProps.columns,\n        dataSourceArray: rowProps.dataSourceArray,\n        data: rowProps.data\n      }, event);\n    }\n\n    var queue = (0, _batchUpdate.default)();\n    var lastMouseDownEventProps = computedProps.lastMouseDownEventPropsRef.current;\n    var mouseDidNotMove = event.type !== 'click';\n\n    if (lastMouseDownEventProps && event.type === 'click') {\n      var pageX = lastMouseDownEventProps.pageX,\n          pageY = lastMouseDownEventProps.pageY,\n          rowIndex = lastMouseDownEventProps.rowIndex;\n      mouseDidNotMove = pageX === Math.floor(event.pageX) && pageY === Math.floor(event.pageY) && rowIndex === rowProps.rowIndex;\n    }\n\n    if (!computedProps.computedFocused) {\n      queue(function () {\n        computedProps.computedSetFocused(true);\n      });\n    }\n\n    if (computedProps.computedCellSelectionEnabled) {\n      queue.commit();\n      return;\n    }\n\n    if (onGroupRowClick(rowProps, computedProps, queue)) {\n      queue.commit();\n      return;\n    }\n\n    if ((!props.checkboxOnlyRowSelect || event.type !== 'click') && (preventRowSelectionOnClickWithMouseMove ? mouseDidNotMove : true)) {\n      handleRowSelectionOnClick(event, rowProps, computedProps, queue);\n    } else {\n      if (computedProps.enableKeyboardNavigation && computedProps.computedHasRowNavigation) {\n        queue(function () {\n          computedProps.setActiveIndex(rowProps.rowIndex);\n        });\n      }\n    }\n\n    queue.commit();\n  }, []);\n  var onCellClickAction = (0, _react.useCallback)(function (event, cellProps) {\n    if (cellProps.groupProps || cellProps.cellSelectable === false) {\n      return;\n    }\n\n    var computedProps = computedPropsRef.current;\n\n    if (!computedProps) {\n      return;\n    }\n\n    var hasCellSelection = computedProps.computedCellSelectionEnabled;\n    var cellMultiSelect = computedProps.computedCellMultiSelectionEnabled;\n    var queue = (0, _batchUpdate.default)();\n\n    if (hasCellSelection) {\n      var ctrlKey = event.ctrlKey || event.metaKey;\n      var append = cellMultiSelect && ctrlKey;\n      var cellCoords = [cellProps.rowIndex, cellProps.columnIndex];\n      var key = computedProps.getCellSelectionKey(cellProps);\n      var shiftKey = event.shiftKey && (computedProps.computedActiveCell || computedProps.lastSelectedCell);\n\n      if (shiftKey && cellMultiSelect) {\n        var cellSelection = computedProps.getCellSelectionBetween(computedProps.computedActiveCell || computedProps.lastSelectedCell || undefined, cellCoords);\n        queue(function () {\n          computedProps.setLastCellInRange(Object.keys(cellSelection).pop() || '');\n          computedProps.setCellSelection(cellSelection);\n        });\n      } else {\n        var cellSelectionMap = computedProps.computedCellSelection;\n        var isSelected = !!cellSelectionMap[key];\n        var newCellSelectionMap = append ? Object.assign({}, cellSelectionMap) : {};\n\n        if (isSelected && (cellMultiSelect || computedProps.initialProps.toggleCellSelectOnClick || ctrlKey)) {\n          delete newCellSelectionMap[key];\n        } else {\n          if (!shiftKey) {\n            queue(function () {\n              computedProps.setLastSelectedCell(cellCoords);\n            });\n          }\n\n          newCellSelectionMap[key] = true;\n        }\n\n        queue(function () {\n          computedProps.setCellSelection(newCellSelectionMap);\n        });\n      }\n    }\n\n    var shouldSetActiveCell = computedProps.computedCellNavigationEnabled && (!event.shiftKey || !cellMultiSelect);\n    queue(function () {\n      if (shouldSetActiveCell) {\n        computedProps.setActiveCell([cellProps.rowIndex, cellProps.columnIndex]);\n      }\n    });\n    queue.commit();\n  }, []);\n  var setItemAtAsSelected = (0, _react.useCallback)(function (index, event) {\n    var computedProps = computedPropsRef.current;\n\n    if (!computedProps) {\n      return;\n    }\n\n    var computedRowSelectionEnabled = computedProps.computedRowSelectionEnabled,\n        getItemAt = computedProps.getItemAt,\n        getItemId = computedProps.getItemId;\n    var item = getItemAt(index);\n    var itemId = item ? getItemId(item) : undefined;\n\n    if (itemId === undefined) {\n      return;\n    }\n\n    if (computedRowSelectionEnabled) {\n      (0, _handleSelection.handleSelection)({\n        rowIndex: index,\n        data: item\n      }, computedProps, event || {\n        nativeEvent: null\n      });\n    }\n  }, []);\n  var selectionIndexRef = (0, _react.useRef)(null);\n  var shiftKeyIndexRef = (0, _react.useRef)(null);\n  var lastMouseDownEventPropsRef = (0, _react.useRef)({\n    rowIndex: -1,\n    pageX: -1,\n    pageY: -1\n  });\n  var computedOnCellMouseDown = (0, _react.useCallback)(function (event, cellProps) {\n    lastMouseDownEventPropsRef.current = {\n      rowIndex: cellProps.rowIndex,\n      pageX: Math.floor(event.pageX),\n      pageY: Math.floor(event.pageY)\n    };\n    var computedProps = computedPropsRef.current;\n\n    if (!computedProps) {\n      return;\n    }\n\n    if (computedProps.columnUserSelect && event.shiftKey && computedProps.preventDefaultTextSelectionOnShiftMouseDown) {\n      event.preventDefault();\n    }\n\n    computedProps.onCellClickAction(event, cellProps);\n\n    if (computedProps.onCellSelectionDraggerMouseDown) {\n      computedProps.onCellSelectionDraggerMouseDown(event, cellProps);\n    }\n  }, []);\n  var computedActiveIndex = computedProps.computedActiveIndex;\n  return {\n    selectionIndexRef: selectionIndexRef,\n    shiftKeyIndexRef: shiftKeyIndexRef,\n    onCellClickAction: onCellClickAction,\n    computedOnKeyDown: computedOnKeyDown,\n    computedOnFocus: computedOnFocus,\n    computedOnBlur: computedOnBlur,\n    computedOnRowClick: computedOnRowClick,\n    computedOnRowMouseDown: computedOnRowMouseDown,\n    computedOnCellMouseDown: computedOnCellMouseDown,\n    isGroup: isGroup,\n    computedActiveItem: computedActiveIndex !== -1 && computedProps.data ? computedProps.data[computedActiveIndex] : null,\n    lastMouseDownEventPropsRef: lastMouseDownEventPropsRef,\n    toggleActiveRowSelection: function toggleActiveRowSelection(event) {\n      var computedProps = computedPropsRef.current;\n\n      if (!computedProps) {\n        return;\n      }\n\n      var computedActiveIndex = computedProps.computedActiveIndex;\n\n      if (computedActiveIndex == -1) {\n        return;\n      }\n\n      setItemAtAsSelected(computedActiveIndex, event);\n    },\n    rowProps: _objectSpread(_objectSpread({}, computedProps.initialProps.rowProps), {}, {\n      onMouseDown: function onMouseDown(event) {\n        if (computedProps.initialProps.rowProps && computedProps.initialProps.rowProps.onMouseDown) {\n          computedProps.initialProps.rowProps.onMouseDown(event);\n        }\n\n        if (!computedProps.computedFocused && computedProps.enableKeyboardNavigation) {\n          computedProps.computedWillReceiveFocusRef.current = true;\n        }\n      }\n    })\n  };\n};\n\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}