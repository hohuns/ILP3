{"ast":null,"code":"/** \n * Copyright Â© INOVUA TRADING.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.validateFilters = exports.hasTypeOperators = exports.hasTypeOperator = exports.default = exports.checkForEmptyValue = exports.buildTypeOperators = exports.buildFilterParam = void 0;\n\nvar _filterTypes = _interopRequireDefault(require(\"./filterTypes\"));\n\nvar buildTypeOperators = function buildTypeOperators(filterTypes) {\n  return Object.keys(filterTypes).reduce(function (acc, filterTypeName) {\n    var filterType = filterTypes[filterTypeName];\n\n    if (!filterType || !filterType.operators) {\n      return acc;\n    }\n\n    var operators = filterType.operators.reduce(function (operatorAccumulator, operator) {\n      operatorAccumulator[operator.name] = operator;\n      return operatorAccumulator;\n    }, {});\n    acc[filterTypeName] = operators;\n    return acc;\n  }, {});\n};\n\nexports.buildTypeOperators = buildTypeOperators;\n\nvar buildFilterParam = function buildFilterParam(item, fv) {\n  var filterTypes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _filterTypes.default;\n  var columnsMap = arguments.length > 3 ? arguments[3] : undefined;\n  var filterParam = {};\n  var name = fv.name,\n      getFilterValue = fv.getFilterValue,\n      filterValue = fv.value,\n      type = fv.type;\n  filterParam.emptyValue = fv.hasOwnProperty('emptyValue') ? fv.emptyValue : filterTypes[type].emptyValue;\n  filterParam.filterValue = filterValue;\n\n  if (columnsMap) {\n    filterParam.column = columnsMap[name];\n  }\n\n  filterParam.data = item;\n  filterParam.value = typeof getFilterValue === 'function' ? getFilterValue({\n    data: item,\n    value: item[name]\n  }) : item[name];\n  return filterParam;\n};\n\nexports.buildFilterParam = buildFilterParam;\n\nvar hasTypeOperators = function hasTypeOperators(fn, currentTypeOperators, type) {\n  if (!fn && !currentTypeOperators) {\n    console.error(\"No filter of type \\\"\".concat(type, \"\\\" found!\"));\n    return true;\n  }\n\n  return false;\n};\n\nexports.hasTypeOperators = hasTypeOperators;\n\nvar hasTypeOperator = function hasTypeOperator(fn, currentTypeOperators, type, operator) {\n  if (!fn && !currentTypeOperators[operator]) {\n    console.error(\"No operator \\\"\".concat(operator, \"\\\" found for filter type \\\"\").concat(type, \"\\\"!\"));\n    return true;\n  }\n\n  return false;\n};\n\nexports.hasTypeOperator = hasTypeOperator;\n\nvar checkForEmptyValue = function checkForEmptyValue(filterValue, emptyValue, filterOnEmptyValue) {\n  if (filterValue === emptyValue && !filterOnEmptyValue) {\n    return true;\n  }\n\n  return false;\n};\n\nexports.checkForEmptyValue = checkForEmptyValue;\n\nvar validateFilters = function validateFilters(fv) {\n  var filterTypes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _filterTypes.default;\n  var currentTypeOperators = arguments.length > 2 ? arguments[2] : undefined;\n  var active = fv.active,\n      fn = fv.fn,\n      type = fv.type,\n      operator = fv.operator;\n  var emptyValue = fv.hasOwnProperty('emptyValue') ? fv.emptyValue : filterTypes[type].emptyValue;\n  var filterOnEmptyValue = currentTypeOperators[operator].filterOnEmptyValue;\n\n  if (active === false) {\n    return true;\n  }\n\n  if (!filterTypes[type]) {\n    return true;\n  }\n\n  if (hasTypeOperators(fn, currentTypeOperators, type)) {\n    return true;\n  }\n\n  if (hasTypeOperator(fn, currentTypeOperators, type, operator)) {\n    return true;\n  }\n\n  if (checkForEmptyValue(fv.value, emptyValue, filterOnEmptyValue)) {\n    return true;\n  }\n\n  return false;\n};\n\nexports.validateFilters = validateFilters;\n\nvar doFilter = function doFilter(item, filterValueArray) {\n  var filterTypes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _filterTypes.default;\n  var columnsMap = arguments.length > 3 ? arguments[3] : undefined;\n  var typeOperators = buildTypeOperators(filterTypes);\n\n  for (var i = 0, len = filterValueArray.length; i < len; i++) {\n    var fv = filterValueArray[i];\n    var type = fv.type,\n        operator = fv.operator,\n        fn = fv.fn;\n    var currentTypeOperators = typeOperators[type];\n\n    if (validateFilters(fv, filterTypes, currentTypeOperators)) {\n      continue;\n    }\n\n    var filterParam = buildFilterParam(item, fv, filterTypes, columnsMap);\n    var filterFn = fn || currentTypeOperators[operator].fn;\n\n    if (filterFn(filterParam) !== true) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\nvar filter = function filter(data, filterValueArray) {\n  var filterTypes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _filterTypes.default;\n  var columnsMap = arguments.length > 3 ? arguments[3] : undefined;\n\n  var filterFn = function filterFn(item) {\n    var result = doFilter(item, filterValueArray, filterTypes, columnsMap);\n    return result;\n  };\n\n  if (data === undefined) {\n    return filterFn;\n  }\n\n  return data.filter(filterFn);\n};\n\nvar _default = filter;\nexports.default = _default;","map":{"version":3,"sources":["/Users/sungjaejoo/Desktop/ILP-main/node_modules/@inovua/reactdatagrid-community/filter.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","validateFilters","hasTypeOperators","hasTypeOperator","default","checkForEmptyValue","buildTypeOperators","buildFilterParam","_filterTypes","filterTypes","keys","reduce","acc","filterTypeName","filterType","operators","operatorAccumulator","operator","name","item","fv","arguments","length","undefined","columnsMap","filterParam","getFilterValue","filterValue","type","emptyValue","hasOwnProperty","column","data","fn","currentTypeOperators","console","error","concat","filterOnEmptyValue","active","doFilter","filterValueArray","typeOperators","i","len","filterFn","filter","result","_default"],"mappings":"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","sourcesContent":["/** \n * Copyright Â© INOVUA TRADING.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.validateFilters = exports.hasTypeOperators = exports.hasTypeOperator = exports.default = exports.checkForEmptyValue = exports.buildTypeOperators = exports.buildFilterParam = void 0;\n\nvar _filterTypes = _interopRequireDefault(require(\"./filterTypes\"));\n\nvar buildTypeOperators = function buildTypeOperators(filterTypes) {\n  return Object.keys(filterTypes).reduce(function (acc, filterTypeName) {\n    var filterType = filterTypes[filterTypeName];\n\n    if (!filterType || !filterType.operators) {\n      return acc;\n    }\n\n    var operators = filterType.operators.reduce(function (operatorAccumulator, operator) {\n      operatorAccumulator[operator.name] = operator;\n      return operatorAccumulator;\n    }, {});\n    acc[filterTypeName] = operators;\n    return acc;\n  }, {});\n};\n\nexports.buildTypeOperators = buildTypeOperators;\n\nvar buildFilterParam = function buildFilterParam(item, fv) {\n  var filterTypes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _filterTypes.default;\n  var columnsMap = arguments.length > 3 ? arguments[3] : undefined;\n  var filterParam = {};\n  var name = fv.name,\n      getFilterValue = fv.getFilterValue,\n      filterValue = fv.value,\n      type = fv.type;\n  filterParam.emptyValue = fv.hasOwnProperty('emptyValue') ? fv.emptyValue : filterTypes[type].emptyValue;\n  filterParam.filterValue = filterValue;\n\n  if (columnsMap) {\n    filterParam.column = columnsMap[name];\n  }\n\n  filterParam.data = item;\n  filterParam.value = typeof getFilterValue === 'function' ? getFilterValue({\n    data: item,\n    value: item[name]\n  }) : item[name];\n  return filterParam;\n};\n\nexports.buildFilterParam = buildFilterParam;\n\nvar hasTypeOperators = function hasTypeOperators(fn, currentTypeOperators, type) {\n  if (!fn && !currentTypeOperators) {\n    console.error(\"No filter of type \\\"\".concat(type, \"\\\" found!\"));\n    return true;\n  }\n\n  return false;\n};\n\nexports.hasTypeOperators = hasTypeOperators;\n\nvar hasTypeOperator = function hasTypeOperator(fn, currentTypeOperators, type, operator) {\n  if (!fn && !currentTypeOperators[operator]) {\n    console.error(\"No operator \\\"\".concat(operator, \"\\\" found for filter type \\\"\").concat(type, \"\\\"!\"));\n    return true;\n  }\n\n  return false;\n};\n\nexports.hasTypeOperator = hasTypeOperator;\n\nvar checkForEmptyValue = function checkForEmptyValue(filterValue, emptyValue, filterOnEmptyValue) {\n  if (filterValue === emptyValue && !filterOnEmptyValue) {\n    return true;\n  }\n\n  return false;\n};\n\nexports.checkForEmptyValue = checkForEmptyValue;\n\nvar validateFilters = function validateFilters(fv) {\n  var filterTypes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _filterTypes.default;\n  var currentTypeOperators = arguments.length > 2 ? arguments[2] : undefined;\n  var active = fv.active,\n      fn = fv.fn,\n      type = fv.type,\n      operator = fv.operator;\n  var emptyValue = fv.hasOwnProperty('emptyValue') ? fv.emptyValue : filterTypes[type].emptyValue;\n  var filterOnEmptyValue = currentTypeOperators[operator].filterOnEmptyValue;\n\n  if (active === false) {\n    return true;\n  }\n\n  if (!filterTypes[type]) {\n    return true;\n  }\n\n  if (hasTypeOperators(fn, currentTypeOperators, type)) {\n    return true;\n  }\n\n  if (hasTypeOperator(fn, currentTypeOperators, type, operator)) {\n    return true;\n  }\n\n  if (checkForEmptyValue(fv.value, emptyValue, filterOnEmptyValue)) {\n    return true;\n  }\n\n  return false;\n};\n\nexports.validateFilters = validateFilters;\n\nvar doFilter = function doFilter(item, filterValueArray) {\n  var filterTypes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _filterTypes.default;\n  var columnsMap = arguments.length > 3 ? arguments[3] : undefined;\n  var typeOperators = buildTypeOperators(filterTypes);\n\n  for (var i = 0, len = filterValueArray.length; i < len; i++) {\n    var fv = filterValueArray[i];\n    var type = fv.type,\n        operator = fv.operator,\n        fn = fv.fn;\n    var currentTypeOperators = typeOperators[type];\n\n    if (validateFilters(fv, filterTypes, currentTypeOperators)) {\n      continue;\n    }\n\n    var filterParam = buildFilterParam(item, fv, filterTypes, columnsMap);\n    var filterFn = fn || currentTypeOperators[operator].fn;\n\n    if (filterFn(filterParam) !== true) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\nvar filter = function filter(data, filterValueArray) {\n  var filterTypes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _filterTypes.default;\n  var columnsMap = arguments.length > 3 ? arguments[3] : undefined;\n\n  var filterFn = function filterFn(item) {\n    var result = doFilter(item, filterValueArray, filterTypes, columnsMap);\n    return result;\n  };\n\n  if (data === undefined) {\n    return filterFn;\n  }\n\n  return data.filter(filterFn);\n};\n\nvar _default = filter;\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}