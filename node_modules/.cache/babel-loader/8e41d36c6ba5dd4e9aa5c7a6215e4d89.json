{"ast":null,"code":"import _regeneratorRuntime from\"/Users/sungjaejoo/Desktop/ILP-main/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/sungjaejoo/Desktop/ILP-main/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/sungjaejoo/Desktop/ILP-main/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect,useCallback}from\"react\";import AddNoteEn from\"./AddNoteEn\";import{useAppSelector,useAppDispatch}from\"../../store/hooks\";import{useNavigate}from\"react-router-dom\";import NoteListEn from\"./NoteListEn\";var MessageLogFormEn=function MessageLogFormEn(){var reduxUser=useAppSelector(function(state){return state.user;});var dispatch=useAppDispatch();var _useState=useState([]),_useState2=_slicedToArray(_useState,2),note=_useState2[0],setNote=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),error=_useState4[0],setError=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),isLoading=_useState6[0],setIsLoading=_useState6[1];var navigate=useNavigate();var fetchNoteHandlerEn=useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response,data,loadedNotes,key;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:setIsLoading(true);setError(\"\");_context.prev=2;_context.next=5;return fetch(\"https://react-http-2887f-default-rtdb.firebaseio.com/notes.json\");case 5:response=_context.sent;if(response.ok){_context.next=8;break;}throw new Error(\"Something went wrong!\");case 8:_context.next=10;return response.json();case 10:data=_context.sent;console.log(data);loadedNotes=[];for(key in data){loadedNotes.push({id:key,title:data[key].title,text:data[key].text,date:\"\".concat(data[key].logger,\" logged message at \").concat(data[key].date,\"....\")});}loadedNotes.reverse();console.log(loadedNotes);setNote(loadedNotes);_context.next=22;break;case 19:_context.prev=19;_context.t0=_context[\"catch\"](2);if(_context.t0 instanceof Error){setError(_context.t0.message);}case 22:setIsLoading(false);case 23:case\"end\":return _context.stop();}}},_callee,null,[[2,19]]);})),[]);function addNoteHandlerEn(_x){return _addNoteHandlerEn.apply(this,arguments);}function _addNoteHandlerEn(){_addNoteHandlerEn=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(note){var response,data;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return fetch(\"https://react-http-2887f-default-rtdb.firebaseio.com/notes.json\",{method:\"POST\",body:JSON.stringify(note),headers:{\"Content-Type\":\"appication/json\"}});case 2:response=_context2.sent;_context2.next=5;return response.json();case 5:data=_context2.sent;console.log(data);alert(\"Message is successfully added..!\");fetchNoteHandlerEn();case 9:case\"end\":return _context2.stop();}}},_callee2);}));return _addNoteHandlerEn.apply(this,arguments);}useEffect(function(){fetchNoteHandlerEn();},[fetchNoteHandlerEn]);var content=/*#__PURE__*/React.createElement(\"p\",{style:{color:\"white\"}},\"Found no Notes.\");if(note.length>0){content=/*#__PURE__*/React.createElement(NoteListEn,{note:note});}if(error){content=/*#__PURE__*/React.createElement(\"p\",{style:{color:\"white\"}},error);}if(isLoading){content=/*#__PURE__*/React.createElement(\"p\",{style:{color:\"white\"}},\"Loading...\");}return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"section\",null,/*#__PURE__*/React.createElement(\"h3\",{style:{color:\"white\"}},\"Welcome..! \",reduxUser,\" \")),/*#__PURE__*/React.createElement(\"section\",null,/*#__PURE__*/React.createElement(\"h3\",{style:{color:\"white\"}},\"Log Format\"),/*#__PURE__*/React.createElement(AddNoteEn,{AddNote:addNoteHandlerEn,logger:reduxUser})),/*#__PURE__*/React.createElement(\"section\",null,/*#__PURE__*/React.createElement(\"button\",{onClick:fetchNoteHandlerEn},\"Update Notes\")),/*#__PURE__*/React.createElement(\"section\",null,/*#__PURE__*/React.createElement(\"h3\",{style:{color:\"white\"}},\"Log\"),content));};export default MessageLogFormEn;","map":{"version":3,"sources":["/Users/sungjaejoo/Desktop/ILP-main/src/components/MessageLogForm/MessageLogFormEn.tsx"],"names":["React","useState","useEffect","useCallback","AddNoteEn","useAppSelector","useAppDispatch","useNavigate","NoteListEn","MessageLogFormEn","reduxUser","state","user","dispatch","note","setNote","error","setError","isLoading","setIsLoading","navigate","fetchNoteHandlerEn","fetch","response","ok","Error","json","data","console","log","loadedNotes","key","push","id","title","text","date","logger","reverse","message","addNoteHandlerEn","method","body","JSON","stringify","headers","alert","content","color","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport AddNoteEn from \"./AddNoteEn\";\nimport { useAppSelector, useAppDispatch } from \"../../store/hooks\";\nimport { useNavigate } from \"react-router-dom\";\nimport { usersActions } from \"../../store/userSlice\";\nimport NoteListEn from \"./NoteListEn\";\nconst MessageLogFormEn = () => {\n  const reduxUser: string = useAppSelector((state) => state.user);\n  const dispatch = useAppDispatch();\n  const [note, setNote] = useState<\n    { id: string; title: any; text: any; date: string }[]\n  >([]);\n  const [error, setError] = useState<string>(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  let navigate = useNavigate();\n\n  const fetchNoteHandlerEn = useCallback(async () => {\n    setIsLoading(true);\n    setError(\"\");\n    try {\n      const response = await fetch(\n        \"https://react-http-2887f-default-rtdb.firebaseio.com/notes.json\"\n      );\n      if (!response.ok) {\n        throw new Error(\"Something went wrong!\");\n      }\n\n      const data = await response.json();\n      console.log(data);\n      const loadedNotes: { id: string; title: any; text: any; date: string }[] =\n        [];\n      for (const key in data) {\n        loadedNotes.push({\n          id: key,\n          title: data[key].title,\n          text: data[key].text,\n          date: `${data[key].logger} logged message at ${data[key].date}....`,\n        });\n      }\n      loadedNotes.reverse();\n      console.log(loadedNotes);\n      setNote(loadedNotes);\n    } catch (err) {\n      if (err instanceof Error) {\n        setError(err.message);\n      }\n    }\n    setIsLoading(false);\n  }, []);\n\n  async function addNoteHandlerEn(note: {\n    id?: string;\n    title?: string;\n    text?: string;\n    date?: string;\n  }) {\n    const response = await fetch(\n      \"https://react-http-2887f-default-rtdb.firebaseio.com/notes.json\",\n      {\n        method: \"POST\",\n        body: JSON.stringify(note),\n        headers: {\n          \"Content-Type\": \"appication/json\",\n        },\n      }\n    );\n    const data = await response.json();\n    console.log(data);\n    alert(`Message is successfully added..!`);\n    fetchNoteHandlerEn();\n  }\n\n  useEffect(() => {\n    fetchNoteHandlerEn();\n  }, [fetchNoteHandlerEn]);\n\n  let content = <p style={{ color: \"white\" }}>Found no Notes.</p>;\n\n  if (note.length > 0) {\n    content = <NoteListEn note={note} />;\n  }\n\n  if (error) {\n    content = <p style={{ color: \"white\" }}>{error}</p>;\n  }\n\n  if (isLoading) {\n    content = <p style={{ color: \"white\" }}>Loading...</p>;\n  }\n\n  return (\n    <div>\n      <section>\n        <h3 style={{ color: \"white\" }}>Welcome..! {reduxUser} </h3>\n      </section>\n      <section>\n        <h3 style={{ color: \"white\" }}>Log Format</h3>\n        <AddNoteEn AddNote={addNoteHandlerEn} logger={reduxUser}></AddNoteEn>\n      </section>\n      <section>\n        <button onClick={fetchNoteHandlerEn}>Update Notes</button>\n      </section>\n      <section>\n        <h3 style={{ color: \"white\" }}>Log</h3>\n        {content}\n      </section>\n    </div>\n  );\n};\n\nexport default MessageLogFormEn;\n"]},"metadata":{},"sourceType":"module"}