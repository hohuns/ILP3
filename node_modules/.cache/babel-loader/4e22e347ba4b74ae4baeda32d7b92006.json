{"ast":null,"code":"/** \n * Copyright Â© INOVUA TRADING.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _binarySearch = _interopRequireDefault(require(\"../../../packages/binary-search\"));\n\nvar _eventemitter = _interopRequireDefault(require(\"eventemitter3\"));\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = (0, _getPrototypeOf2.default)(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = (0, _getPrototypeOf2.default)(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return (0, _possibleConstructorReturn2.default)(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nvar sortAsc = function sortAsc(a, b) {\n  return a - b;\n};\n\nvar RowHeightManager = function (_EventEmitter) {\n  (0, _inherits2.default)(RowHeightManager, _EventEmitter);\n\n  var _super = _createSuper(RowHeightManager);\n\n  function RowHeightManager(rowHeight) {\n    var _this;\n\n    var rowHeightsMap = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var config = arguments.length > 2 ? arguments[2] : undefined;\n    (0, _classCallCheck2.default)(this, RowHeightManager);\n    _this = _super.call(this);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"rowHeight\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"rowHeightFn\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"map\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"heights\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"indexes\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"offsets\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"minHeight\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"maxHeight\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"indexesToOffsets\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"offsetsToIndexes\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"lazyRowHeightRafId\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"rowToOffsetCache\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"cache\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"__id\", '');\n    _this.rowHeight = (0, _typeof2.default)(rowHeight) === 'object' ? typeof rowHeight.rowHeight === 'number' ? rowHeight.rowHeight : rowHeight.minRowHeight || 40 : 40;\n    _this.map = rowHeightsMap;\n\n    if ((0, _typeof2.default)(rowHeight) === 'object' && typeof rowHeight.rowHeight === 'function') {\n      _this.rowHeightFn = rowHeight.rowHeight;\n    }\n\n    if (!config || config.cache !== false) {\n      _this.setCache({});\n    }\n\n    _this.index(_this.rowHeight, rowHeightsMap);\n\n    return _this;\n  }\n\n  (0, _createClass2.default)(RowHeightManager, [{\n    key: \"setRowHeight\",\n    value: function setRowHeight(_ref) {\n      var index = _ref.index,\n          height = _ref.height,\n          defaultRowHeight = _ref.defaultRowHeight,\n          skipIndex = _ref.skipIndex;\n\n      if (this.map[index] === height && !defaultRowHeight) {\n        console.warn('NOOP');\n        return;\n      }\n\n      this.map[index] = height;\n\n      if (defaultRowHeight) {\n        this.rowHeight = defaultRowHeight;\n      }\n\n      if (this.cache) {\n        this.setCache({});\n      }\n\n      if (!skipIndex) {\n        this.index();\n      }\n    }\n  }, {\n    key: \"indexRaf\",\n    value: function indexRaf() {\n      var _this2 = this;\n\n      if (this.lazyRowHeightRafId) {\n        cancelAnimationFrame(this.lazyRowHeightRafId);\n        this.lazyRowHeightRafId = 0;\n      }\n\n      this.lazyRowHeightRafId = requestAnimationFrame(function () {\n        _this2.lazyRowHeightRafId = 0;\n\n        _this2.index();\n      });\n    }\n  }, {\n    key: \"setRowHeightLazy\",\n    value: function setRowHeightLazy(_ref2) {\n      var index = _ref2.index,\n          height = _ref2.height,\n          defaultRowHeight = _ref2.defaultRowHeight;\n      this.setRowHeight({\n        index: index,\n        height: height,\n        defaultRowHeight: defaultRowHeight || this.rowHeight,\n        skipIndex: true\n      });\n      this.indexRaf();\n    }\n  }, {\n    key: \"setHeights\",\n    value: function setHeights(map) {\n      this.map = map;\n\n      if (this.cache) {\n        this.setCache({});\n      }\n\n      this.index(this.rowHeight, this.map);\n    }\n  }, {\n    key: \"setValues\",\n    value: function setValues(_ref3) {\n      var defaultRowHeight = _ref3.defaultRowHeight,\n          map = _ref3.map;\n\n      if (defaultRowHeight) {\n        this.rowHeight = defaultRowHeight;\n      }\n\n      if (this.map) {\n        this.map = map;\n      }\n\n      if (this.cache) {\n        this.setCache({});\n      }\n\n      this.index(this.rowHeight, this.map);\n    }\n  }, {\n    key: \"setDefaultRowHeight\",\n    value: function setDefaultRowHeight(defaultRowHeight) {\n      this.rowHeight = defaultRowHeight;\n\n      if (this.cache) {\n        this.setCache({});\n      }\n\n      this.index(this.rowHeight, this.map);\n    }\n  }, {\n    key: \"index\",\n    value: function index() {\n      var _this3 = this;\n\n      var defaultRowHeight = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.rowHeight;\n      var map = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.map;\n      this.rowToOffsetCache = {};\n      var indexes = map ? Object.keys(map).map(function (x) {\n        return +x;\n      }).sort(sortAsc) : [];\n      this.minHeight = defaultRowHeight;\n      this.maxHeight = defaultRowHeight;\n      this.__id = JSON.stringify(this.heights);\n      this.heights = indexes.map(function (index) {\n        var height = map[index];\n\n        if (height > _this3.maxHeight) {\n          _this3.maxHeight = height;\n        }\n\n        if (height < _this3.minHeight) {\n          _this3.minHeight = height;\n        }\n\n        return [index, height];\n      });\n      var prev = 0;\n      this.indexes = indexes;\n      this.offsets = indexes.map(function (index, i) {\n        var prevIndex = i === 0 ? -1 : indexes[i - 1];\n        var prevIndexRowHeight = map[prevIndex] || 0;\n        return prev = prev + (index - (prevIndex + 1)) * defaultRowHeight + prevIndexRowHeight;\n      });\n      this.offsetsToIndexes = {};\n      this.indexesToOffsets = this.offsets.reduce(function (acc, offset, i) {\n        var index = indexes[i];\n        acc[index] = offset;\n        _this3.offsetsToIndexes[offset] = index;\n        return acc;\n      }, {});\n\n      var __id = JSON.stringify(this.heights);\n\n      if (__id === this.__id) {\n        return;\n      }\n\n      this.afterIndex();\n    }\n  }, {\n    key: \"afterIndex\",\n    value: function afterIndex() {\n      this.emit('index');\n    }\n  }, {\n    key: \"setCache\",\n    value: function setCache(cache) {\n      this.cache = cache;\n    }\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize(count) {\n      if (count == null) {\n        throw new Error('Specify a count when calling getTotalSize!');\n      }\n\n      if (count <= 0 || isNaN(count)) {\n        return 0;\n      }\n\n      var sum = 0;\n\n      for (var i = 0; i < count; i++) {\n        var value = this.map[i];\n        sum += value === undefined ? this.rowHeight : value;\n      }\n\n      return sum;\n    }\n  }, {\n    key: \"getDefaultRowHeight\",\n    value: function getDefaultRowHeight() {\n      return this.rowHeight;\n    }\n  }, {\n    key: \"getMinHeight\",\n    value: function getMinHeight() {\n      return this.minHeight || this.rowHeight;\n    }\n  }, {\n    key: \"getMaxHeight\",\n    value: function getMaxHeight() {\n      return this.maxHeight || this.rowHeight;\n    }\n  }, {\n    key: \"getRowOffset\",\n    value: function getRowOffset(index) {\n      var offset = this.indexesToOffsets[index];\n\n      if (offset !== undefined) {\n        return offset;\n      }\n\n      offset = this.rowToOffsetCache[index];\n\n      if (offset !== undefined) {\n        return offset;\n      }\n\n      var insertPos = ~(0, _binarySearch.default)(this.indexes, index, sortAsc);\n      var closestIndex = this.indexes[insertPos - 1];\n\n      if (insertPos === 0) {\n        offset = index * this.rowHeight;\n      } else {\n        var closestOffset = this.indexesToOffsets[closestIndex];\n        offset = closestOffset + this.map[closestIndex] + (index - closestIndex - 1) * this.rowHeight;\n      }\n\n      this.rowToOffsetCache[index] = offset;\n      return offset;\n    }\n  }, {\n    key: \"getRowHeight\",\n    value: function getRowHeight(index, fn) {\n      var value = this.map[index];\n\n      if (value !== undefined) {\n        return value;\n      }\n\n      if (fn) {\n        return fn();\n      }\n\n      return this.rowHeight;\n    }\n  }, {\n    key: \"getRowAt\",\n    value: function getRowAt(offset) {\n      if (offset < 0) {\n        return 0;\n      }\n\n      var roundedOffset = Math.floor(offset / this.rowHeight) * this.rowHeight;\n      var result = this.cache ? this.cache[roundedOffset] : undefined;\n\n      if (result !== undefined) {\n        return result;\n      }\n\n      if (!this.map) {\n        result = roundedOffset / this.rowHeight;\n\n        if (this.cache) {\n          this.cache[roundedOffset] = result;\n        }\n\n        return result;\n      }\n\n      var index = (0, _binarySearch.default)(this.offsets, offset, sortAsc);\n\n      if (index < 0) {\n        var insertPos = ~index;\n        var beforeKnownIndex = this.indexes[insertPos - 1];\n\n        if (beforeKnownIndex !== undefined) {\n          var beforeKnownOffset = this.indexesToOffsets[beforeKnownIndex];\n          var nextOffset = beforeKnownOffset + this.map[beforeKnownIndex];\n\n          if (offset < nextOffset) {\n            result = beforeKnownIndex;\n          } else {\n            result = beforeKnownIndex + Math.floor((offset - nextOffset) / this.rowHeight) + 1;\n          }\n        } else {\n          result = Math.floor(offset / this.rowHeight);\n        }\n      } else {\n        result = this.indexes[index];\n      }\n\n      if (this.cache) {\n        this.cache[roundedOffset] = result;\n      }\n\n      return result;\n    }\n  }]);\n  return RowHeightManager;\n}(_eventemitter.default);\n\nvar _default = RowHeightManager;\nexports.default = _default;","map":{"version":3,"sources":["/Users/sungjaejoo/Desktop/ILP-main/node_modules/@inovua/reactdatagrid-community/packages/react-virtual-list-pro/src/RowHeightManager.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_typeof2","_classCallCheck2","_createClass2","_assertThisInitialized2","_inherits2","_possibleConstructorReturn2","_getPrototypeOf2","_defineProperty2","_binarySearch","_eventemitter","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","result","NewTarget","constructor","Reflect","construct","arguments","apply","sham","Proxy","Boolean","prototype","valueOf","call","e","sortAsc","a","b","RowHeightManager","_EventEmitter","_super","rowHeight","_this","rowHeightsMap","length","undefined","config","minRowHeight","map","rowHeightFn","cache","setCache","index","key","setRowHeight","_ref","height","defaultRowHeight","skipIndex","console","warn","indexRaf","_this2","lazyRowHeightRafId","cancelAnimationFrame","requestAnimationFrame","setRowHeightLazy","_ref2","setHeights","setValues","_ref3","setDefaultRowHeight","_this3","rowToOffsetCache","indexes","keys","x","sort","minHeight","maxHeight","__id","JSON","stringify","heights","prev","offsets","i","prevIndex","prevIndexRowHeight","offsetsToIndexes","indexesToOffsets","reduce","acc","offset","afterIndex","emit","getTotalSize","count","Error","isNaN","sum","getDefaultRowHeight","getMinHeight","getMaxHeight","getRowOffset","insertPos","closestIndex","closestOffset","getRowHeight","fn","getRowAt","roundedOffset","Math","floor","beforeKnownIndex","beforeKnownOffset","nextOffset","_default"],"mappings":"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","sourcesContent":["/** \n * Copyright Â© INOVUA TRADING.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _binarySearch = _interopRequireDefault(require(\"../../../packages/binary-search\"));\n\nvar _eventemitter = _interopRequireDefault(require(\"eventemitter3\"));\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar sortAsc = function sortAsc(a, b) {\n  return a - b;\n};\n\nvar RowHeightManager = function (_EventEmitter) {\n  (0, _inherits2.default)(RowHeightManager, _EventEmitter);\n\n  var _super = _createSuper(RowHeightManager);\n\n  function RowHeightManager(rowHeight) {\n    var _this;\n\n    var rowHeightsMap = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var config = arguments.length > 2 ? arguments[2] : undefined;\n    (0, _classCallCheck2.default)(this, RowHeightManager);\n    _this = _super.call(this);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"rowHeight\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"rowHeightFn\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"map\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"heights\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"indexes\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"offsets\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"minHeight\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"maxHeight\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"indexesToOffsets\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"offsetsToIndexes\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"lazyRowHeightRafId\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"rowToOffsetCache\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"cache\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"__id\", '');\n    _this.rowHeight = (0, _typeof2.default)(rowHeight) === 'object' ? typeof rowHeight.rowHeight === 'number' ? rowHeight.rowHeight : rowHeight.minRowHeight || 40 : 40;\n    _this.map = rowHeightsMap;\n\n    if ((0, _typeof2.default)(rowHeight) === 'object' && typeof rowHeight.rowHeight === 'function') {\n      _this.rowHeightFn = rowHeight.rowHeight;\n    }\n\n    if (!config || config.cache !== false) {\n      _this.setCache({});\n    }\n\n    _this.index(_this.rowHeight, rowHeightsMap);\n\n    return _this;\n  }\n\n  (0, _createClass2.default)(RowHeightManager, [{\n    key: \"setRowHeight\",\n    value: function setRowHeight(_ref) {\n      var index = _ref.index,\n          height = _ref.height,\n          defaultRowHeight = _ref.defaultRowHeight,\n          skipIndex = _ref.skipIndex;\n\n      if (this.map[index] === height && !defaultRowHeight) {\n        console.warn('NOOP');\n        return;\n      }\n\n      this.map[index] = height;\n\n      if (defaultRowHeight) {\n        this.rowHeight = defaultRowHeight;\n      }\n\n      if (this.cache) {\n        this.setCache({});\n      }\n\n      if (!skipIndex) {\n        this.index();\n      }\n    }\n  }, {\n    key: \"indexRaf\",\n    value: function indexRaf() {\n      var _this2 = this;\n\n      if (this.lazyRowHeightRafId) {\n        cancelAnimationFrame(this.lazyRowHeightRafId);\n        this.lazyRowHeightRafId = 0;\n      }\n\n      this.lazyRowHeightRafId = requestAnimationFrame(function () {\n        _this2.lazyRowHeightRafId = 0;\n\n        _this2.index();\n      });\n    }\n  }, {\n    key: \"setRowHeightLazy\",\n    value: function setRowHeightLazy(_ref2) {\n      var index = _ref2.index,\n          height = _ref2.height,\n          defaultRowHeight = _ref2.defaultRowHeight;\n      this.setRowHeight({\n        index: index,\n        height: height,\n        defaultRowHeight: defaultRowHeight || this.rowHeight,\n        skipIndex: true\n      });\n      this.indexRaf();\n    }\n  }, {\n    key: \"setHeights\",\n    value: function setHeights(map) {\n      this.map = map;\n\n      if (this.cache) {\n        this.setCache({});\n      }\n\n      this.index(this.rowHeight, this.map);\n    }\n  }, {\n    key: \"setValues\",\n    value: function setValues(_ref3) {\n      var defaultRowHeight = _ref3.defaultRowHeight,\n          map = _ref3.map;\n\n      if (defaultRowHeight) {\n        this.rowHeight = defaultRowHeight;\n      }\n\n      if (this.map) {\n        this.map = map;\n      }\n\n      if (this.cache) {\n        this.setCache({});\n      }\n\n      this.index(this.rowHeight, this.map);\n    }\n  }, {\n    key: \"setDefaultRowHeight\",\n    value: function setDefaultRowHeight(defaultRowHeight) {\n      this.rowHeight = defaultRowHeight;\n\n      if (this.cache) {\n        this.setCache({});\n      }\n\n      this.index(this.rowHeight, this.map);\n    }\n  }, {\n    key: \"index\",\n    value: function index() {\n      var _this3 = this;\n\n      var defaultRowHeight = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.rowHeight;\n      var map = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.map;\n      this.rowToOffsetCache = {};\n      var indexes = map ? Object.keys(map).map(function (x) {\n        return +x;\n      }).sort(sortAsc) : [];\n      this.minHeight = defaultRowHeight;\n      this.maxHeight = defaultRowHeight;\n      this.__id = JSON.stringify(this.heights);\n      this.heights = indexes.map(function (index) {\n        var height = map[index];\n\n        if (height > _this3.maxHeight) {\n          _this3.maxHeight = height;\n        }\n\n        if (height < _this3.minHeight) {\n          _this3.minHeight = height;\n        }\n\n        return [index, height];\n      });\n      var prev = 0;\n      this.indexes = indexes;\n      this.offsets = indexes.map(function (index, i) {\n        var prevIndex = i === 0 ? -1 : indexes[i - 1];\n        var prevIndexRowHeight = map[prevIndex] || 0;\n        return prev = prev + (index - (prevIndex + 1)) * defaultRowHeight + prevIndexRowHeight;\n      });\n      this.offsetsToIndexes = {};\n      this.indexesToOffsets = this.offsets.reduce(function (acc, offset, i) {\n        var index = indexes[i];\n        acc[index] = offset;\n        _this3.offsetsToIndexes[offset] = index;\n        return acc;\n      }, {});\n\n      var __id = JSON.stringify(this.heights);\n\n      if (__id === this.__id) {\n        return;\n      }\n\n      this.afterIndex();\n    }\n  }, {\n    key: \"afterIndex\",\n    value: function afterIndex() {\n      this.emit('index');\n    }\n  }, {\n    key: \"setCache\",\n    value: function setCache(cache) {\n      this.cache = cache;\n    }\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize(count) {\n      if (count == null) {\n        throw new Error('Specify a count when calling getTotalSize!');\n      }\n\n      if (count <= 0 || isNaN(count)) {\n        return 0;\n      }\n\n      var sum = 0;\n\n      for (var i = 0; i < count; i++) {\n        var value = this.map[i];\n        sum += value === undefined ? this.rowHeight : value;\n      }\n\n      return sum;\n    }\n  }, {\n    key: \"getDefaultRowHeight\",\n    value: function getDefaultRowHeight() {\n      return this.rowHeight;\n    }\n  }, {\n    key: \"getMinHeight\",\n    value: function getMinHeight() {\n      return this.minHeight || this.rowHeight;\n    }\n  }, {\n    key: \"getMaxHeight\",\n    value: function getMaxHeight() {\n      return this.maxHeight || this.rowHeight;\n    }\n  }, {\n    key: \"getRowOffset\",\n    value: function getRowOffset(index) {\n      var offset = this.indexesToOffsets[index];\n\n      if (offset !== undefined) {\n        return offset;\n      }\n\n      offset = this.rowToOffsetCache[index];\n\n      if (offset !== undefined) {\n        return offset;\n      }\n\n      var insertPos = ~(0, _binarySearch.default)(this.indexes, index, sortAsc);\n      var closestIndex = this.indexes[insertPos - 1];\n\n      if (insertPos === 0) {\n        offset = index * this.rowHeight;\n      } else {\n        var closestOffset = this.indexesToOffsets[closestIndex];\n        offset = closestOffset + this.map[closestIndex] + (index - closestIndex - 1) * this.rowHeight;\n      }\n\n      this.rowToOffsetCache[index] = offset;\n      return offset;\n    }\n  }, {\n    key: \"getRowHeight\",\n    value: function getRowHeight(index, fn) {\n      var value = this.map[index];\n\n      if (value !== undefined) {\n        return value;\n      }\n\n      if (fn) {\n        return fn();\n      }\n\n      return this.rowHeight;\n    }\n  }, {\n    key: \"getRowAt\",\n    value: function getRowAt(offset) {\n      if (offset < 0) {\n        return 0;\n      }\n\n      var roundedOffset = Math.floor(offset / this.rowHeight) * this.rowHeight;\n      var result = this.cache ? this.cache[roundedOffset] : undefined;\n\n      if (result !== undefined) {\n        return result;\n      }\n\n      if (!this.map) {\n        result = roundedOffset / this.rowHeight;\n\n        if (this.cache) {\n          this.cache[roundedOffset] = result;\n        }\n\n        return result;\n      }\n\n      var index = (0, _binarySearch.default)(this.offsets, offset, sortAsc);\n\n      if (index < 0) {\n        var insertPos = ~index;\n        var beforeKnownIndex = this.indexes[insertPos - 1];\n\n        if (beforeKnownIndex !== undefined) {\n          var beforeKnownOffset = this.indexesToOffsets[beforeKnownIndex];\n          var nextOffset = beforeKnownOffset + this.map[beforeKnownIndex];\n\n          if (offset < nextOffset) {\n            result = beforeKnownIndex;\n          } else {\n            result = beforeKnownIndex + Math.floor((offset - nextOffset) / this.rowHeight) + 1;\n          }\n        } else {\n          result = Math.floor(offset / this.rowHeight);\n        }\n      } else {\n        result = this.indexes[index];\n      }\n\n      if (this.cache) {\n        this.cache[roundedOffset] = result;\n      }\n\n      return result;\n    }\n  }]);\n  return RowHeightManager;\n}(_eventemitter.default);\n\nvar _default = RowHeightManager;\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}