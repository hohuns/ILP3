{"ast":null,"code":"/**\n * Copyright Â© INOVUA TRADING.\n *\n * This source code is licensed under the Commercial License found in the\n * LICENSE file in the root directory of this source tree.\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _react = require(\"react\");\n\nvar _useProperty7 = _interopRequireDefault(require(\"@inovua/reactdatagrid-community/hooks/useProperty\"));\n\nvar _sealedObjectFactory = _interopRequireDefault(require(\"@inovua/reactdatagrid-community/utils/sealedObjectFactory\"));\n\nvar _batchUpdate = _interopRequireDefault(require(\"@inovua/reactdatagrid-community/utils/batchUpdate\"));\n\nvar _isControlledProperty = _interopRequireDefault(require(\"@inovua/reactdatagrid-community/utils/isControlledProperty\"));\n\nvar _renderDetailsGrid = _interopRequireDefault(require(\"./renderDetailsGrid\"));\n\nvar _isRowExpandEnabled_FromProps = require(\"@inovua/reactdatagrid-community/utils/isRowExpandEnabled_FromProps\");\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      (0, _defineProperty2.default)(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nvar EXPANDABLE_ROW_INFO = (0, _sealedObjectFactory.default)({\n  rowIndex: undefined,\n  data: undefined,\n  id: undefined\n});\n\nvar getRowHeights_FromProps = function getRowHeights_FromProps(computedProps) {\n  return computedProps.computedRowHeights || {};\n};\n\nvar setRowHeightById_FromProps = function setRowHeightById_FromProps(rowHeight, id, computedProps) {\n  var rowHeights = _objectSpread({}, getRowHeights_FromProps(computedProps));\n\n  var changed = false;\n\n  if (rowHeight != null) {\n    if (rowHeights[id] !== rowHeight) {\n      rowHeights[id] = rowHeight;\n      changed = true;\n    }\n  } else {\n    if (rowHeights[id]) {\n      delete rowHeights[id];\n      changed = true;\n    }\n  }\n\n  if (changed) {\n    computedProps.setRowHeights(rowHeights);\n  }\n};\n\nvar updateExpandedHeights_FromProps = function updateExpandedHeights_FromProps(computedProps, rowHeights) {\n  var rowExpandHeight = computedProps.rowExpandHeight,\n      dataMap = computedProps.dataMap;\n  var expandedRows = getExpandedMap_FromProps(computedProps);\n  var defaultRowHeight = computedProps.rowHeight;\n  var heights = {};\n  var dataIndexMap = computedProps.dataIndexMap;\n\n  if (dataIndexMap) {\n    for (var itemId in expandedRows) {\n      var index = dataIndexMap[itemId];\n\n      if (index !== undefined) {\n        if (typeof rowExpandHeight === 'number') {\n          heights[index] = rowExpandHeight;\n        } else if (typeof rowExpandHeight === 'function') {\n          var currentRowHeight = rowExpandHeight({\n            data: dataMap && dataMap[itemId]\n          });\n          heights[index] = currentRowHeight;\n        }\n      }\n    }\n  }\n\n  rowHeights = rowHeights || getRowHeights_FromProps(computedProps);\n\n  if (rowHeights && dataIndexMap) {\n    for (var _itemId in rowHeights) {\n      var _index = dataIndexMap[_itemId];\n\n      if (_index !== undefined) {\n        heights[_index] = rowHeights[_itemId];\n      }\n    }\n  }\n\n  if (computedProps.initialProps.onUpdateRowHeights) {\n    computedProps.initialProps.onUpdateRowHeights(heights, computedProps);\n  }\n\n  computedProps.rowHeightManager.setValues({\n    defaultRowHeight: defaultRowHeight,\n    map: heights\n  });\n};\n\nvar setExpandedMap_FromProps = function setExpandedMap_FromProps(expandedMap, collapsedMap) {\n  var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n    id: null,\n    data: null,\n    expanded: false\n  },\n      id = _ref.id,\n      data = _ref.data,\n      expanded = _ref.expanded;\n\n  var computedProps = arguments.length > 3 ? arguments[3] : undefined;\n  var index;\n\n  if (expandedMap === true && !computedProps.multiRowExpand) {\n    throw new Error('cannot expand all when multiRowExpand is false');\n  }\n\n  if (data) {\n    index = computedProps.dataIndexMap[id];\n\n    if (!expanded) {\n      var rowHeights = computedProps.computedRowHeights;\n\n      if (rowHeights && rowHeights[id]) {\n        rowHeights = _objectSpread({}, rowHeights);\n        delete rowHeights[id];\n        computedProps.setRowHeights(rowHeights);\n      }\n\n      if (computedProps.initialProps.onRowCollapse && computedProps.initialProps.onRowCollapse({\n        data: data,\n        id: id,\n        index: index\n      }) === false) {\n        return;\n      }\n    } else {\n      if (!computedProps.isRowExpandableAt(index)) {\n        return;\n      }\n\n      if (computedProps.initialProps.onRowExpand && computedProps.initialProps.onRowExpand({\n        data: data,\n        id: id,\n        index: index\n      }) === false) {\n        return;\n      }\n\n      if (!computedProps.multiRowExpand) {\n        expandedMap = (0, _defineProperty2.default)({}, id, true);\n      }\n    }\n\n    if (computedProps.initialProps.onRowExpandChange && computedProps.initialProps.onRowExpandChange({\n      expandedRows: expandedMap,\n      collapsedRows: collapsedMap,\n      id: id,\n      index: index,\n      data: data,\n      rowExpanded: expanded\n    }) === false) {\n      return;\n    }\n  }\n\n  if (computedProps.initialProps.onExpandedRowsChange) {\n    computedProps.initialProps.onExpandedRowsChange({\n      expandedRows: expandedMap,\n      collapsedRows: collapsedMap,\n      rowExpanded: expanded,\n      data: data,\n      id: id,\n      index: index\n    });\n  }\n\n  if (!(0, _isControlledProperty.default)(computedProps.initialProps, 'expandedRows') && !(0, _isControlledProperty.default)(computedProps.initialProps, 'collapsedRows') || computedProps.initialProps.expandedRows === true && !(0, _isControlledProperty.default)(computedProps.initialProps, 'collapsedRows')) {\n    var queue = (0, _batchUpdate.default)();\n    queue(function () {\n      computedProps.setExpandedRows(expandedMap);\n      computedProps.setCollapsedRows(collapsedMap);\n    });\n    queue.commit();\n  }\n};\n\nvar isRowExpandableAt_FromProps = function isRowExpandableAt_FromProps(rowIndex, computedProps) {\n  var data = computedProps.getItemAt(rowIndex);\n\n  if (!data) {\n    return false;\n  }\n\n  if (data.__group) {\n    return false;\n  }\n\n  var id = computedProps.getItemId(data);\n\n  if (computedProps.unexpandableRows && computedProps.unexpandableRows[id]) {\n    return false;\n  }\n\n  if (!computedProps.isRowExpandable) {\n    return true;\n  }\n\n  EXPANDABLE_ROW_INFO.id = id;\n  EXPANDABLE_ROW_INFO.data = data;\n  EXPANDABLE_ROW_INFO.rowIndex = rowIndex;\n  return computedProps.isRowExpandable(EXPANDABLE_ROW_INFO);\n};\n\nvar getExpandedMap_FromProps = function getExpandedMap_FromProps(computedProps) {\n  if (!(0, _isRowExpandEnabled_FromProps.isRowExpandEnabled_FromProps)(computedProps)) {\n    return undefined;\n  }\n\n  var expandedRows = computedProps.computedExpandedRows;\n\n  if (expandedRows !== undefined && expandedRows !== true) {\n    expandedRows = _objectSpread({}, expandedRows);\n    Object.keys(getUnexpandableRowsMap_FromProps(computedProps)).forEach(function (k) {\n      delete expandedRows[k];\n    });\n  }\n\n  if (expandedRows === true) {\n    expandedRows = computedProps.data.reduce(function (acc, item, index) {\n      if (computedProps.isRowExpanded(index)) {\n        acc[computedProps.getItemId(item)] = true;\n      }\n\n      return acc;\n    }, {});\n  }\n\n  if ((0, _typeof2.default)(expandedRows) !== 'object' && expandedRows !== true) {\n    expandedRows = {};\n  }\n\n  return expandedRows;\n};\n\nvar getUnexpandableRows_FromProps = function getUnexpandableRows_FromProps(computedProps) {\n  var groupBy = computedProps.computedGroupBy;\n  var initialProps = computedProps.initialProps;\n\n  if (!groupBy && !initialProps.isRowExpandable) {\n    return [];\n  }\n\n  if (groupBy && !initialProps.isRowExpandable) {\n    return computedProps.computedGroupArray || [];\n  }\n\n  return computedProps.data.filter(function (_, index) {\n    return !isRowExpandableAt_FromProps(index, computedProps);\n  });\n};\n\nvar getUnexpandableRowsMap_FromProps = function getUnexpandableRowsMap_FromProps(computedProps) {\n  if (computedProps.unexpandableRows) {\n    return computedProps.unexpandableRows;\n  }\n\n  return getUnexpandableRows_FromProps(computedProps).reduce(function (acc, data) {\n    var id = computedProps.getItemId(data);\n    acc[id] = true;\n    return acc;\n  }, {});\n};\n\nvar getCollapsedMap_FromProps = function getCollapsedMap_FromProps(computedProps) {\n  if (!computedProps.computedRowExpandEnabled) {\n    return undefined;\n  }\n\n  if (!computedProps.multiRowExpand) {\n    return undefined;\n  }\n\n  var result = computedProps.computedCollapsedRows || {};\n\n  if (computedProps.computedGroupBy && computedProps.computedGroupKeys) {\n    result = _objectSpread(_objectSpread({}, result), computedProps.computedGroupKeys);\n  }\n\n  if (computedProps.unexpandableRows) {\n    result = _objectSpread(_objectSpread({}, result), computedProps.unexpandableRows);\n  }\n\n  if (computedProps.initialProps.isRowExpandable) {\n    result = _objectSpread({}, result);\n    computedProps.data.forEach(function (item, index) {\n      if (!computedProps.isRowExpandableAt(index)) {\n        result[computedProps.getItemId(item)] = true;\n      }\n    });\n  }\n\n  return result;\n};\n\nvar isRowExpandedById_FromProps = function isRowExpandedById_FromProps(id, computedProps) {\n  var expandedRows = computedProps.computedExpandedRows;\n\n  if (!expandedRows) {\n    return false;\n  }\n\n  var isExpanded;\n\n  if (expandedRows === true) {\n    var collapsedRows = getCollapsedMap_FromProps(computedProps) || {};\n    isExpanded = !collapsedRows[id];\n  } else {\n    isExpanded = !!expandedRows[id];\n  }\n\n  if (isExpanded) {\n    isExpanded = computedProps.isRowExpanded(computedProps.getRowIndexById(id));\n  }\n\n  return isExpanded;\n};\n\nvar isRowExpanded_FromProps = function isRowExpanded_FromProps(data, computedProps) {\n  if (data == null) {\n    return false;\n  }\n\n  var index = undefined;\n\n  if (typeof data == 'number') {\n    index = data;\n    data = computedProps.getItemAt(data);\n  }\n\n  var expandedRows = computedProps.computedExpandedRows;\n  var id = computedProps.getItemId(data);\n\n  if (!expandedRows) {\n    return false;\n  }\n\n  var isExpanded;\n\n  if (expandedRows === true) {\n    var collapsedMap = getCollapsedMap_FromProps(computedProps) || {};\n    isExpanded = !collapsedMap[id];\n  } else {\n    isExpanded = expandedRows ? !!expandedRows[id] : false;\n  }\n\n  if (isExpanded) {\n    if (index === undefined) {\n      index = computedProps.getRowIndexById(id);\n    }\n\n    isExpanded = computedProps.isRowExpandableAt(index);\n  }\n\n  return isExpanded;\n};\n\nvar setRowExpandedById_FromProps = function setRowExpandedById_FromProps(id, expanded, computedProps) {\n  var data = computedProps.dataMap[id];\n\n  if (!data) {\n    return;\n  }\n\n  var expandedRowsValue = computedProps.computedExpandedRows;\n\n  if (expandedRowsValue === true) {\n    var collapsedMap = _objectSpread({}, computedProps.getCollapsedMap() || {});\n\n    if (!expanded) {\n      collapsedMap[id] = true;\n    } else {\n      delete collapsedMap[id];\n    }\n\n    setExpandedMap_FromProps(true, collapsedMap, {\n      data: data,\n      expanded: expanded,\n      id: id\n    }, computedProps);\n    return;\n  }\n\n  var expandedMap = _objectSpread({}, computedProps.getExpandedMap());\n\n  if (!expanded) {\n    delete expandedMap[id];\n  } else {\n    expandedMap[id] = true;\n  }\n\n  setExpandedMap_FromProps(expandedMap, undefined, {\n    data: data,\n    expanded: expanded,\n    id: id\n  }, computedProps);\n};\n\nvar useRowDetails = function useRowDetails(props, computedProps, computedPropsRef) {\n  var _useProperty = (0, _useProperty7.default)(props, 'expandedRows'),\n      _useProperty2 = (0, _slicedToArray2.default)(_useProperty, 2),\n      expandedRows = _useProperty2[0],\n      setExpandedRows = _useProperty2[1];\n\n  var _useProperty3 = (0, _useProperty7.default)(props, 'collapsedRows'),\n      _useProperty4 = (0, _slicedToArray2.default)(_useProperty3, 2),\n      collapsedRows = _useProperty4[0],\n      setCollapsedRows = _useProperty4[1];\n\n  var _useProperty5 = (0, _useProperty7.default)(props, 'rowHeights'),\n      _useProperty6 = (0, _slicedToArray2.default)(_useProperty5, 2),\n      rowHeights = _useProperty6[0],\n      doSetRowHeights = _useProperty6[1];\n\n  var setRowHeights = (0, _react.useCallback)(function (rowHeights) {\n    var computedProps = computedPropsRef.current;\n\n    if (!computedProps) {\n      return;\n    }\n\n    doSetRowHeights(rowHeights);\n  }, []);\n  var isRowExpandEnabled = (0, _react.useCallback)(function () {\n    var computedProps = computedPropsRef.current;\n\n    if (!computedProps) {\n      return false;\n    }\n\n    return (0, _isRowExpandEnabled_FromProps.isRowExpandEnabled_FromProps)(computedProps);\n  }, []);\n  var isRowExpandableAt = (0, _react.useCallback)(function (rowIndex) {\n    var computedProps = computedPropsRef.current;\n\n    if (!computedProps) {\n      return false;\n    }\n\n    return isRowExpandableAt_FromProps(rowIndex, computedProps);\n  }, []);\n  var isRowExpandableById = (0, _react.useCallback)(function (rowId) {\n    var computedProps = computedPropsRef.current;\n\n    if (!computedProps) {\n      return false;\n    }\n\n    var index = computedProps.getRowIndexById(rowId);\n    return isRowExpandableAt(index);\n  }, []);\n  var isRowExpanded = (0, _react.useCallback)(function (data) {\n    var computedProps = computedPropsRef.current;\n\n    if (!computedProps) {\n      return false;\n    }\n\n    return isRowExpanded_FromProps(data, computedProps);\n  }, []);\n  var getCollapsedMap = (0, _react.useCallback)(function () {\n    var computedProps = computedPropsRef.current;\n\n    if (!computedProps) {\n      return undefined;\n    }\n\n    return getCollapsedMap_FromProps(computedProps);\n  }, []);\n  var getExpandedMap = (0, _react.useCallback)(function () {\n    var computedProps = computedPropsRef.current;\n\n    if (!computedProps) {\n      return undefined;\n    }\n\n    return getExpandedMap_FromProps(computedProps);\n  }, []);\n  var setRowExpandedById = (0, _react.useCallback)(function (id, expanded) {\n    var computedProps = computedPropsRef.current;\n\n    if (!computedProps) {\n      return;\n    }\n\n    setRowExpandedById_FromProps(id, expanded, computedProps);\n  }, []);\n  var toggleRowExpandById = (0, _react.useCallback)(function (id) {\n    var computedProps = computedPropsRef.current;\n\n    if (!computedProps) {\n      return;\n    }\n\n    setRowExpandedById_FromProps(id, !isRowExpandedById(id), computedProps);\n  }, []);\n  var setRowExpandedAt = (0, _react.useCallback)(function (index, expanded) {\n    var data = computedProps.getItemAt(index);\n\n    if (!data) {\n      return;\n    }\n\n    var id = computedProps.getItemId(data);\n    return setRowExpandedById(id, expanded);\n  }, []);\n  var setRowHeightById = (0, _react.useCallback)(function (rowHeight, id) {\n    var computedProps = computedPropsRef.current;\n\n    if (!computedProps) {\n      return;\n    }\n\n    setRowHeightById_FromProps(rowHeight, id, computedProps);\n  }, []);\n  var toggleRowExpand = (0, _react.useCallback)(function (dataOrIndex) {\n    var computedProps = computedPropsRef.current;\n\n    if (!computedProps) {\n      return;\n    }\n\n    var data = typeof dataOrIndex === 'number' ? computedProps.data[dataOrIndex] : dataOrIndex;\n\n    if (!data) {\n      return;\n    }\n\n    var id = computedProps.getItemId(data);\n    var expanded = isRowExpanded(data);\n    return setRowExpandedById(id, !expanded);\n  }, []);\n  var isRowExpandedById = (0, _react.useCallback)(function (id) {\n    var computedProps = computedPropsRef.current;\n\n    if (!computedProps) {\n      return false;\n    }\n\n    return isRowExpandedById_FromProps(id, computedProps);\n  }, []);\n  var computedCollapsedRows = collapsedRows;\n  var computedExpandedRows = expandedRows;\n  var computedRowExpandEnabled = (0, _isRowExpandEnabled_FromProps.isRowExpandEnabled_FromProps)(props);\n  (0, _react.useLayoutEffect)(function () {\n    var computedProps = computedPropsRef.current;\n\n    if (!computedProps) {\n      return;\n    }\n\n    if (computedProps.wasMountedRef.current === false) {\n      return;\n    }\n\n    updateExpandedHeights_FromProps(computedProps);\n  }, [props.rowHeight, props.rowExpandHeight, computedProps.dataIndexMap, rowHeights, computedExpandedRows, computedCollapsedRows, computedRowExpandEnabled]);\n  var detailsGridInfoRef = (0, _react.useRef)({});\n  var renderDetailsGrid = (0, _react.useCallback)(function (rowDetailsInfo) {\n    var computedProps = computedPropsRef.current;\n\n    if (!computedProps) {\n      return;\n    }\n\n    return (0, _renderDetailsGrid.default)(rowDetailsInfo, computedProps);\n  }, []);\n  var onDetailsDidMount = (0, _react.useCallback)(function (childGridComputedPropsRef) {\n    var childGridComputedProps = childGridComputedPropsRef.current;\n\n    if (!childGridComputedProps) {\n      return;\n    }\n\n    childGridComputedProps.detailsGridInfoRef.current.__detailsPersisted = false;\n    var rowDetailsInfo = childGridComputedProps.initialProps.__parentRowInfo;\n    var info = detailsGridInfoRef.current;\n\n    if (info.masterDetailsKeys && info.unmountedDetails && info.masterDetailsInstances) {\n      var cacheKey = info.masterDetailsKeys[rowDetailsInfo.id];\n      info.masterDetailsInstances[cacheKey] = childGridComputedProps;\n      delete info.unmountedDetails[cacheKey];\n    }\n  }, []);\n  var getSelfRestoreProperties = (0, _react.useCallback)(function () {\n    var computedProps = computedPropsRef.current;\n\n    if (!computedProps) {\n      return null;\n    }\n\n    var info = computedProps.detailsGridInfoRef.current;\n    return {\n      rowHeightManager: computedProps.rowHeightManager,\n      masterDetailsCache: info.masterDetailsCache,\n      masterDetailsKeys: info.masterDetailsKeys,\n      originalDetailsGrids: info.originalDetailsGrids,\n      unmountedDetails: info.unmountedDetails\n    };\n  }, []);\n\n  var persistUnmountedDetails = function persistUnmountedDetails() {\n    var info = detailsGridInfoRef.current;\n\n    if (info.masterDetailsInstances) {\n      Object.keys(info.masterDetailsInstances).forEach(function (cacheKey) {\n        var childGridComputedProps = info.masterDetailsInstances[cacheKey];\n\n        if (childGridComputedProps) {\n          onDetailsWillUnmount({\n            current: childGridComputedProps\n          });\n        }\n      });\n    }\n  };\n\n  var onDetailsWillUnmount = (0, _react.useCallback)(function (childGridComputedPropsRef) {\n    var childGridComputedProps = childGridComputedPropsRef.current;\n\n    if (childGridComputedProps.detailsGridInfoRef.current.__detailsPersisted) {\n      return;\n    }\n\n    var rowDetailsInfo = childGridComputedProps.initialProps.__parentRowInfo;\n    childGridComputedProps.persistUnmountedDetails();\n    var info = detailsGridInfoRef.current;\n\n    if (info.masterDetailsKeys && info.unmountedDetails) {\n      var cacheKey = info.masterDetailsKeys[rowDetailsInfo.id];\n      info.unmountedDetails[cacheKey] = {\n        state: childGridComputedProps.getState(),\n        scrollTop: childGridComputedProps.getScrollTop(),\n        scrollLeft: childGridComputedProps.getScrollLeft(),\n        self: childGridComputedProps.getSelfRestoreProperties()\n      };\n    }\n\n    childGridComputedProps.detailsGridInfoRef.current.__detailsPersisted = true;\n  }, []);\n  var onDetailsUpdateRowHeights = (0, _react.useCallback)(function (rowHeights, childComputedProps) {\n    var computedProps = computedPropsRef.current;\n\n    if (!computedProps) {\n      return;\n    }\n\n    var getExtraRowHeights = function getExtraRowHeights(childComputedProps) {\n      var rowHeight = childComputedProps.initialProps.rowHeight;\n      var substractRowHeight = rowHeight;\n      var result = Object.keys(rowHeights || {}).reduce(function (acc, rowId) {\n        return acc + rowHeights[rowId] - substractRowHeight;\n      }, 0);\n      return result;\n    };\n\n    var parentRowInfo = childComputedProps.initialProps.__parentRowInfo;\n    var extraHeight = getExtraRowHeights(childComputedProps);\n\n    if (extraHeight) {\n      setRowHeightById(computedProps.initialProps.rowExpandHeight + extraHeight, parentRowInfo.id);\n    } else {\n      setRowHeightById(null, parentRowInfo.id);\n    }\n  }, []);\n  var getRowHeightById = (0, _react.useCallback)(function (id) {\n    var computedProps = computedPropsRef.current;\n\n    if (!computedProps) {\n      return 0;\n    }\n\n    var rowHeights = getRowHeights_FromProps(computedProps);\n    return rowHeights[id] || computedProps.rowHeight;\n  }, []);\n  var collapseAllRows = (0, _react.useCallback)(function () {\n    var computedProps = computedPropsRef.current;\n\n    if (!computedProps) {\n      return;\n    }\n\n    setExpandedMap_FromProps({}, undefined, undefined, computedProps);\n  }, []);\n  var expandAllRows = (0, _react.useCallback)(function () {\n    var computedProps = computedPropsRef.current;\n\n    if (!computedProps) {\n      return;\n    }\n\n    setExpandedMap_FromProps(true, getUnexpandableRowsMap_FromProps(computedProps), undefined, computedProps);\n  }, []);\n  var computedRenderRowDetails = props.renderRowDetails || (props.renderDetailsGrid ? renderDetailsGrid : null);\n  return {\n    detailsGridInfoRef: detailsGridInfoRef,\n    setExpandedRows: setExpandedRows,\n    setCollapsedRows: setCollapsedRows,\n    getCollapsedMap: getCollapsedMap,\n    getExpandedMap: getExpandedMap,\n    setRowHeights: setRowHeights,\n    isRowExpanded: isRowExpanded,\n    isRowExpandableById: isRowExpandableById,\n    setRowExpandedById: setRowExpandedById,\n    setRowHeightById: setRowHeightById,\n    setRowExpandedAt: setRowExpandedAt,\n    getRowHeightById: getRowHeightById,\n    collapseAllRows: collapseAllRows,\n    expandAllRows: expandAllRows,\n    isRowExpandedById: isRowExpandedById,\n    isRowExpandEnabled: isRowExpandEnabled,\n    isRowExpandableAt: isRowExpandableAt,\n    toggleRowExpand: toggleRowExpand,\n    toggleRowExpandById: toggleRowExpandById,\n    computedRowHeights: rowHeights,\n    computedExpandedRows: computedExpandedRows,\n    computedCollapsedRows: computedCollapsedRows,\n    computedRowExpandEnabled: computedRowExpandEnabled,\n    computedRenderRowDetails: computedRenderRowDetails,\n    onDetailsUpdateRowHeights: onDetailsUpdateRowHeights,\n    onDetailsDidMount: onDetailsDidMount,\n    onDetailsWillUnmount: onDetailsWillUnmount,\n    getSelfRestoreProperties: getSelfRestoreProperties,\n    persistUnmountedDetails: persistUnmountedDetails\n  };\n};\n\nvar _default = useRowDetails;\nexports.default = _default;","map":{"version":3,"sources":["/Users/sungjaejoo/Desktop/ááµáá¢á¨áá³/ááµá«áá¥áá©áá¥/ILP-main/node_modules/@inovua/reactdatagrid-enterprise/plugins/row-details/useRowDetails/index.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_slicedToArray2","_typeof2","_defineProperty2","_react","_useProperty7","_sealedObjectFactory","_batchUpdate","_isControlledProperty","_renderDetailsGrid","_isRowExpandEnabled_FromProps","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","EXPANDABLE_ROW_INFO","rowIndex","undefined","data","id","getRowHeights_FromProps","computedProps","computedRowHeights","setRowHeightById_FromProps","rowHeight","rowHeights","changed","setRowHeights","updateExpandedHeights_FromProps","rowExpandHeight","dataMap","expandedRows","getExpandedMap_FromProps","defaultRowHeight","heights","dataIndexMap","itemId","index","currentRowHeight","_itemId","_index","initialProps","onUpdateRowHeights","rowHeightManager","setValues","map","setExpandedMap_FromProps","expandedMap","collapsedMap","_ref","expanded","multiRowExpand","Error","onRowCollapse","isRowExpandableAt","onRowExpand","onRowExpandChange","collapsedRows","rowExpanded","onExpandedRowsChange","queue","setExpandedRows","setCollapsedRows","commit","isRowExpandableAt_FromProps","getItemAt","__group","getItemId","unexpandableRows","isRowExpandable","isRowExpandEnabled_FromProps","computedExpandedRows","getUnexpandableRowsMap_FromProps","k","reduce","acc","item","isRowExpanded","getUnexpandableRows_FromProps","groupBy","computedGroupBy","computedGroupArray","_","getCollapsedMap_FromProps","computedRowExpandEnabled","result","computedCollapsedRows","computedGroupKeys","isRowExpandedById_FromProps","isExpanded","getRowIndexById","isRowExpanded_FromProps","setRowExpandedById_FromProps","expandedRowsValue","getCollapsedMap","getExpandedMap","useRowDetails","props","computedPropsRef","_useProperty","_useProperty2","_useProperty3","_useProperty4","_useProperty5","_useProperty6","doSetRowHeights","useCallback","current","isRowExpandEnabled","isRowExpandableById","rowId","setRowExpandedById","toggleRowExpandById","isRowExpandedById","setRowExpandedAt","setRowHeightById","toggleRowExpand","dataOrIndex","useLayoutEffect","wasMountedRef","detailsGridInfoRef","useRef","renderDetailsGrid","rowDetailsInfo","onDetailsDidMount","childGridComputedPropsRef","childGridComputedProps","__detailsPersisted","__parentRowInfo","info","masterDetailsKeys","unmountedDetails","masterDetailsInstances","cacheKey","getSelfRestoreProperties","masterDetailsCache","originalDetailsGrids","persistUnmountedDetails","onDetailsWillUnmount","state","getState","scrollTop","getScrollTop","scrollLeft","getScrollLeft","self","onDetailsUpdateRowHeights","childComputedProps","getExtraRowHeights","substractRowHeight","parentRowInfo","extraHeight","getRowHeightById","collapseAllRows","expandAllRows","computedRenderRowDetails","renderRowDetails","_default"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAApC;;AAEAC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,eAAe,GAAGP,sBAAsB,CAACC,OAAO,CAAC,sCAAD,CAAR,CAA5C;;AAEA,IAAIO,QAAQ,GAAGR,sBAAsB,CAACC,OAAO,CAAC,+BAAD,CAAR,CAArC;;AAEA,IAAIQ,gBAAgB,GAAGT,sBAAsB,CAACC,OAAO,CAAC,uCAAD,CAAR,CAA7C;;AAEA,IAAIS,MAAM,GAAGT,OAAO,CAAC,OAAD,CAApB;;AAEA,IAAIU,aAAa,GAAGX,sBAAsB,CAACC,OAAO,CAAC,mDAAD,CAAR,CAA1C;;AAEA,IAAIW,oBAAoB,GAAGZ,sBAAsB,CAACC,OAAO,CAAC,2DAAD,CAAR,CAAjD;;AAEA,IAAIY,YAAY,GAAGb,sBAAsB,CAACC,OAAO,CAAC,mDAAD,CAAR,CAAzC;;AAEA,IAAIa,qBAAqB,GAAGd,sBAAsB,CAACC,OAAO,CAAC,4DAAD,CAAR,CAAlD;;AAEA,IAAIc,kBAAkB,GAAGf,sBAAsB,CAACC,OAAO,CAAC,qBAAD,CAAR,CAA/C;;AAEA,IAAIe,6BAA6B,GAAGf,OAAO,CAAC,oEAAD,CAA3C;;AAEA,SAASgB,OAAT,CAAiBC,MAAjB,EAAyBC,cAAzB,EAAyC;AAAE,MAAIC,IAAI,GAAGlB,MAAM,CAACkB,IAAP,CAAYF,MAAZ,CAAX;;AAAgC,MAAIhB,MAAM,CAACmB,qBAAX,EAAkC;AAAE,QAAIC,OAAO,GAAGpB,MAAM,CAACmB,qBAAP,CAA6BH,MAA7B,CAAd;AAAoDC,IAAAA,cAAc,KAAKG,OAAO,GAAGA,OAAO,CAACC,MAAR,CAAe,UAAUC,GAAV,EAAe;AAAE,aAAOtB,MAAM,CAACuB,wBAAP,CAAgCP,MAAhC,EAAwCM,GAAxC,EAA6CE,UAApD;AAAiE,KAAjG,CAAf,CAAd,EAAkIN,IAAI,CAACO,IAAL,CAAUC,KAAV,CAAgBR,IAAhB,EAAsBE,OAAtB,CAAlI;AAAmK;;AAAC,SAAOF,IAAP;AAAc;;AAErV,SAASS,aAAT,CAAuBC,MAAvB,EAA+B;AAAE,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AAAE,QAAIG,MAAM,GAAG,QAAQF,SAAS,CAACD,CAAD,CAAjB,GAAuBC,SAAS,CAACD,CAAD,CAAhC,GAAsC,EAAnD;AAAuDA,IAAAA,CAAC,GAAG,CAAJ,GAAQd,OAAO,CAACf,MAAM,CAACgC,MAAD,CAAP,EAAiB,CAAC,CAAlB,CAAP,CAA4BC,OAA5B,CAAoC,UAAUC,GAAV,EAAe;AAAE,OAAC,GAAG3B,gBAAgB,CAACH,OAArB,EAA8BwB,MAA9B,EAAsCM,GAAtC,EAA2CF,MAAM,CAACE,GAAD,CAAjD;AAA0D,KAA/G,CAAR,GAA2HlC,MAAM,CAACmC,yBAAP,GAAmCnC,MAAM,CAACoC,gBAAP,CAAwBR,MAAxB,EAAgC5B,MAAM,CAACmC,yBAAP,CAAiCH,MAAjC,CAAhC,CAAnC,GAA+GjB,OAAO,CAACf,MAAM,CAACgC,MAAD,CAAP,CAAP,CAAwBC,OAAxB,CAAgC,UAAUC,GAAV,EAAe;AAAElC,MAAAA,MAAM,CAACC,cAAP,CAAsB2B,MAAtB,EAA8BM,GAA9B,EAAmClC,MAAM,CAACuB,wBAAP,CAAgCS,MAAhC,EAAwCE,GAAxC,CAAnC;AAAmF,KAApI,CAA1O;AAAkX;;AAAC,SAAON,MAAP;AAAgB;;AAExgB,IAAIS,mBAAmB,GAAG,CAAC,GAAG3B,oBAAoB,CAACN,OAAzB,EAAkC;AAC1DkC,EAAAA,QAAQ,EAAEC,SADgD;AAE1DC,EAAAA,IAAI,EAAED,SAFoD;AAG1DE,EAAAA,EAAE,EAAEF;AAHsD,CAAlC,CAA1B;;AAMA,IAAIG,uBAAuB,GAAG,SAASA,uBAAT,CAAiCC,aAAjC,EAAgD;AAC5E,SAAOA,aAAa,CAACC,kBAAd,IAAoC,EAA3C;AACD,CAFD;;AAIA,IAAIC,0BAA0B,GAAG,SAASA,0BAAT,CAAoCC,SAApC,EAA+CL,EAA/C,EAAmDE,aAAnD,EAAkE;AACjG,MAAII,UAAU,GAAGpB,aAAa,CAAC,EAAD,EAAKe,uBAAuB,CAACC,aAAD,CAA5B,CAA9B;;AAEA,MAAIK,OAAO,GAAG,KAAd;;AAEA,MAAIF,SAAS,IAAI,IAAjB,EAAuB;AACrB,QAAIC,UAAU,CAACN,EAAD,CAAV,KAAmBK,SAAvB,EAAkC;AAChCC,MAAAA,UAAU,CAACN,EAAD,CAAV,GAAiBK,SAAjB;AACAE,MAAAA,OAAO,GAAG,IAAV;AACD;AACF,GALD,MAKO;AACL,QAAID,UAAU,CAACN,EAAD,CAAd,EAAoB;AAClB,aAAOM,UAAU,CAACN,EAAD,CAAjB;AACAO,MAAAA,OAAO,GAAG,IAAV;AACD;AACF;;AAED,MAAIA,OAAJ,EAAa;AACXL,IAAAA,aAAa,CAACM,aAAd,CAA4BF,UAA5B;AACD;AACF,CApBD;;AAsBA,IAAIG,+BAA+B,GAAG,SAASA,+BAAT,CAAyCP,aAAzC,EAAwDI,UAAxD,EAAoE;AACxG,MAAII,eAAe,GAAGR,aAAa,CAACQ,eAApC;AAAA,MACIC,OAAO,GAAGT,aAAa,CAACS,OAD5B;AAEA,MAAIC,YAAY,GAAGC,wBAAwB,CAACX,aAAD,CAA3C;AACA,MAAIY,gBAAgB,GAAGZ,aAAa,CAACG,SAArC;AACA,MAAIU,OAAO,GAAG,EAAd;AACA,MAAIC,YAAY,GAAGd,aAAa,CAACc,YAAjC;;AAEA,MAAIA,YAAJ,EAAkB;AAChB,SAAK,IAAIC,MAAT,IAAmBL,YAAnB,EAAiC;AAC/B,UAAIM,KAAK,GAAGF,YAAY,CAACC,MAAD,CAAxB;;AAEA,UAAIC,KAAK,KAAKpB,SAAd,EAAyB;AACvB,YAAI,OAAOY,eAAP,KAA2B,QAA/B,EAAyC;AACvCK,UAAAA,OAAO,CAACG,KAAD,CAAP,GAAiBR,eAAjB;AACD,SAFD,MAEO,IAAI,OAAOA,eAAP,KAA2B,UAA/B,EAA2C;AAChD,cAAIS,gBAAgB,GAAGT,eAAe,CAAC;AACrCX,YAAAA,IAAI,EAAEY,OAAO,IAAIA,OAAO,CAACM,MAAD;AADa,WAAD,CAAtC;AAGAF,UAAAA,OAAO,CAACG,KAAD,CAAP,GAAiBC,gBAAjB;AACD;AACF;AACF;AACF;;AAEDb,EAAAA,UAAU,GAAGA,UAAU,IAAIL,uBAAuB,CAACC,aAAD,CAAlD;;AAEA,MAAII,UAAU,IAAIU,YAAlB,EAAgC;AAC9B,SAAK,IAAII,OAAT,IAAoBd,UAApB,EAAgC;AAC9B,UAAIe,MAAM,GAAGL,YAAY,CAACI,OAAD,CAAzB;;AAEA,UAAIC,MAAM,KAAKvB,SAAf,EAA0B;AACxBiB,QAAAA,OAAO,CAACM,MAAD,CAAP,GAAkBf,UAAU,CAACc,OAAD,CAA5B;AACD;AACF;AACF;;AAED,MAAIlB,aAAa,CAACoB,YAAd,CAA2BC,kBAA/B,EAAmD;AACjDrB,IAAAA,aAAa,CAACoB,YAAd,CAA2BC,kBAA3B,CAA8CR,OAA9C,EAAuDb,aAAvD;AACD;;AAEDA,EAAAA,aAAa,CAACsB,gBAAd,CAA+BC,SAA/B,CAAyC;AACvCX,IAAAA,gBAAgB,EAAEA,gBADqB;AAEvCY,IAAAA,GAAG,EAAEX;AAFkC,GAAzC;AAID,CA7CD;;AA+CA,IAAIY,wBAAwB,GAAG,SAASA,wBAAT,CAAkCC,WAAlC,EAA+CC,YAA/C,EAA6D;AAC1F,MAAIC,IAAI,GAAGzC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBS,SAAzC,GAAqDT,SAAS,CAAC,CAAD,CAA9D,GAAoE;AAC7EW,IAAAA,EAAE,EAAE,IADyE;AAE7ED,IAAAA,IAAI,EAAE,IAFuE;AAG7EgC,IAAAA,QAAQ,EAAE;AAHmE,GAA/E;AAAA,MAKI/B,EAAE,GAAG8B,IAAI,CAAC9B,EALd;AAAA,MAMID,IAAI,GAAG+B,IAAI,CAAC/B,IANhB;AAAA,MAOIgC,QAAQ,GAAGD,IAAI,CAACC,QAPpB;;AASA,MAAI7B,aAAa,GAAGb,SAAS,CAACC,MAAV,GAAmB,CAAnB,GAAuBD,SAAS,CAAC,CAAD,CAAhC,GAAsCS,SAA1D;AACA,MAAIoB,KAAJ;;AAEA,MAAIU,WAAW,KAAK,IAAhB,IAAwB,CAAC1B,aAAa,CAAC8B,cAA3C,EAA2D;AACzD,UAAM,IAAIC,KAAJ,CAAU,gDAAV,CAAN;AACD;;AAED,MAAIlC,IAAJ,EAAU;AACRmB,IAAAA,KAAK,GAAGhB,aAAa,CAACc,YAAd,CAA2BhB,EAA3B,CAAR;;AAEA,QAAI,CAAC+B,QAAL,EAAe;AACb,UAAIzB,UAAU,GAAGJ,aAAa,CAACC,kBAA/B;;AAEA,UAAIG,UAAU,IAAIA,UAAU,CAACN,EAAD,CAA5B,EAAkC;AAChCM,QAAAA,UAAU,GAAGpB,aAAa,CAAC,EAAD,EAAKoB,UAAL,CAA1B;AACA,eAAOA,UAAU,CAACN,EAAD,CAAjB;AACAE,QAAAA,aAAa,CAACM,aAAd,CAA4BF,UAA5B;AACD;;AAED,UAAIJ,aAAa,CAACoB,YAAd,CAA2BY,aAA3B,IAA4ChC,aAAa,CAACoB,YAAd,CAA2BY,aAA3B,CAAyC;AACvFnC,QAAAA,IAAI,EAAEA,IADiF;AAEvFC,QAAAA,EAAE,EAAEA,EAFmF;AAGvFkB,QAAAA,KAAK,EAAEA;AAHgF,OAAzC,MAIzC,KAJP,EAIc;AACZ;AACD;AACF,KAhBD,MAgBO;AACL,UAAI,CAAChB,aAAa,CAACiC,iBAAd,CAAgCjB,KAAhC,CAAL,EAA6C;AAC3C;AACD;;AAED,UAAIhB,aAAa,CAACoB,YAAd,CAA2Bc,WAA3B,IAA0ClC,aAAa,CAACoB,YAAd,CAA2Bc,WAA3B,CAAuC;AACnFrC,QAAAA,IAAI,EAAEA,IAD6E;AAEnFC,QAAAA,EAAE,EAAEA,EAF+E;AAGnFkB,QAAAA,KAAK,EAAEA;AAH4E,OAAvC,MAIvC,KAJP,EAIc;AACZ;AACD;;AAED,UAAI,CAAChB,aAAa,CAAC8B,cAAnB,EAAmC;AACjCJ,QAAAA,WAAW,GAAG,CAAC,GAAG9D,gBAAgB,CAACH,OAArB,EAA8B,EAA9B,EAAkCqC,EAAlC,EAAsC,IAAtC,CAAd;AACD;AACF;;AAED,QAAIE,aAAa,CAACoB,YAAd,CAA2Be,iBAA3B,IAAgDnC,aAAa,CAACoB,YAAd,CAA2Be,iBAA3B,CAA6C;AAC/FzB,MAAAA,YAAY,EAAEgB,WADiF;AAE/FU,MAAAA,aAAa,EAAET,YAFgF;AAG/F7B,MAAAA,EAAE,EAAEA,EAH2F;AAI/FkB,MAAAA,KAAK,EAAEA,KAJwF;AAK/FnB,MAAAA,IAAI,EAAEA,IALyF;AAM/FwC,MAAAA,WAAW,EAAER;AANkF,KAA7C,MAO7C,KAPP,EAOc;AACZ;AACD;AACF;;AAED,MAAI7B,aAAa,CAACoB,YAAd,CAA2BkB,oBAA/B,EAAqD;AACnDtC,IAAAA,aAAa,CAACoB,YAAd,CAA2BkB,oBAA3B,CAAgD;AAC9C5B,MAAAA,YAAY,EAAEgB,WADgC;AAE9CU,MAAAA,aAAa,EAAET,YAF+B;AAG9CU,MAAAA,WAAW,EAAER,QAHiC;AAI9ChC,MAAAA,IAAI,EAAEA,IAJwC;AAK9CC,MAAAA,EAAE,EAAEA,EAL0C;AAM9CkB,MAAAA,KAAK,EAAEA;AANuC,KAAhD;AAQD;;AAED,MAAI,CAAC,CAAC,GAAG/C,qBAAqB,CAACR,OAA1B,EAAmCuC,aAAa,CAACoB,YAAjD,EAA+D,cAA/D,CAAD,IAAmF,CAAC,CAAC,GAAGnD,qBAAqB,CAACR,OAA1B,EAAmCuC,aAAa,CAACoB,YAAjD,EAA+D,eAA/D,CAApF,IAAuKpB,aAAa,CAACoB,YAAd,CAA2BV,YAA3B,KAA4C,IAA5C,IAAoD,CAAC,CAAC,GAAGzC,qBAAqB,CAACR,OAA1B,EAAmCuC,aAAa,CAACoB,YAAjD,EAA+D,eAA/D,CAAhO,EAAiT;AAC/S,QAAImB,KAAK,GAAG,CAAC,GAAGvE,YAAY,CAACP,OAAjB,GAAZ;AACA8E,IAAAA,KAAK,CAAC,YAAY;AAChBvC,MAAAA,aAAa,CAACwC,eAAd,CAA8Bd,WAA9B;AACA1B,MAAAA,aAAa,CAACyC,gBAAd,CAA+Bd,YAA/B;AACD,KAHI,CAAL;AAIAY,IAAAA,KAAK,CAACG,MAAN;AACD;AACF,CArFD;;AAuFA,IAAIC,2BAA2B,GAAG,SAASA,2BAAT,CAAqChD,QAArC,EAA+CK,aAA/C,EAA8D;AAC9F,MAAIH,IAAI,GAAGG,aAAa,CAAC4C,SAAd,CAAwBjD,QAAxB,CAAX;;AAEA,MAAI,CAACE,IAAL,EAAW;AACT,WAAO,KAAP;AACD;;AAED,MAAIA,IAAI,CAACgD,OAAT,EAAkB;AAChB,WAAO,KAAP;AACD;;AAED,MAAI/C,EAAE,GAAGE,aAAa,CAAC8C,SAAd,CAAwBjD,IAAxB,CAAT;;AAEA,MAAIG,aAAa,CAAC+C,gBAAd,IAAkC/C,aAAa,CAAC+C,gBAAd,CAA+BjD,EAA/B,CAAtC,EAA0E;AACxE,WAAO,KAAP;AACD;;AAED,MAAI,CAACE,aAAa,CAACgD,eAAnB,EAAoC;AAClC,WAAO,IAAP;AACD;;AAEDtD,EAAAA,mBAAmB,CAACI,EAApB,GAAyBA,EAAzB;AACAJ,EAAAA,mBAAmB,CAACG,IAApB,GAA2BA,IAA3B;AACAH,EAAAA,mBAAmB,CAACC,QAApB,GAA+BA,QAA/B;AACA,SAAOK,aAAa,CAACgD,eAAd,CAA8BtD,mBAA9B,CAAP;AACD,CAzBD;;AA2BA,IAAIiB,wBAAwB,GAAG,SAASA,wBAAT,CAAkCX,aAAlC,EAAiD;AAC9E,MAAI,CAAC,CAAC,GAAG7B,6BAA6B,CAAC8E,4BAAlC,EAAgEjD,aAAhE,CAAL,EAAqF;AACnF,WAAOJ,SAAP;AACD;;AAED,MAAIc,YAAY,GAAGV,aAAa,CAACkD,oBAAjC;;AAEA,MAAIxC,YAAY,KAAKd,SAAjB,IAA8Bc,YAAY,KAAK,IAAnD,EAAyD;AACvDA,IAAAA,YAAY,GAAG1B,aAAa,CAAC,EAAD,EAAK0B,YAAL,CAA5B;AACArD,IAAAA,MAAM,CAACkB,IAAP,CAAY4E,gCAAgC,CAACnD,aAAD,CAA5C,EAA6DV,OAA7D,CAAqE,UAAU8D,CAAV,EAAa;AAChF,aAAO1C,YAAY,CAAC0C,CAAD,CAAnB;AACD,KAFD;AAGD;;AAED,MAAI1C,YAAY,KAAK,IAArB,EAA2B;AACzBA,IAAAA,YAAY,GAAGV,aAAa,CAACH,IAAd,CAAmBwD,MAAnB,CAA0B,UAAUC,GAAV,EAAeC,IAAf,EAAqBvC,KAArB,EAA4B;AACnE,UAAIhB,aAAa,CAACwD,aAAd,CAA4BxC,KAA5B,CAAJ,EAAwC;AACtCsC,QAAAA,GAAG,CAACtD,aAAa,CAAC8C,SAAd,CAAwBS,IAAxB,CAAD,CAAH,GAAqC,IAArC;AACD;;AAED,aAAOD,GAAP;AACD,KANc,EAMZ,EANY,CAAf;AAOD;;AAED,MAAI,CAAC,GAAG3F,QAAQ,CAACF,OAAb,EAAsBiD,YAAtB,MAAwC,QAAxC,IAAoDA,YAAY,KAAK,IAAzE,EAA+E;AAC7EA,IAAAA,YAAY,GAAG,EAAf;AACD;;AAED,SAAOA,YAAP;AACD,CA7BD;;AA+BA,IAAI+C,6BAA6B,GAAG,SAASA,6BAAT,CAAuCzD,aAAvC,EAAsD;AACxF,MAAI0D,OAAO,GAAG1D,aAAa,CAAC2D,eAA5B;AACA,MAAIvC,YAAY,GAAGpB,aAAa,CAACoB,YAAjC;;AAEA,MAAI,CAACsC,OAAD,IAAY,CAACtC,YAAY,CAAC4B,eAA9B,EAA+C;AAC7C,WAAO,EAAP;AACD;;AAED,MAAIU,OAAO,IAAI,CAACtC,YAAY,CAAC4B,eAA7B,EAA8C;AAC5C,WAAOhD,aAAa,CAAC4D,kBAAd,IAAoC,EAA3C;AACD;;AAED,SAAO5D,aAAa,CAACH,IAAd,CAAmBnB,MAAnB,CAA0B,UAAUmF,CAAV,EAAa7C,KAAb,EAAoB;AACnD,WAAO,CAAC2B,2BAA2B,CAAC3B,KAAD,EAAQhB,aAAR,CAAnC;AACD,GAFM,CAAP;AAGD,CAfD;;AAiBA,IAAImD,gCAAgC,GAAG,SAASA,gCAAT,CAA0CnD,aAA1C,EAAyD;AAC9F,MAAIA,aAAa,CAAC+C,gBAAlB,EAAoC;AAClC,WAAO/C,aAAa,CAAC+C,gBAArB;AACD;;AAED,SAAOU,6BAA6B,CAACzD,aAAD,CAA7B,CAA6CqD,MAA7C,CAAoD,UAAUC,GAAV,EAAezD,IAAf,EAAqB;AAC9E,QAAIC,EAAE,GAAGE,aAAa,CAAC8C,SAAd,CAAwBjD,IAAxB,CAAT;AACAyD,IAAAA,GAAG,CAACxD,EAAD,CAAH,GAAU,IAAV;AACA,WAAOwD,GAAP;AACD,GAJM,EAIJ,EAJI,CAAP;AAKD,CAVD;;AAYA,IAAIQ,yBAAyB,GAAG,SAASA,yBAAT,CAAmC9D,aAAnC,EAAkD;AAChF,MAAI,CAACA,aAAa,CAAC+D,wBAAnB,EAA6C;AAC3C,WAAOnE,SAAP;AACD;;AAED,MAAI,CAACI,aAAa,CAAC8B,cAAnB,EAAmC;AACjC,WAAOlC,SAAP;AACD;;AAED,MAAIoE,MAAM,GAAGhE,aAAa,CAACiE,qBAAd,IAAuC,EAApD;;AAEA,MAAIjE,aAAa,CAAC2D,eAAd,IAAiC3D,aAAa,CAACkE,iBAAnD,EAAsE;AACpEF,IAAAA,MAAM,GAAGhF,aAAa,CAACA,aAAa,CAAC,EAAD,EAAKgF,MAAL,CAAd,EAA4BhE,aAAa,CAACkE,iBAA1C,CAAtB;AACD;;AAED,MAAIlE,aAAa,CAAC+C,gBAAlB,EAAoC;AAClCiB,IAAAA,MAAM,GAAGhF,aAAa,CAACA,aAAa,CAAC,EAAD,EAAKgF,MAAL,CAAd,EAA4BhE,aAAa,CAAC+C,gBAA1C,CAAtB;AACD;;AAED,MAAI/C,aAAa,CAACoB,YAAd,CAA2B4B,eAA/B,EAAgD;AAC9CgB,IAAAA,MAAM,GAAGhF,aAAa,CAAC,EAAD,EAAKgF,MAAL,CAAtB;AACAhE,IAAAA,aAAa,CAACH,IAAd,CAAmBP,OAAnB,CAA2B,UAAUiE,IAAV,EAAgBvC,KAAhB,EAAuB;AAChD,UAAI,CAAChB,aAAa,CAACiC,iBAAd,CAAgCjB,KAAhC,CAAL,EAA6C;AAC3CgD,QAAAA,MAAM,CAAChE,aAAa,CAAC8C,SAAd,CAAwBS,IAAxB,CAAD,CAAN,GAAwC,IAAxC;AACD;AACF,KAJD;AAKD;;AAED,SAAOS,MAAP;AACD,CA7BD;;AA+BA,IAAIG,2BAA2B,GAAG,SAASA,2BAAT,CAAqCrE,EAArC,EAAyCE,aAAzC,EAAwD;AACxF,MAAIU,YAAY,GAAGV,aAAa,CAACkD,oBAAjC;;AAEA,MAAI,CAACxC,YAAL,EAAmB;AACjB,WAAO,KAAP;AACD;;AAED,MAAI0D,UAAJ;;AAEA,MAAI1D,YAAY,KAAK,IAArB,EAA2B;AACzB,QAAI0B,aAAa,GAAG0B,yBAAyB,CAAC9D,aAAD,CAAzB,IAA4C,EAAhE;AACAoE,IAAAA,UAAU,GAAG,CAAChC,aAAa,CAACtC,EAAD,CAA3B;AACD,GAHD,MAGO;AACLsE,IAAAA,UAAU,GAAG,CAAC,CAAC1D,YAAY,CAACZ,EAAD,CAA3B;AACD;;AAED,MAAIsE,UAAJ,EAAgB;AACdA,IAAAA,UAAU,GAAGpE,aAAa,CAACwD,aAAd,CAA4BxD,aAAa,CAACqE,eAAd,CAA8BvE,EAA9B,CAA5B,CAAb;AACD;;AAED,SAAOsE,UAAP;AACD,CArBD;;AAuBA,IAAIE,uBAAuB,GAAG,SAASA,uBAAT,CAAiCzE,IAAjC,EAAuCG,aAAvC,EAAsD;AAClF,MAAIH,IAAI,IAAI,IAAZ,EAAkB;AAChB,WAAO,KAAP;AACD;;AAED,MAAImB,KAAK,GAAGpB,SAAZ;;AAEA,MAAI,OAAOC,IAAP,IAAe,QAAnB,EAA6B;AAC3BmB,IAAAA,KAAK,GAAGnB,IAAR;AACAA,IAAAA,IAAI,GAAGG,aAAa,CAAC4C,SAAd,CAAwB/C,IAAxB,CAAP;AACD;;AAED,MAAIa,YAAY,GAAGV,aAAa,CAACkD,oBAAjC;AACA,MAAIpD,EAAE,GAAGE,aAAa,CAAC8C,SAAd,CAAwBjD,IAAxB,CAAT;;AAEA,MAAI,CAACa,YAAL,EAAmB;AACjB,WAAO,KAAP;AACD;;AAED,MAAI0D,UAAJ;;AAEA,MAAI1D,YAAY,KAAK,IAArB,EAA2B;AACzB,QAAIiB,YAAY,GAAGmC,yBAAyB,CAAC9D,aAAD,CAAzB,IAA4C,EAA/D;AACAoE,IAAAA,UAAU,GAAG,CAACzC,YAAY,CAAC7B,EAAD,CAA1B;AACD,GAHD,MAGO;AACLsE,IAAAA,UAAU,GAAG1D,YAAY,GAAG,CAAC,CAACA,YAAY,CAACZ,EAAD,CAAjB,GAAwB,KAAjD;AACD;;AAED,MAAIsE,UAAJ,EAAgB;AACd,QAAIpD,KAAK,KAAKpB,SAAd,EAAyB;AACvBoB,MAAAA,KAAK,GAAGhB,aAAa,CAACqE,eAAd,CAA8BvE,EAA9B,CAAR;AACD;;AAEDsE,IAAAA,UAAU,GAAGpE,aAAa,CAACiC,iBAAd,CAAgCjB,KAAhC,CAAb;AACD;;AAED,SAAOoD,UAAP;AACD,CArCD;;AAuCA,IAAIG,4BAA4B,GAAG,SAASA,4BAAT,CAAsCzE,EAAtC,EAA0C+B,QAA1C,EAAoD7B,aAApD,EAAmE;AACpG,MAAIH,IAAI,GAAGG,aAAa,CAACS,OAAd,CAAsBX,EAAtB,CAAX;;AAEA,MAAI,CAACD,IAAL,EAAW;AACT;AACD;;AAED,MAAI2E,iBAAiB,GAAGxE,aAAa,CAACkD,oBAAtC;;AAEA,MAAIsB,iBAAiB,KAAK,IAA1B,EAAgC;AAC9B,QAAI7C,YAAY,GAAG3C,aAAa,CAAC,EAAD,EAAKgB,aAAa,CAACyE,eAAd,MAAmC,EAAxC,CAAhC;;AAEA,QAAI,CAAC5C,QAAL,EAAe;AACbF,MAAAA,YAAY,CAAC7B,EAAD,CAAZ,GAAmB,IAAnB;AACD,KAFD,MAEO;AACL,aAAO6B,YAAY,CAAC7B,EAAD,CAAnB;AACD;;AAED2B,IAAAA,wBAAwB,CAAC,IAAD,EAAOE,YAAP,EAAqB;AAC3C9B,MAAAA,IAAI,EAAEA,IADqC;AAE3CgC,MAAAA,QAAQ,EAAEA,QAFiC;AAG3C/B,MAAAA,EAAE,EAAEA;AAHuC,KAArB,EAIrBE,aAJqB,CAAxB;AAKA;AACD;;AAED,MAAI0B,WAAW,GAAG1C,aAAa,CAAC,EAAD,EAAKgB,aAAa,CAAC0E,cAAd,EAAL,CAA/B;;AAEA,MAAI,CAAC7C,QAAL,EAAe;AACb,WAAOH,WAAW,CAAC5B,EAAD,CAAlB;AACD,GAFD,MAEO;AACL4B,IAAAA,WAAW,CAAC5B,EAAD,CAAX,GAAkB,IAAlB;AACD;;AAED2B,EAAAA,wBAAwB,CAACC,WAAD,EAAc9B,SAAd,EAAyB;AAC/CC,IAAAA,IAAI,EAAEA,IADyC;AAE/CgC,IAAAA,QAAQ,EAAEA,QAFqC;AAG/C/B,IAAAA,EAAE,EAAEA;AAH2C,GAAzB,EAIrBE,aAJqB,CAAxB;AAKD,CAvCD;;AAyCA,IAAI2E,aAAa,GAAG,SAASA,aAAT,CAAuBC,KAAvB,EAA8B5E,aAA9B,EAA6C6E,gBAA7C,EAA+D;AACjF,MAAIC,YAAY,GAAG,CAAC,GAAGhH,aAAa,CAACL,OAAlB,EAA2BmH,KAA3B,EAAkC,cAAlC,CAAnB;AAAA,MACIG,aAAa,GAAG,CAAC,GAAGrH,eAAe,CAACD,OAApB,EAA6BqH,YAA7B,EAA2C,CAA3C,CADpB;AAAA,MAEIpE,YAAY,GAAGqE,aAAa,CAAC,CAAD,CAFhC;AAAA,MAGIvC,eAAe,GAAGuC,aAAa,CAAC,CAAD,CAHnC;;AAKA,MAAIC,aAAa,GAAG,CAAC,GAAGlH,aAAa,CAACL,OAAlB,EAA2BmH,KAA3B,EAAkC,eAAlC,CAApB;AAAA,MACIK,aAAa,GAAG,CAAC,GAAGvH,eAAe,CAACD,OAApB,EAA6BuH,aAA7B,EAA4C,CAA5C,CADpB;AAAA,MAEI5C,aAAa,GAAG6C,aAAa,CAAC,CAAD,CAFjC;AAAA,MAGIxC,gBAAgB,GAAGwC,aAAa,CAAC,CAAD,CAHpC;;AAKA,MAAIC,aAAa,GAAG,CAAC,GAAGpH,aAAa,CAACL,OAAlB,EAA2BmH,KAA3B,EAAkC,YAAlC,CAApB;AAAA,MACIO,aAAa,GAAG,CAAC,GAAGzH,eAAe,CAACD,OAApB,EAA6ByH,aAA7B,EAA4C,CAA5C,CADpB;AAAA,MAEI9E,UAAU,GAAG+E,aAAa,CAAC,CAAD,CAF9B;AAAA,MAGIC,eAAe,GAAGD,aAAa,CAAC,CAAD,CAHnC;;AAKA,MAAI7E,aAAa,GAAG,CAAC,GAAGzC,MAAM,CAACwH,WAAX,EAAwB,UAAUjF,UAAV,EAAsB;AAChE,QAAIJ,aAAa,GAAG6E,gBAAgB,CAACS,OAArC;;AAEA,QAAI,CAACtF,aAAL,EAAoB;AAClB;AACD;;AAEDoF,IAAAA,eAAe,CAAChF,UAAD,CAAf;AACD,GARmB,EAQjB,EARiB,CAApB;AASA,MAAImF,kBAAkB,GAAG,CAAC,GAAG1H,MAAM,CAACwH,WAAX,EAAwB,YAAY;AAC3D,QAAIrF,aAAa,GAAG6E,gBAAgB,CAACS,OAArC;;AAEA,QAAI,CAACtF,aAAL,EAAoB;AAClB,aAAO,KAAP;AACD;;AAED,WAAO,CAAC,GAAG7B,6BAA6B,CAAC8E,4BAAlC,EAAgEjD,aAAhE,CAAP;AACD,GARwB,EAQtB,EARsB,CAAzB;AASA,MAAIiC,iBAAiB,GAAG,CAAC,GAAGpE,MAAM,CAACwH,WAAX,EAAwB,UAAU1F,QAAV,EAAoB;AAClE,QAAIK,aAAa,GAAG6E,gBAAgB,CAACS,OAArC;;AAEA,QAAI,CAACtF,aAAL,EAAoB;AAClB,aAAO,KAAP;AACD;;AAED,WAAO2C,2BAA2B,CAAChD,QAAD,EAAWK,aAAX,CAAlC;AACD,GARuB,EAQrB,EARqB,CAAxB;AASA,MAAIwF,mBAAmB,GAAG,CAAC,GAAG3H,MAAM,CAACwH,WAAX,EAAwB,UAAUI,KAAV,EAAiB;AACjE,QAAIzF,aAAa,GAAG6E,gBAAgB,CAACS,OAArC;;AAEA,QAAI,CAACtF,aAAL,EAAoB;AAClB,aAAO,KAAP;AACD;;AAED,QAAIgB,KAAK,GAAGhB,aAAa,CAACqE,eAAd,CAA8BoB,KAA9B,CAAZ;AACA,WAAOxD,iBAAiB,CAACjB,KAAD,CAAxB;AACD,GATyB,EASvB,EATuB,CAA1B;AAUA,MAAIwC,aAAa,GAAG,CAAC,GAAG3F,MAAM,CAACwH,WAAX,EAAwB,UAAUxF,IAAV,EAAgB;AAC1D,QAAIG,aAAa,GAAG6E,gBAAgB,CAACS,OAArC;;AAEA,QAAI,CAACtF,aAAL,EAAoB;AAClB,aAAO,KAAP;AACD;;AAED,WAAOsE,uBAAuB,CAACzE,IAAD,EAAOG,aAAP,CAA9B;AACD,GARmB,EAQjB,EARiB,CAApB;AASA,MAAIyE,eAAe,GAAG,CAAC,GAAG5G,MAAM,CAACwH,WAAX,EAAwB,YAAY;AACxD,QAAIrF,aAAa,GAAG6E,gBAAgB,CAACS,OAArC;;AAEA,QAAI,CAACtF,aAAL,EAAoB;AAClB,aAAOJ,SAAP;AACD;;AAED,WAAOkE,yBAAyB,CAAC9D,aAAD,CAAhC;AACD,GARqB,EAQnB,EARmB,CAAtB;AASA,MAAI0E,cAAc,GAAG,CAAC,GAAG7G,MAAM,CAACwH,WAAX,EAAwB,YAAY;AACvD,QAAIrF,aAAa,GAAG6E,gBAAgB,CAACS,OAArC;;AAEA,QAAI,CAACtF,aAAL,EAAoB;AAClB,aAAOJ,SAAP;AACD;;AAED,WAAOe,wBAAwB,CAACX,aAAD,CAA/B;AACD,GARoB,EAQlB,EARkB,CAArB;AASA,MAAI0F,kBAAkB,GAAG,CAAC,GAAG7H,MAAM,CAACwH,WAAX,EAAwB,UAAUvF,EAAV,EAAc+B,QAAd,EAAwB;AACvE,QAAI7B,aAAa,GAAG6E,gBAAgB,CAACS,OAArC;;AAEA,QAAI,CAACtF,aAAL,EAAoB;AAClB;AACD;;AAEDuE,IAAAA,4BAA4B,CAACzE,EAAD,EAAK+B,QAAL,EAAe7B,aAAf,CAA5B;AACD,GARwB,EAQtB,EARsB,CAAzB;AASA,MAAI2F,mBAAmB,GAAG,CAAC,GAAG9H,MAAM,CAACwH,WAAX,EAAwB,UAAUvF,EAAV,EAAc;AAC9D,QAAIE,aAAa,GAAG6E,gBAAgB,CAACS,OAArC;;AAEA,QAAI,CAACtF,aAAL,EAAoB;AAClB;AACD;;AAEDuE,IAAAA,4BAA4B,CAACzE,EAAD,EAAK,CAAC8F,iBAAiB,CAAC9F,EAAD,CAAvB,EAA6BE,aAA7B,CAA5B;AACD,GARyB,EAQvB,EARuB,CAA1B;AASA,MAAI6F,gBAAgB,GAAG,CAAC,GAAGhI,MAAM,CAACwH,WAAX,EAAwB,UAAUrE,KAAV,EAAiBa,QAAjB,EAA2B;AACxE,QAAIhC,IAAI,GAAGG,aAAa,CAAC4C,SAAd,CAAwB5B,KAAxB,CAAX;;AAEA,QAAI,CAACnB,IAAL,EAAW;AACT;AACD;;AAED,QAAIC,EAAE,GAAGE,aAAa,CAAC8C,SAAd,CAAwBjD,IAAxB,CAAT;AACA,WAAO6F,kBAAkB,CAAC5F,EAAD,EAAK+B,QAAL,CAAzB;AACD,GATsB,EASpB,EAToB,CAAvB;AAUA,MAAIiE,gBAAgB,GAAG,CAAC,GAAGjI,MAAM,CAACwH,WAAX,EAAwB,UAAUlF,SAAV,EAAqBL,EAArB,EAAyB;AACtE,QAAIE,aAAa,GAAG6E,gBAAgB,CAACS,OAArC;;AAEA,QAAI,CAACtF,aAAL,EAAoB;AAClB;AACD;;AAEDE,IAAAA,0BAA0B,CAACC,SAAD,EAAYL,EAAZ,EAAgBE,aAAhB,CAA1B;AACD,GARsB,EAQpB,EARoB,CAAvB;AASA,MAAI+F,eAAe,GAAG,CAAC,GAAGlI,MAAM,CAACwH,WAAX,EAAwB,UAAUW,WAAV,EAAuB;AACnE,QAAIhG,aAAa,GAAG6E,gBAAgB,CAACS,OAArC;;AAEA,QAAI,CAACtF,aAAL,EAAoB;AAClB;AACD;;AAED,QAAIH,IAAI,GAAG,OAAOmG,WAAP,KAAuB,QAAvB,GAAkChG,aAAa,CAACH,IAAd,CAAmBmG,WAAnB,CAAlC,GAAoEA,WAA/E;;AAEA,QAAI,CAACnG,IAAL,EAAW;AACT;AACD;;AAED,QAAIC,EAAE,GAAGE,aAAa,CAAC8C,SAAd,CAAwBjD,IAAxB,CAAT;AACA,QAAIgC,QAAQ,GAAG2B,aAAa,CAAC3D,IAAD,CAA5B;AACA,WAAO6F,kBAAkB,CAAC5F,EAAD,EAAK,CAAC+B,QAAN,CAAzB;AACD,GAhBqB,EAgBnB,EAhBmB,CAAtB;AAiBA,MAAI+D,iBAAiB,GAAG,CAAC,GAAG/H,MAAM,CAACwH,WAAX,EAAwB,UAAUvF,EAAV,EAAc;AAC5D,QAAIE,aAAa,GAAG6E,gBAAgB,CAACS,OAArC;;AAEA,QAAI,CAACtF,aAAL,EAAoB;AAClB,aAAO,KAAP;AACD;;AAED,WAAOmE,2BAA2B,CAACrE,EAAD,EAAKE,aAAL,CAAlC;AACD,GARuB,EAQrB,EARqB,CAAxB;AASA,MAAIiE,qBAAqB,GAAG7B,aAA5B;AACA,MAAIc,oBAAoB,GAAGxC,YAA3B;AACA,MAAIqD,wBAAwB,GAAG,CAAC,GAAG5F,6BAA6B,CAAC8E,4BAAlC,EAAgE2B,KAAhE,CAA/B;AACA,GAAC,GAAG/G,MAAM,CAACoI,eAAX,EAA4B,YAAY;AACtC,QAAIjG,aAAa,GAAG6E,gBAAgB,CAACS,OAArC;;AAEA,QAAI,CAACtF,aAAL,EAAoB;AAClB;AACD;;AAED,QAAIA,aAAa,CAACkG,aAAd,CAA4BZ,OAA5B,KAAwC,KAA5C,EAAmD;AACjD;AACD;;AAED/E,IAAAA,+BAA+B,CAACP,aAAD,CAA/B;AACD,GAZD,EAYG,CAAC4E,KAAK,CAACzE,SAAP,EAAkByE,KAAK,CAACpE,eAAxB,EAAyCR,aAAa,CAACc,YAAvD,EAAqEV,UAArE,EAAiF8C,oBAAjF,EAAuGe,qBAAvG,EAA8HF,wBAA9H,CAZH;AAaA,MAAIoC,kBAAkB,GAAG,CAAC,GAAGtI,MAAM,CAACuI,MAAX,EAAmB,EAAnB,CAAzB;AACA,MAAIC,iBAAiB,GAAG,CAAC,GAAGxI,MAAM,CAACwH,WAAX,EAAwB,UAAUiB,cAAV,EAA0B;AACxE,QAAItG,aAAa,GAAG6E,gBAAgB,CAACS,OAArC;;AAEA,QAAI,CAACtF,aAAL,EAAoB;AAClB;AACD;;AAED,WAAO,CAAC,GAAG9B,kBAAkB,CAACT,OAAvB,EAAgC6I,cAAhC,EAAgDtG,aAAhD,CAAP;AACD,GARuB,EAQrB,EARqB,CAAxB;AASA,MAAIuG,iBAAiB,GAAG,CAAC,GAAG1I,MAAM,CAACwH,WAAX,EAAwB,UAAUmB,yBAAV,EAAqC;AACnF,QAAIC,sBAAsB,GAAGD,yBAAyB,CAAClB,OAAvD;;AAEA,QAAI,CAACmB,sBAAL,EAA6B;AAC3B;AACD;;AAEDA,IAAAA,sBAAsB,CAACN,kBAAvB,CAA0Cb,OAA1C,CAAkDoB,kBAAlD,GAAuE,KAAvE;AACA,QAAIJ,cAAc,GAAGG,sBAAsB,CAACrF,YAAvB,CAAoCuF,eAAzD;AACA,QAAIC,IAAI,GAAGT,kBAAkB,CAACb,OAA9B;;AAEA,QAAIsB,IAAI,CAACC,iBAAL,IAA0BD,IAAI,CAACE,gBAA/B,IAAmDF,IAAI,CAACG,sBAA5D,EAAoF;AAClF,UAAIC,QAAQ,GAAGJ,IAAI,CAACC,iBAAL,CAAuBP,cAAc,CAACxG,EAAtC,CAAf;AACA8G,MAAAA,IAAI,CAACG,sBAAL,CAA4BC,QAA5B,IAAwCP,sBAAxC;AACA,aAAOG,IAAI,CAACE,gBAAL,CAAsBE,QAAtB,CAAP;AACD;AACF,GAhBuB,EAgBrB,EAhBqB,CAAxB;AAiBA,MAAIC,wBAAwB,GAAG,CAAC,GAAGpJ,MAAM,CAACwH,WAAX,EAAwB,YAAY;AACjE,QAAIrF,aAAa,GAAG6E,gBAAgB,CAACS,OAArC;;AAEA,QAAI,CAACtF,aAAL,EAAoB;AAClB,aAAO,IAAP;AACD;;AAED,QAAI4G,IAAI,GAAG5G,aAAa,CAACmG,kBAAd,CAAiCb,OAA5C;AACA,WAAO;AACLhE,MAAAA,gBAAgB,EAAEtB,aAAa,CAACsB,gBAD3B;AAEL4F,MAAAA,kBAAkB,EAAEN,IAAI,CAACM,kBAFpB;AAGLL,MAAAA,iBAAiB,EAAED,IAAI,CAACC,iBAHnB;AAILM,MAAAA,oBAAoB,EAAEP,IAAI,CAACO,oBAJtB;AAKLL,MAAAA,gBAAgB,EAAEF,IAAI,CAACE;AALlB,KAAP;AAOD,GAf8B,EAe5B,EAf4B,CAA/B;;AAiBA,MAAIM,uBAAuB,GAAG,SAASA,uBAAT,GAAmC;AAC/D,QAAIR,IAAI,GAAGT,kBAAkB,CAACb,OAA9B;;AAEA,QAAIsB,IAAI,CAACG,sBAAT,EAAiC;AAC/B1J,MAAAA,MAAM,CAACkB,IAAP,CAAYqI,IAAI,CAACG,sBAAjB,EAAyCzH,OAAzC,CAAiD,UAAU0H,QAAV,EAAoB;AACnE,YAAIP,sBAAsB,GAAGG,IAAI,CAACG,sBAAL,CAA4BC,QAA5B,CAA7B;;AAEA,YAAIP,sBAAJ,EAA4B;AAC1BY,UAAAA,oBAAoB,CAAC;AACnB/B,YAAAA,OAAO,EAAEmB;AADU,WAAD,CAApB;AAGD;AACF,OARD;AASD;AACF,GAdD;;AAgBA,MAAIY,oBAAoB,GAAG,CAAC,GAAGxJ,MAAM,CAACwH,WAAX,EAAwB,UAAUmB,yBAAV,EAAqC;AACtF,QAAIC,sBAAsB,GAAGD,yBAAyB,CAAClB,OAAvD;;AAEA,QAAImB,sBAAsB,CAACN,kBAAvB,CAA0Cb,OAA1C,CAAkDoB,kBAAtD,EAA0E;AACxE;AACD;;AAED,QAAIJ,cAAc,GAAGG,sBAAsB,CAACrF,YAAvB,CAAoCuF,eAAzD;AACAF,IAAAA,sBAAsB,CAACW,uBAAvB;AACA,QAAIR,IAAI,GAAGT,kBAAkB,CAACb,OAA9B;;AAEA,QAAIsB,IAAI,CAACC,iBAAL,IAA0BD,IAAI,CAACE,gBAAnC,EAAqD;AACnD,UAAIE,QAAQ,GAAGJ,IAAI,CAACC,iBAAL,CAAuBP,cAAc,CAACxG,EAAtC,CAAf;AACA8G,MAAAA,IAAI,CAACE,gBAAL,CAAsBE,QAAtB,IAAkC;AAChCM,QAAAA,KAAK,EAAEb,sBAAsB,CAACc,QAAvB,EADyB;AAEhCC,QAAAA,SAAS,EAAEf,sBAAsB,CAACgB,YAAvB,EAFqB;AAGhCC,QAAAA,UAAU,EAAEjB,sBAAsB,CAACkB,aAAvB,EAHoB;AAIhCC,QAAAA,IAAI,EAAEnB,sBAAsB,CAACQ,wBAAvB;AAJ0B,OAAlC;AAMD;;AAEDR,IAAAA,sBAAsB,CAACN,kBAAvB,CAA0Cb,OAA1C,CAAkDoB,kBAAlD,GAAuE,IAAvE;AACD,GAtB0B,EAsBxB,EAtBwB,CAA3B;AAuBA,MAAImB,yBAAyB,GAAG,CAAC,GAAGhK,MAAM,CAACwH,WAAX,EAAwB,UAAUjF,UAAV,EAAsB0H,kBAAtB,EAA0C;AAChG,QAAI9H,aAAa,GAAG6E,gBAAgB,CAACS,OAArC;;AAEA,QAAI,CAACtF,aAAL,EAAoB;AAClB;AACD;;AAED,QAAI+H,kBAAkB,GAAG,SAASA,kBAAT,CAA4BD,kBAA5B,EAAgD;AACvE,UAAI3H,SAAS,GAAG2H,kBAAkB,CAAC1G,YAAnB,CAAgCjB,SAAhD;AACA,UAAI6H,kBAAkB,GAAG7H,SAAzB;AACA,UAAI6D,MAAM,GAAG3G,MAAM,CAACkB,IAAP,CAAY6B,UAAU,IAAI,EAA1B,EAA8BiD,MAA9B,CAAqC,UAAUC,GAAV,EAAemC,KAAf,EAAsB;AACtE,eAAOnC,GAAG,GAAGlD,UAAU,CAACqF,KAAD,CAAhB,GAA0BuC,kBAAjC;AACD,OAFY,EAEV,CAFU,CAAb;AAGA,aAAOhE,MAAP;AACD,KAPD;;AASA,QAAIiE,aAAa,GAAGH,kBAAkB,CAAC1G,YAAnB,CAAgCuF,eAApD;AACA,QAAIuB,WAAW,GAAGH,kBAAkB,CAACD,kBAAD,CAApC;;AAEA,QAAII,WAAJ,EAAiB;AACfpC,MAAAA,gBAAgB,CAAC9F,aAAa,CAACoB,YAAd,CAA2BZ,eAA3B,GAA6C0H,WAA9C,EAA2DD,aAAa,CAACnI,EAAzE,CAAhB;AACD,KAFD,MAEO;AACLgG,MAAAA,gBAAgB,CAAC,IAAD,EAAOmC,aAAa,CAACnI,EAArB,CAAhB;AACD;AACF,GAxB+B,EAwB7B,EAxB6B,CAAhC;AAyBA,MAAIqI,gBAAgB,GAAG,CAAC,GAAGtK,MAAM,CAACwH,WAAX,EAAwB,UAAUvF,EAAV,EAAc;AAC3D,QAAIE,aAAa,GAAG6E,gBAAgB,CAACS,OAArC;;AAEA,QAAI,CAACtF,aAAL,EAAoB;AAClB,aAAO,CAAP;AACD;;AAED,QAAII,UAAU,GAAGL,uBAAuB,CAACC,aAAD,CAAxC;AACA,WAAOI,UAAU,CAACN,EAAD,CAAV,IAAkBE,aAAa,CAACG,SAAvC;AACD,GATsB,EASpB,EAToB,CAAvB;AAUA,MAAIiI,eAAe,GAAG,CAAC,GAAGvK,MAAM,CAACwH,WAAX,EAAwB,YAAY;AACxD,QAAIrF,aAAa,GAAG6E,gBAAgB,CAACS,OAArC;;AAEA,QAAI,CAACtF,aAAL,EAAoB;AAClB;AACD;;AAEDyB,IAAAA,wBAAwB,CAAC,EAAD,EAAK7B,SAAL,EAAgBA,SAAhB,EAA2BI,aAA3B,CAAxB;AACD,GARqB,EAQnB,EARmB,CAAtB;AASA,MAAIqI,aAAa,GAAG,CAAC,GAAGxK,MAAM,CAACwH,WAAX,EAAwB,YAAY;AACtD,QAAIrF,aAAa,GAAG6E,gBAAgB,CAACS,OAArC;;AAEA,QAAI,CAACtF,aAAL,EAAoB;AAClB;AACD;;AAEDyB,IAAAA,wBAAwB,CAAC,IAAD,EAAO0B,gCAAgC,CAACnD,aAAD,CAAvC,EAAwDJ,SAAxD,EAAmEI,aAAnE,CAAxB;AACD,GARmB,EAQjB,EARiB,CAApB;AASA,MAAIsI,wBAAwB,GAAG1D,KAAK,CAAC2D,gBAAN,KAA2B3D,KAAK,CAACyB,iBAAN,GAA0BA,iBAA1B,GAA8C,IAAzE,CAA/B;AACA,SAAO;AACLF,IAAAA,kBAAkB,EAAEA,kBADf;AAEL3D,IAAAA,eAAe,EAAEA,eAFZ;AAGLC,IAAAA,gBAAgB,EAAEA,gBAHb;AAILgC,IAAAA,eAAe,EAAEA,eAJZ;AAKLC,IAAAA,cAAc,EAAEA,cALX;AAMLpE,IAAAA,aAAa,EAAEA,aANV;AAOLkD,IAAAA,aAAa,EAAEA,aAPV;AAQLgC,IAAAA,mBAAmB,EAAEA,mBARhB;AASLE,IAAAA,kBAAkB,EAAEA,kBATf;AAULI,IAAAA,gBAAgB,EAAEA,gBAVb;AAWLD,IAAAA,gBAAgB,EAAEA,gBAXb;AAYLsC,IAAAA,gBAAgB,EAAEA,gBAZb;AAaLC,IAAAA,eAAe,EAAEA,eAbZ;AAcLC,IAAAA,aAAa,EAAEA,aAdV;AAeLzC,IAAAA,iBAAiB,EAAEA,iBAfd;AAgBLL,IAAAA,kBAAkB,EAAEA,kBAhBf;AAiBLtD,IAAAA,iBAAiB,EAAEA,iBAjBd;AAkBL8D,IAAAA,eAAe,EAAEA,eAlBZ;AAmBLJ,IAAAA,mBAAmB,EAAEA,mBAnBhB;AAoBL1F,IAAAA,kBAAkB,EAAEG,UApBf;AAqBL8C,IAAAA,oBAAoB,EAAEA,oBArBjB;AAsBLe,IAAAA,qBAAqB,EAAEA,qBAtBlB;AAuBLF,IAAAA,wBAAwB,EAAEA,wBAvBrB;AAwBLuE,IAAAA,wBAAwB,EAAEA,wBAxBrB;AAyBLT,IAAAA,yBAAyB,EAAEA,yBAzBtB;AA0BLtB,IAAAA,iBAAiB,EAAEA,iBA1Bd;AA2BLc,IAAAA,oBAAoB,EAAEA,oBA3BjB;AA4BLJ,IAAAA,wBAAwB,EAAEA,wBA5BrB;AA6BLG,IAAAA,uBAAuB,EAAEA;AA7BpB,GAAP;AA+BD,CAvUD;;AAyUA,IAAIoB,QAAQ,GAAG7D,aAAf;AACApH,OAAO,CAACE,OAAR,GAAkB+K,QAAlB","sourcesContent":["/**\n * Copyright Â© INOVUA TRADING.\n *\n * This source code is licensed under the Commercial License found in the\n * LICENSE file in the root directory of this source tree.\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _react = require(\"react\");\n\nvar _useProperty7 = _interopRequireDefault(require(\"@inovua/reactdatagrid-community/hooks/useProperty\"));\n\nvar _sealedObjectFactory = _interopRequireDefault(require(\"@inovua/reactdatagrid-community/utils/sealedObjectFactory\"));\n\nvar _batchUpdate = _interopRequireDefault(require(\"@inovua/reactdatagrid-community/utils/batchUpdate\"));\n\nvar _isControlledProperty = _interopRequireDefault(require(\"@inovua/reactdatagrid-community/utils/isControlledProperty\"));\n\nvar _renderDetailsGrid = _interopRequireDefault(require(\"./renderDetailsGrid\"));\n\nvar _isRowExpandEnabled_FromProps = require(\"@inovua/reactdatagrid-community/utils/isRowExpandEnabled_FromProps\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nvar EXPANDABLE_ROW_INFO = (0, _sealedObjectFactory.default)({\n  rowIndex: undefined,\n  data: undefined,\n  id: undefined\n});\n\nvar getRowHeights_FromProps = function getRowHeights_FromProps(computedProps) {\n  return computedProps.computedRowHeights || {};\n};\n\nvar setRowHeightById_FromProps = function setRowHeightById_FromProps(rowHeight, id, computedProps) {\n  var rowHeights = _objectSpread({}, getRowHeights_FromProps(computedProps));\n\n  var changed = false;\n\n  if (rowHeight != null) {\n    if (rowHeights[id] !== rowHeight) {\n      rowHeights[id] = rowHeight;\n      changed = true;\n    }\n  } else {\n    if (rowHeights[id]) {\n      delete rowHeights[id];\n      changed = true;\n    }\n  }\n\n  if (changed) {\n    computedProps.setRowHeights(rowHeights);\n  }\n};\n\nvar updateExpandedHeights_FromProps = function updateExpandedHeights_FromProps(computedProps, rowHeights) {\n  var rowExpandHeight = computedProps.rowExpandHeight,\n      dataMap = computedProps.dataMap;\n  var expandedRows = getExpandedMap_FromProps(computedProps);\n  var defaultRowHeight = computedProps.rowHeight;\n  var heights = {};\n  var dataIndexMap = computedProps.dataIndexMap;\n\n  if (dataIndexMap) {\n    for (var itemId in expandedRows) {\n      var index = dataIndexMap[itemId];\n\n      if (index !== undefined) {\n        if (typeof rowExpandHeight === 'number') {\n          heights[index] = rowExpandHeight;\n        } else if (typeof rowExpandHeight === 'function') {\n          var currentRowHeight = rowExpandHeight({\n            data: dataMap && dataMap[itemId]\n          });\n          heights[index] = currentRowHeight;\n        }\n      }\n    }\n  }\n\n  rowHeights = rowHeights || getRowHeights_FromProps(computedProps);\n\n  if (rowHeights && dataIndexMap) {\n    for (var _itemId in rowHeights) {\n      var _index = dataIndexMap[_itemId];\n\n      if (_index !== undefined) {\n        heights[_index] = rowHeights[_itemId];\n      }\n    }\n  }\n\n  if (computedProps.initialProps.onUpdateRowHeights) {\n    computedProps.initialProps.onUpdateRowHeights(heights, computedProps);\n  }\n\n  computedProps.rowHeightManager.setValues({\n    defaultRowHeight: defaultRowHeight,\n    map: heights\n  });\n};\n\nvar setExpandedMap_FromProps = function setExpandedMap_FromProps(expandedMap, collapsedMap) {\n  var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n    id: null,\n    data: null,\n    expanded: false\n  },\n      id = _ref.id,\n      data = _ref.data,\n      expanded = _ref.expanded;\n\n  var computedProps = arguments.length > 3 ? arguments[3] : undefined;\n  var index;\n\n  if (expandedMap === true && !computedProps.multiRowExpand) {\n    throw new Error('cannot expand all when multiRowExpand is false');\n  }\n\n  if (data) {\n    index = computedProps.dataIndexMap[id];\n\n    if (!expanded) {\n      var rowHeights = computedProps.computedRowHeights;\n\n      if (rowHeights && rowHeights[id]) {\n        rowHeights = _objectSpread({}, rowHeights);\n        delete rowHeights[id];\n        computedProps.setRowHeights(rowHeights);\n      }\n\n      if (computedProps.initialProps.onRowCollapse && computedProps.initialProps.onRowCollapse({\n        data: data,\n        id: id,\n        index: index\n      }) === false) {\n        return;\n      }\n    } else {\n      if (!computedProps.isRowExpandableAt(index)) {\n        return;\n      }\n\n      if (computedProps.initialProps.onRowExpand && computedProps.initialProps.onRowExpand({\n        data: data,\n        id: id,\n        index: index\n      }) === false) {\n        return;\n      }\n\n      if (!computedProps.multiRowExpand) {\n        expandedMap = (0, _defineProperty2.default)({}, id, true);\n      }\n    }\n\n    if (computedProps.initialProps.onRowExpandChange && computedProps.initialProps.onRowExpandChange({\n      expandedRows: expandedMap,\n      collapsedRows: collapsedMap,\n      id: id,\n      index: index,\n      data: data,\n      rowExpanded: expanded\n    }) === false) {\n      return;\n    }\n  }\n\n  if (computedProps.initialProps.onExpandedRowsChange) {\n    computedProps.initialProps.onExpandedRowsChange({\n      expandedRows: expandedMap,\n      collapsedRows: collapsedMap,\n      rowExpanded: expanded,\n      data: data,\n      id: id,\n      index: index\n    });\n  }\n\n  if (!(0, _isControlledProperty.default)(computedProps.initialProps, 'expandedRows') && !(0, _isControlledProperty.default)(computedProps.initialProps, 'collapsedRows') || computedProps.initialProps.expandedRows === true && !(0, _isControlledProperty.default)(computedProps.initialProps, 'collapsedRows')) {\n    var queue = (0, _batchUpdate.default)();\n    queue(function () {\n      computedProps.setExpandedRows(expandedMap);\n      computedProps.setCollapsedRows(collapsedMap);\n    });\n    queue.commit();\n  }\n};\n\nvar isRowExpandableAt_FromProps = function isRowExpandableAt_FromProps(rowIndex, computedProps) {\n  var data = computedProps.getItemAt(rowIndex);\n\n  if (!data) {\n    return false;\n  }\n\n  if (data.__group) {\n    return false;\n  }\n\n  var id = computedProps.getItemId(data);\n\n  if (computedProps.unexpandableRows && computedProps.unexpandableRows[id]) {\n    return false;\n  }\n\n  if (!computedProps.isRowExpandable) {\n    return true;\n  }\n\n  EXPANDABLE_ROW_INFO.id = id;\n  EXPANDABLE_ROW_INFO.data = data;\n  EXPANDABLE_ROW_INFO.rowIndex = rowIndex;\n  return computedProps.isRowExpandable(EXPANDABLE_ROW_INFO);\n};\n\nvar getExpandedMap_FromProps = function getExpandedMap_FromProps(computedProps) {\n  if (!(0, _isRowExpandEnabled_FromProps.isRowExpandEnabled_FromProps)(computedProps)) {\n    return undefined;\n  }\n\n  var expandedRows = computedProps.computedExpandedRows;\n\n  if (expandedRows !== undefined && expandedRows !== true) {\n    expandedRows = _objectSpread({}, expandedRows);\n    Object.keys(getUnexpandableRowsMap_FromProps(computedProps)).forEach(function (k) {\n      delete expandedRows[k];\n    });\n  }\n\n  if (expandedRows === true) {\n    expandedRows = computedProps.data.reduce(function (acc, item, index) {\n      if (computedProps.isRowExpanded(index)) {\n        acc[computedProps.getItemId(item)] = true;\n      }\n\n      return acc;\n    }, {});\n  }\n\n  if ((0, _typeof2.default)(expandedRows) !== 'object' && expandedRows !== true) {\n    expandedRows = {};\n  }\n\n  return expandedRows;\n};\n\nvar getUnexpandableRows_FromProps = function getUnexpandableRows_FromProps(computedProps) {\n  var groupBy = computedProps.computedGroupBy;\n  var initialProps = computedProps.initialProps;\n\n  if (!groupBy && !initialProps.isRowExpandable) {\n    return [];\n  }\n\n  if (groupBy && !initialProps.isRowExpandable) {\n    return computedProps.computedGroupArray || [];\n  }\n\n  return computedProps.data.filter(function (_, index) {\n    return !isRowExpandableAt_FromProps(index, computedProps);\n  });\n};\n\nvar getUnexpandableRowsMap_FromProps = function getUnexpandableRowsMap_FromProps(computedProps) {\n  if (computedProps.unexpandableRows) {\n    return computedProps.unexpandableRows;\n  }\n\n  return getUnexpandableRows_FromProps(computedProps).reduce(function (acc, data) {\n    var id = computedProps.getItemId(data);\n    acc[id] = true;\n    return acc;\n  }, {});\n};\n\nvar getCollapsedMap_FromProps = function getCollapsedMap_FromProps(computedProps) {\n  if (!computedProps.computedRowExpandEnabled) {\n    return undefined;\n  }\n\n  if (!computedProps.multiRowExpand) {\n    return undefined;\n  }\n\n  var result = computedProps.computedCollapsedRows || {};\n\n  if (computedProps.computedGroupBy && computedProps.computedGroupKeys) {\n    result = _objectSpread(_objectSpread({}, result), computedProps.computedGroupKeys);\n  }\n\n  if (computedProps.unexpandableRows) {\n    result = _objectSpread(_objectSpread({}, result), computedProps.unexpandableRows);\n  }\n\n  if (computedProps.initialProps.isRowExpandable) {\n    result = _objectSpread({}, result);\n    computedProps.data.forEach(function (item, index) {\n      if (!computedProps.isRowExpandableAt(index)) {\n        result[computedProps.getItemId(item)] = true;\n      }\n    });\n  }\n\n  return result;\n};\n\nvar isRowExpandedById_FromProps = function isRowExpandedById_FromProps(id, computedProps) {\n  var expandedRows = computedProps.computedExpandedRows;\n\n  if (!expandedRows) {\n    return false;\n  }\n\n  var isExpanded;\n\n  if (expandedRows === true) {\n    var collapsedRows = getCollapsedMap_FromProps(computedProps) || {};\n    isExpanded = !collapsedRows[id];\n  } else {\n    isExpanded = !!expandedRows[id];\n  }\n\n  if (isExpanded) {\n    isExpanded = computedProps.isRowExpanded(computedProps.getRowIndexById(id));\n  }\n\n  return isExpanded;\n};\n\nvar isRowExpanded_FromProps = function isRowExpanded_FromProps(data, computedProps) {\n  if (data == null) {\n    return false;\n  }\n\n  var index = undefined;\n\n  if (typeof data == 'number') {\n    index = data;\n    data = computedProps.getItemAt(data);\n  }\n\n  var expandedRows = computedProps.computedExpandedRows;\n  var id = computedProps.getItemId(data);\n\n  if (!expandedRows) {\n    return false;\n  }\n\n  var isExpanded;\n\n  if (expandedRows === true) {\n    var collapsedMap = getCollapsedMap_FromProps(computedProps) || {};\n    isExpanded = !collapsedMap[id];\n  } else {\n    isExpanded = expandedRows ? !!expandedRows[id] : false;\n  }\n\n  if (isExpanded) {\n    if (index === undefined) {\n      index = computedProps.getRowIndexById(id);\n    }\n\n    isExpanded = computedProps.isRowExpandableAt(index);\n  }\n\n  return isExpanded;\n};\n\nvar setRowExpandedById_FromProps = function setRowExpandedById_FromProps(id, expanded, computedProps) {\n  var data = computedProps.dataMap[id];\n\n  if (!data) {\n    return;\n  }\n\n  var expandedRowsValue = computedProps.computedExpandedRows;\n\n  if (expandedRowsValue === true) {\n    var collapsedMap = _objectSpread({}, computedProps.getCollapsedMap() || {});\n\n    if (!expanded) {\n      collapsedMap[id] = true;\n    } else {\n      delete collapsedMap[id];\n    }\n\n    setExpandedMap_FromProps(true, collapsedMap, {\n      data: data,\n      expanded: expanded,\n      id: id\n    }, computedProps);\n    return;\n  }\n\n  var expandedMap = _objectSpread({}, computedProps.getExpandedMap());\n\n  if (!expanded) {\n    delete expandedMap[id];\n  } else {\n    expandedMap[id] = true;\n  }\n\n  setExpandedMap_FromProps(expandedMap, undefined, {\n    data: data,\n    expanded: expanded,\n    id: id\n  }, computedProps);\n};\n\nvar useRowDetails = function useRowDetails(props, computedProps, computedPropsRef) {\n  var _useProperty = (0, _useProperty7.default)(props, 'expandedRows'),\n      _useProperty2 = (0, _slicedToArray2.default)(_useProperty, 2),\n      expandedRows = _useProperty2[0],\n      setExpandedRows = _useProperty2[1];\n\n  var _useProperty3 = (0, _useProperty7.default)(props, 'collapsedRows'),\n      _useProperty4 = (0, _slicedToArray2.default)(_useProperty3, 2),\n      collapsedRows = _useProperty4[0],\n      setCollapsedRows = _useProperty4[1];\n\n  var _useProperty5 = (0, _useProperty7.default)(props, 'rowHeights'),\n      _useProperty6 = (0, _slicedToArray2.default)(_useProperty5, 2),\n      rowHeights = _useProperty6[0],\n      doSetRowHeights = _useProperty6[1];\n\n  var setRowHeights = (0, _react.useCallback)(function (rowHeights) {\n    var computedProps = computedPropsRef.current;\n\n    if (!computedProps) {\n      return;\n    }\n\n    doSetRowHeights(rowHeights);\n  }, []);\n  var isRowExpandEnabled = (0, _react.useCallback)(function () {\n    var computedProps = computedPropsRef.current;\n\n    if (!computedProps) {\n      return false;\n    }\n\n    return (0, _isRowExpandEnabled_FromProps.isRowExpandEnabled_FromProps)(computedProps);\n  }, []);\n  var isRowExpandableAt = (0, _react.useCallback)(function (rowIndex) {\n    var computedProps = computedPropsRef.current;\n\n    if (!computedProps) {\n      return false;\n    }\n\n    return isRowExpandableAt_FromProps(rowIndex, computedProps);\n  }, []);\n  var isRowExpandableById = (0, _react.useCallback)(function (rowId) {\n    var computedProps = computedPropsRef.current;\n\n    if (!computedProps) {\n      return false;\n    }\n\n    var index = computedProps.getRowIndexById(rowId);\n    return isRowExpandableAt(index);\n  }, []);\n  var isRowExpanded = (0, _react.useCallback)(function (data) {\n    var computedProps = computedPropsRef.current;\n\n    if (!computedProps) {\n      return false;\n    }\n\n    return isRowExpanded_FromProps(data, computedProps);\n  }, []);\n  var getCollapsedMap = (0, _react.useCallback)(function () {\n    var computedProps = computedPropsRef.current;\n\n    if (!computedProps) {\n      return undefined;\n    }\n\n    return getCollapsedMap_FromProps(computedProps);\n  }, []);\n  var getExpandedMap = (0, _react.useCallback)(function () {\n    var computedProps = computedPropsRef.current;\n\n    if (!computedProps) {\n      return undefined;\n    }\n\n    return getExpandedMap_FromProps(computedProps);\n  }, []);\n  var setRowExpandedById = (0, _react.useCallback)(function (id, expanded) {\n    var computedProps = computedPropsRef.current;\n\n    if (!computedProps) {\n      return;\n    }\n\n    setRowExpandedById_FromProps(id, expanded, computedProps);\n  }, []);\n  var toggleRowExpandById = (0, _react.useCallback)(function (id) {\n    var computedProps = computedPropsRef.current;\n\n    if (!computedProps) {\n      return;\n    }\n\n    setRowExpandedById_FromProps(id, !isRowExpandedById(id), computedProps);\n  }, []);\n  var setRowExpandedAt = (0, _react.useCallback)(function (index, expanded) {\n    var data = computedProps.getItemAt(index);\n\n    if (!data) {\n      return;\n    }\n\n    var id = computedProps.getItemId(data);\n    return setRowExpandedById(id, expanded);\n  }, []);\n  var setRowHeightById = (0, _react.useCallback)(function (rowHeight, id) {\n    var computedProps = computedPropsRef.current;\n\n    if (!computedProps) {\n      return;\n    }\n\n    setRowHeightById_FromProps(rowHeight, id, computedProps);\n  }, []);\n  var toggleRowExpand = (0, _react.useCallback)(function (dataOrIndex) {\n    var computedProps = computedPropsRef.current;\n\n    if (!computedProps) {\n      return;\n    }\n\n    var data = typeof dataOrIndex === 'number' ? computedProps.data[dataOrIndex] : dataOrIndex;\n\n    if (!data) {\n      return;\n    }\n\n    var id = computedProps.getItemId(data);\n    var expanded = isRowExpanded(data);\n    return setRowExpandedById(id, !expanded);\n  }, []);\n  var isRowExpandedById = (0, _react.useCallback)(function (id) {\n    var computedProps = computedPropsRef.current;\n\n    if (!computedProps) {\n      return false;\n    }\n\n    return isRowExpandedById_FromProps(id, computedProps);\n  }, []);\n  var computedCollapsedRows = collapsedRows;\n  var computedExpandedRows = expandedRows;\n  var computedRowExpandEnabled = (0, _isRowExpandEnabled_FromProps.isRowExpandEnabled_FromProps)(props);\n  (0, _react.useLayoutEffect)(function () {\n    var computedProps = computedPropsRef.current;\n\n    if (!computedProps) {\n      return;\n    }\n\n    if (computedProps.wasMountedRef.current === false) {\n      return;\n    }\n\n    updateExpandedHeights_FromProps(computedProps);\n  }, [props.rowHeight, props.rowExpandHeight, computedProps.dataIndexMap, rowHeights, computedExpandedRows, computedCollapsedRows, computedRowExpandEnabled]);\n  var detailsGridInfoRef = (0, _react.useRef)({});\n  var renderDetailsGrid = (0, _react.useCallback)(function (rowDetailsInfo) {\n    var computedProps = computedPropsRef.current;\n\n    if (!computedProps) {\n      return;\n    }\n\n    return (0, _renderDetailsGrid.default)(rowDetailsInfo, computedProps);\n  }, []);\n  var onDetailsDidMount = (0, _react.useCallback)(function (childGridComputedPropsRef) {\n    var childGridComputedProps = childGridComputedPropsRef.current;\n\n    if (!childGridComputedProps) {\n      return;\n    }\n\n    childGridComputedProps.detailsGridInfoRef.current.__detailsPersisted = false;\n    var rowDetailsInfo = childGridComputedProps.initialProps.__parentRowInfo;\n    var info = detailsGridInfoRef.current;\n\n    if (info.masterDetailsKeys && info.unmountedDetails && info.masterDetailsInstances) {\n      var cacheKey = info.masterDetailsKeys[rowDetailsInfo.id];\n      info.masterDetailsInstances[cacheKey] = childGridComputedProps;\n      delete info.unmountedDetails[cacheKey];\n    }\n  }, []);\n  var getSelfRestoreProperties = (0, _react.useCallback)(function () {\n    var computedProps = computedPropsRef.current;\n\n    if (!computedProps) {\n      return null;\n    }\n\n    var info = computedProps.detailsGridInfoRef.current;\n    return {\n      rowHeightManager: computedProps.rowHeightManager,\n      masterDetailsCache: info.masterDetailsCache,\n      masterDetailsKeys: info.masterDetailsKeys,\n      originalDetailsGrids: info.originalDetailsGrids,\n      unmountedDetails: info.unmountedDetails\n    };\n  }, []);\n\n  var persistUnmountedDetails = function persistUnmountedDetails() {\n    var info = detailsGridInfoRef.current;\n\n    if (info.masterDetailsInstances) {\n      Object.keys(info.masterDetailsInstances).forEach(function (cacheKey) {\n        var childGridComputedProps = info.masterDetailsInstances[cacheKey];\n\n        if (childGridComputedProps) {\n          onDetailsWillUnmount({\n            current: childGridComputedProps\n          });\n        }\n      });\n    }\n  };\n\n  var onDetailsWillUnmount = (0, _react.useCallback)(function (childGridComputedPropsRef) {\n    var childGridComputedProps = childGridComputedPropsRef.current;\n\n    if (childGridComputedProps.detailsGridInfoRef.current.__detailsPersisted) {\n      return;\n    }\n\n    var rowDetailsInfo = childGridComputedProps.initialProps.__parentRowInfo;\n    childGridComputedProps.persistUnmountedDetails();\n    var info = detailsGridInfoRef.current;\n\n    if (info.masterDetailsKeys && info.unmountedDetails) {\n      var cacheKey = info.masterDetailsKeys[rowDetailsInfo.id];\n      info.unmountedDetails[cacheKey] = {\n        state: childGridComputedProps.getState(),\n        scrollTop: childGridComputedProps.getScrollTop(),\n        scrollLeft: childGridComputedProps.getScrollLeft(),\n        self: childGridComputedProps.getSelfRestoreProperties()\n      };\n    }\n\n    childGridComputedProps.detailsGridInfoRef.current.__detailsPersisted = true;\n  }, []);\n  var onDetailsUpdateRowHeights = (0, _react.useCallback)(function (rowHeights, childComputedProps) {\n    var computedProps = computedPropsRef.current;\n\n    if (!computedProps) {\n      return;\n    }\n\n    var getExtraRowHeights = function getExtraRowHeights(childComputedProps) {\n      var rowHeight = childComputedProps.initialProps.rowHeight;\n      var substractRowHeight = rowHeight;\n      var result = Object.keys(rowHeights || {}).reduce(function (acc, rowId) {\n        return acc + rowHeights[rowId] - substractRowHeight;\n      }, 0);\n      return result;\n    };\n\n    var parentRowInfo = childComputedProps.initialProps.__parentRowInfo;\n    var extraHeight = getExtraRowHeights(childComputedProps);\n\n    if (extraHeight) {\n      setRowHeightById(computedProps.initialProps.rowExpandHeight + extraHeight, parentRowInfo.id);\n    } else {\n      setRowHeightById(null, parentRowInfo.id);\n    }\n  }, []);\n  var getRowHeightById = (0, _react.useCallback)(function (id) {\n    var computedProps = computedPropsRef.current;\n\n    if (!computedProps) {\n      return 0;\n    }\n\n    var rowHeights = getRowHeights_FromProps(computedProps);\n    return rowHeights[id] || computedProps.rowHeight;\n  }, []);\n  var collapseAllRows = (0, _react.useCallback)(function () {\n    var computedProps = computedPropsRef.current;\n\n    if (!computedProps) {\n      return;\n    }\n\n    setExpandedMap_FromProps({}, undefined, undefined, computedProps);\n  }, []);\n  var expandAllRows = (0, _react.useCallback)(function () {\n    var computedProps = computedPropsRef.current;\n\n    if (!computedProps) {\n      return;\n    }\n\n    setExpandedMap_FromProps(true, getUnexpandableRowsMap_FromProps(computedProps), undefined, computedProps);\n  }, []);\n  var computedRenderRowDetails = props.renderRowDetails || (props.renderDetailsGrid ? renderDetailsGrid : null);\n  return {\n    detailsGridInfoRef: detailsGridInfoRef,\n    setExpandedRows: setExpandedRows,\n    setCollapsedRows: setCollapsedRows,\n    getCollapsedMap: getCollapsedMap,\n    getExpandedMap: getExpandedMap,\n    setRowHeights: setRowHeights,\n    isRowExpanded: isRowExpanded,\n    isRowExpandableById: isRowExpandableById,\n    setRowExpandedById: setRowExpandedById,\n    setRowHeightById: setRowHeightById,\n    setRowExpandedAt: setRowExpandedAt,\n    getRowHeightById: getRowHeightById,\n    collapseAllRows: collapseAllRows,\n    expandAllRows: expandAllRows,\n    isRowExpandedById: isRowExpandedById,\n    isRowExpandEnabled: isRowExpandEnabled,\n    isRowExpandableAt: isRowExpandableAt,\n    toggleRowExpand: toggleRowExpand,\n    toggleRowExpandById: toggleRowExpandById,\n    computedRowHeights: rowHeights,\n    computedExpandedRows: computedExpandedRows,\n    computedCollapsedRows: computedCollapsedRows,\n    computedRowExpandEnabled: computedRowExpandEnabled,\n    computedRenderRowDetails: computedRenderRowDetails,\n    onDetailsUpdateRowHeights: onDetailsUpdateRowHeights,\n    onDetailsDidMount: onDetailsDidMount,\n    onDetailsWillUnmount: onDetailsWillUnmount,\n    getSelfRestoreProperties: getSelfRestoreProperties,\n    persistUnmountedDetails: persistUnmountedDetails\n  };\n};\n\nvar _default = useRowDetails;\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}