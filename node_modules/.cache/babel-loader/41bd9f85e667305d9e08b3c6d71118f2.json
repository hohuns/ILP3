{"ast":null,"code":"/**\n * Copyright © INOVUA TRADING.\n *\n * This source code is licensed under the Commercial License found in the\n * LICENSE file in the root directory of this source tree.\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nObject.defineProperty(exports, \"groupColumnId\", {\n  enumerable: true,\n  get: function get() {\n    return _defaultGroupColumnId.id;\n  }\n});\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _defaultGroupColumnId = require(\"@inovua/reactdatagrid-community/normalizeColumns/defaultGroupColumnId\");\n\nvar _renderGroupTool = _interopRequireDefault(require(\"@inovua/reactdatagrid-community/Layout/ColumnLayout/Cell/renderGroupTool\"));\n\nvar _default = {\n  id: _defaultGroupColumnId.id,\n  groupColumn: true,\n  cellSelectable: false,\n  showColumnMenuSortOptions: false,\n  showColumnMenuGroupOptions: false,\n  showColumnMenuTool: false,\n  showInContextMenu: false,\n  header: 'Group',\n  render: function render(_ref, _ref2) {\n    var value = _ref.value,\n        data = _ref.data,\n        toggleGroup = _ref.toggleGroup;\n    var cellProps = _ref2.cellProps;\n\n    if (!data.__group) {\n      return null;\n    }\n\n    var groupProps = cellProps.groupProps,\n        rtl = cellProps.rtl;\n    var shouldRenderGroupTool = cellProps.computedPivot ? groupProps.depth < cellProps.computedGroupBy.length - 1 : true;\n    return _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(\"div\", {\n      style: {\n        display: 'inline-block',\n        width: groupProps.groupNestingSize * groupProps.depth\n      }\n    }), shouldRenderGroupTool ? (0, _renderGroupTool.default)({\n      render: groupProps.renderGroupTool,\n      collapsed: groupProps.collapsed,\n      rtl: rtl,\n      size: 20,\n      toggleGroup: toggleGroup\n    }) : null, cellProps.renderGroupValue ? cellProps.renderGroupValue({\n      value: value,\n      data: data,\n      groupSummary: data.groupSummary\n    }) : value);\n  },\n  sortable: false,\n  editable: false,\n  groupBy: false\n};\nexports.default = _default;","map":{"version":3,"sources":["/Users/sungjaejoo/Desktop/ILP-main/node_modules/@inovua/reactdatagrid-enterprise/plugins/group-and-pivot/defaultGroupColumn.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","enumerable","get","_defaultGroupColumnId","id","_react","_renderGroupTool","_default","groupColumn","cellSelectable","showColumnMenuSortOptions","showColumnMenuGroupOptions","showColumnMenuTool","showInContextMenu","header","render","_ref","_ref2","data","toggleGroup","cellProps","__group","groupProps","rtl","shouldRenderGroupTool","computedPivot","depth","computedGroupBy","length","createElement","Fragment","style","display","width","groupNestingSize","renderGroupTool","collapsed","size","renderGroupValue","groupSummary","sortable","editable","groupBy"],"mappings":"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","sourcesContent":["/**\n * Copyright © INOVUA TRADING.\n *\n * This source code is licensed under the Commercial License found in the\n * LICENSE file in the root directory of this source tree.\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nObject.defineProperty(exports, \"groupColumnId\", {\n  enumerable: true,\n  get: function get() {\n    return _defaultGroupColumnId.id;\n  }\n});\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _defaultGroupColumnId = require(\"@inovua/reactdatagrid-community/normalizeColumns/defaultGroupColumnId\");\n\nvar _renderGroupTool = _interopRequireDefault(require(\"@inovua/reactdatagrid-community/Layout/ColumnLayout/Cell/renderGroupTool\"));\n\nvar _default = {\n  id: _defaultGroupColumnId.id,\n  groupColumn: true,\n  cellSelectable: false,\n  showColumnMenuSortOptions: false,\n  showColumnMenuGroupOptions: false,\n  showColumnMenuTool: false,\n  showInContextMenu: false,\n  header: 'Group',\n  render: function render(_ref, _ref2) {\n    var value = _ref.value,\n        data = _ref.data,\n        toggleGroup = _ref.toggleGroup;\n    var cellProps = _ref2.cellProps;\n\n    if (!data.__group) {\n      return null;\n    }\n\n    var groupProps = cellProps.groupProps,\n        rtl = cellProps.rtl;\n    var shouldRenderGroupTool = cellProps.computedPivot ? groupProps.depth < cellProps.computedGroupBy.length - 1 : true;\n    return _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(\"div\", {\n      style: {\n        display: 'inline-block',\n        width: groupProps.groupNestingSize * groupProps.depth\n      }\n    }), shouldRenderGroupTool ? (0, _renderGroupTool.default)({\n      render: groupProps.renderGroupTool,\n      collapsed: groupProps.collapsed,\n      rtl: rtl,\n      size: 20,\n      toggleGroup: toggleGroup\n    }) : null, cellProps.renderGroupValue ? cellProps.renderGroupValue({\n      value: value,\n      data: data,\n      groupSummary: data.groupSummary\n    }) : value);\n  },\n  sortable: false,\n  editable: false,\n  groupBy: false\n};\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}