{"ast":null,"code":"var _jsxFileName = \"/Users/sungjaejoo/Desktop/ILP-main/src/components/LogInForm/DialogLanLogin.tsx\";\n\n/* eslint-disable react/react-in-jsx-scope */\nimport { useCallback, useEffect, useState } from \"react\";\nimport React from \"react\";\nimport Button from \"@mui/material/Button\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogContentText from \"@mui/material/DialogContentText\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport { Grid, Box } from \"@mui/material\";\nimport ReactDataGrid from \"@inovua/reactdatagrid-enterprise\";\nimport \"@inovua/reactdatagrid-enterprise/index.css\";\nimport { useAppDispatch } from \"../../store/hooks\";\nimport { usersActions } from \"../../store/userSlice\";\nconst gridStyle = {\n  minHeight: 120\n};\nconst columns = [{\n  name: \"lan\",\n  header: \"Language\",\n  defaultFlex: 1,\n  type: \"string\"\n}, {\n  name: \"id\",\n  header: \"Id\",\n  type: \"number\",\n  defaultVisible: false\n}];\nconst dataSource = [{\n  id: 1,\n  lan: \"English\"\n}, {\n  id: 2,\n  lan: \"한국어\"\n}];\n\n// eslint-disable-next-line arrow-body-style\nconst DialogLanLogin = _ref => {\n  let {\n    open,\n    close\n  } = _ref;\n  const [selected, setSelected] = useState({});\n  const [selectedObject, setSelectedObject] = useState();\n  const dispatch = useAppDispatch();\n\n  const handleClose = () => {\n    close();\n  };\n\n  const filtertObject = async () => {\n    dataSource.filter(d => d.id === selected).map(d => setSelectedObject(d));\n  };\n\n  const selectHandler = async () => {\n    if (!selectedObject) {\n      alert(\"Please Select the language \\n언어를 선택해 주세요.\");\n    } else {\n      const lan = selectedObject.lan;\n      dispatch(usersActions.updateLanguage(lan));\n      localStorage.setItem(\"lan\", lan);\n      handleClose();\n      alert(lan === \"한국어\" ? \"언어는 한국어로 설정이 되었습니다.\" : \"Default Language is English.\");\n    }\n  };\n\n  useEffect(() => {\n    filtertObject();\n  }, [selected]); // eslint-disable-next-line no-shadow\n\n  const onSelectionChange = useCallback(_ref2 => {\n    let {\n      selected\n    } = _ref2;\n    setSelected(selected);\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Dialog, {\n    open: open,\n    onClose: close,\n    fullWidth: true,\n    disableEscapeKeyDown: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, \"Language Selection / \\uC5B8\\uC5B4 \\uC120\\uD0DD\"), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DialogContentText, {\n    align: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, \"Please Select the Site. / \\uC5B8\\uC5B4\\uB97C \\uC120\\uD0DD\\uD574 \\uC8FC\\uC138\\uC694.\", /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      padding: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(ReactDataGrid, {\n    idProperty: \"id\",\n    checkboxColumn: true,\n    selected: selected,\n    multiSelect: false,\n    onSelectionChange: onSelectionChange,\n    style: gridStyle,\n    columns: columns,\n    dataSource: dataSource,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 21\n    }\n  }))))))), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: selectHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }\n  }, \"Select\"))));\n};\n\nexport default DialogLanLogin;","map":{"version":3,"sources":["/Users/sungjaejoo/Desktop/ILP-main/src/components/LogInForm/DialogLanLogin.tsx"],"names":["useCallback","useEffect","useState","React","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Grid","Box","ReactDataGrid","useAppDispatch","usersActions","gridStyle","minHeight","columns","name","header","defaultFlex","type","defaultVisible","dataSource","id","lan","DialogLanLogin","open","close","selected","setSelected","selectedObject","setSelectedObject","dispatch","handleClose","filtertObject","filter","d","map","selectHandler","alert","updateLanguage","localStorage","setItem","onSelectionChange","padding"],"mappings":"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","sourcesContent":["/* eslint-disable react/react-in-jsx-scope */\nimport { useCallback, useEffect, useState } from \"react\";\nimport React from \"react\";\nimport Button from \"@mui/material/Button\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogContentText from \"@mui/material/DialogContentText\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport { Grid, Typography, Box } from \"@mui/material\";\nimport ReactDataGrid from \"@inovua/reactdatagrid-enterprise\";\nimport \"@inovua/reactdatagrid-enterprise/index.css\";\nimport { useAppSelector, useAppDispatch } from \"../../store/hooks\";\nimport { usersActions } from \"../../store/userSlice\";\nimport { useTranslation } from \"react-i18next\";\n\nconst gridStyle = { minHeight: 120 };\n\nconst columns = [\n  {\n    name: \"lan\",\n    header: \"Language\",\n    defaultFlex: 1,\n    type: \"string\",\n  },\n  { name: \"id\", header: \"Id\", type: \"number\", defaultVisible: false },\n];\n\nconst dataSource = [\n  { id: 1, lan: \"English\" },\n  { id: 2, lan: \"한국어\" },\n];\n\ntype DialogLanLogin = {\n  open: boolean;\n  close: () => void;\n};\n\ntype selectedObjectType = {\n  id: number;\n  lan: string;\n};\n\n// eslint-disable-next-line arrow-body-style\nconst DialogLanLogin = ({ open, close }: DialogLanLogin) => {\n  const [selected, setSelected] = useState({});\n  const [selectedObject, setSelectedObject] = useState<selectedObjectType>();\n  const dispatch = useAppDispatch();\n\n  const handleClose = () => {\n    close();\n  };\n\n  const filtertObject = async () => {\n    dataSource\n      .filter((d) => d.id === selected)\n      .map((d) => setSelectedObject(d));\n  };\n\n  const selectHandler = async () => {\n    if (!selectedObject) {\n      alert(\"Please Select the language \\n언어를 선택해 주세요.\");\n    } else {\n      const lan: string = selectedObject.lan;\n      dispatch(usersActions.updateLanguage(lan));\n      localStorage.setItem(\"lan\", lan);\n      handleClose();\n      alert(\n        lan === \"한국어\"\n          ? \"언어는 한국어로 설정이 되었습니다.\"\n          : \"Default Language is English.\"\n      );\n    }\n  };\n\n  useEffect(() => {\n    filtertObject();\n  }, [selected]);\n\n  // eslint-disable-next-line no-shadow\n  const onSelectionChange = useCallback(({ selected }) => {\n    setSelected(selected);\n  }, []);\n\n  return (\n    <>\n      <Dialog\n        open={open}\n        onClose={close}\n        fullWidth={true}\n        disableEscapeKeyDown={true}\n      >\n        <DialogTitle>Language Selection / 언어 선택</DialogTitle>\n        <DialogContent>\n          <DialogContentText align=\"left\">\n            Please Select the Site. / 언어를 선택해 주세요.\n            <Box sx={{ padding: \"20px\" }}>\n              <form>\n                <Grid container spacing={2}>\n                  <Grid item xs={12} sm={12}>\n                    <ReactDataGrid\n                      idProperty=\"id\"\n                      checkboxColumn\n                      selected={selected}\n                      multiSelect={false}\n                      onSelectionChange={onSelectionChange}\n                      style={gridStyle}\n                      columns={columns}\n                      dataSource={dataSource}\n                    />\n                  </Grid>\n                </Grid>\n              </form>\n            </Box>\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={selectHandler}>Select</Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n\nexport default DialogLanLogin;\n"]},"metadata":{},"sourceType":"module"}