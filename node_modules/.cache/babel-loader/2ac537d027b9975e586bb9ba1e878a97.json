{"ast":null,"code":"/** \n * Copyright © INOVUA TRADING.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar getIndexBy = function getIndexBy(data, by, id, getItemId, compoundIdProperty) {\n  var index = -1;\n\n  for (var i = 0, len = data.length; i < len; i++) {\n    var item = data[i];\n    var itemId = compoundIdProperty ? getItemId(item) : item[by];\n\n    if (itemId === id) {\n      index = i;\n      break;\n    }\n  }\n\n  return index;\n};\n\nvar _default = getIndexBy;\nexports.default = _default;","map":{"version":3,"sources":["/Users/sungjaejoo/Desktop/리액트/인터로거/ILP-main/node_modules/@inovua/reactdatagrid-community/utils/getIndexBy.js"],"names":["Object","defineProperty","exports","value","default","getIndexBy","data","by","id","getItemId","compoundIdProperty","index","i","len","length","item","itemId","_default"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,UAAU,GAAG,SAASA,UAAT,CAAoBC,IAApB,EAA0BC,EAA1B,EAA8BC,EAA9B,EAAkCC,SAAlC,EAA6CC,kBAA7C,EAAiE;AAChF,MAAIC,KAAK,GAAG,CAAC,CAAb;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAR,EAAWC,GAAG,GAAGP,IAAI,CAACQ,MAA3B,EAAmCF,CAAC,GAAGC,GAAvC,EAA4CD,CAAC,EAA7C,EAAiD;AAC/C,QAAIG,IAAI,GAAGT,IAAI,CAACM,CAAD,CAAf;AACA,QAAII,MAAM,GAAGN,kBAAkB,GAAGD,SAAS,CAACM,IAAD,CAAZ,GAAqBA,IAAI,CAACR,EAAD,CAAxD;;AAEA,QAAIS,MAAM,KAAKR,EAAf,EAAmB;AACjBG,MAAAA,KAAK,GAAGC,CAAR;AACA;AACD;AACF;;AAED,SAAOD,KAAP;AACD,CAdD;;AAgBA,IAAIM,QAAQ,GAAGZ,UAAf;AACAH,OAAO,CAACE,OAAR,GAAkBa,QAAlB","sourcesContent":["/** \n * Copyright © INOVUA TRADING.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar getIndexBy = function getIndexBy(data, by, id, getItemId, compoundIdProperty) {\n  var index = -1;\n\n  for (var i = 0, len = data.length; i < len; i++) {\n    var item = data[i];\n    var itemId = compoundIdProperty ? getItemId(item) : item[by];\n\n    if (itemId === id) {\n      index = i;\n      break;\n    }\n  }\n\n  return index;\n};\n\nvar _default = getIndexBy;\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}