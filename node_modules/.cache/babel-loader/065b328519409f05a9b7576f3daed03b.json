{"ast":null,"code":"var _jsxFileName = \"/Users/sungjaejoo/Desktop/\\u1105\\u1175\\u110B\\u1162\\u11A8\\u1110\\u1173/\\u110B\\u1175\\u11AB\\u1110\\u1165\\u1105\\u1169\\u1100\\u1165/ILP-main/src/components/Layout/DrawerComponent.tsx\";\nimport React, { useEffect } from \"react\";\nimport { Drawer, ListItem, List, ListItemIcon, ListItemText } from \"@mui/material\";\nimport { useAppSelector, useAppDispatch } from \"../../store/hooks\";\nimport { useNavigate } from \"react-router-dom\";\nimport { usersActions } from \"../../store/userSlice\";\n\nconst DrawerComponent = _ref => {\n  let {\n    openDrawer,\n    setOpenDrawer\n  } = _ref;\n  const reduxIsLoggedIn = useAppSelector(state => state.isLoggedIn);\n  const reduxUser = useAppSelector(state => state.user);\n  const reduxLan = useAppSelector(state => state.lan);\n  const storedLan = localStorage.getItem(\"lan\");\n  const dispatch = useAppDispatch();\n  let navigate = useNavigate();\n  useEffect(() => {\n    dispatch(usersActions.updateLanguage(storedLan));\n  }, [storedLan]);\n\n  const logoutHandler = () => {\n    dispatch(usersActions.updateIdToken(\"\"));\n    dispatch(usersActions.updateIsLoggedIn(false));\n    dispatch(usersActions.updateUser(\"\"));\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"isLoggedIn\");\n    localStorage.removeItem(\"user\");\n    navigate(\"/login\");\n  };\n\n  return /*#__PURE__*/React.createElement(Drawer, {\n    anchor: \"right\",\n    open: openDrawer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, reduxIsLoggedIn ? /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ListItem, {\n    divider: true,\n    button: true,\n    onClick: () => {\n      if (reduxUser === \"Hans\" || reduxUser === \"Sarah\") {\n        navigate(\"/hompageen\");\n      } else if (reduxUser === \"성재\" || reduxUser === \"엄마\" || reduxUser === \"아빠\" || reduxUser === \"은지\") {\n        navigate(\"/hompagekr\");\n      }\n\n      setOpenDrawer(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ListItemIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ListItemText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 15\n    }\n  }, reduxLan === \"한국어\" ? \"홈\" : \"Home\"))), /*#__PURE__*/React.createElement(ListItem, {\n    divider: true,\n    button: true,\n    onClick: () => {\n      navigate(\"/changepassword\");\n      setOpenDrawer(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ListItemIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ListItemText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 15\n    }\n  }, reduxLan === \"한국어\" ? \"비밀번호 바꾸기\" : \"Change Password\"))), /*#__PURE__*/React.createElement(ListItem, {\n    divider: true,\n    button: true,\n    onClick: () => {\n      if (reduxUser === \"Hans\" || reduxUser === \"Sarah\") {\n        navigate(\"/msglogen\");\n      } else if (reduxUser === \"성재\" || reduxUser === \"엄마\" || reduxUser === \"아빠\" || reduxUser === \"은지\") {\n        navigate(\"/msglogkr\");\n      }\n\n      setOpenDrawer(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ListItemIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ListItemText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 15\n    }\n  }, reduxLan === \"한국어\" ? \"메세지 로그\" : \"Message Log\"))), /*#__PURE__*/React.createElement(ListItem, {\n    divider: true,\n    button: true,\n    onClick: () => {\n      logoutHandler();\n      setOpenDrawer(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ListItemIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ListItemText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 15\n    }\n  }, reduxLan === \"한국어\" ? \"로그아웃\" : \"LogOut\")))) : /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ListItem, {\n    divider: true,\n    button: true,\n    onClick: () => {\n      navigate(\"/signin\");\n      setOpenDrawer(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ListItemIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ListItemText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 15\n    }\n  }, reduxLan === \"한국어\" ? \"가입하기\" : \"Register\"))), /*#__PURE__*/React.createElement(ListItem, {\n    divider: true,\n    button: true,\n    onClick: () => {\n      navigate(\"/login\");\n      setOpenDrawer(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ListItemIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ListItemText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 15\n    }\n  }, reduxLan === \"한국어\" ? \"로그인\" : \"LogIn\")))));\n};\n\nexport default DrawerComponent;","map":{"version":3,"sources":["/Users/sungjaejoo/Desktop/리액트/인터로거/ILP-main/src/components/Layout/DrawerComponent.tsx"],"names":["React","useEffect","Drawer","ListItem","List","ListItemIcon","ListItemText","useAppSelector","useAppDispatch","useNavigate","usersActions","DrawerComponent","openDrawer","setOpenDrawer","reduxIsLoggedIn","state","isLoggedIn","reduxUser","user","reduxLan","lan","storedLan","localStorage","getItem","dispatch","navigate","updateLanguage","logoutHandler","updateIdToken","updateIsLoggedIn","updateUser","removeItem"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport {\n  Drawer,\n  ListItem,\n  List,\n  ListItemIcon,\n  ListItemText,\n} from \"@mui/material\";\nimport { useAppSelector, useAppDispatch } from \"../../store/hooks\";\nimport { useNavigate } from \"react-router-dom\";\nimport { usersActions } from \"../../store/userSlice\";\n\ntype DrawerComponentProp = {\n  openDrawer: boolean;\n  setOpenDrawer: React.Dispatch<React.SetStateAction<boolean>>;\n};\nconst DrawerComponent = ({\n  openDrawer,\n  setOpenDrawer,\n}: DrawerComponentProp) => {\n  const reduxIsLoggedIn: boolean = useAppSelector((state) => state.isLoggedIn);\n  const reduxUser: string = useAppSelector((state) => state.user);\n  const reduxLan: string = useAppSelector((state) => state.lan);\n  const storedLan: string = localStorage.getItem(\"lan\") as string;\n  const dispatch = useAppDispatch();\n  let navigate = useNavigate();\n\n  useEffect(() => {\n    dispatch(usersActions.updateLanguage(storedLan));\n  }, [storedLan]);\n\n  const logoutHandler = () => {\n    dispatch(usersActions.updateIdToken(\"\"));\n    dispatch(usersActions.updateIsLoggedIn(false));\n    dispatch(usersActions.updateUser(\"\"));\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"isLoggedIn\");\n    localStorage.removeItem(\"user\");\n    navigate(\"/login\");\n  };\n\n  return (\n    <Drawer anchor=\"right\" open={openDrawer}>\n      {reduxIsLoggedIn ? (\n        <List>\n          <ListItem\n            divider\n            button\n            onClick={() => {\n              if (reduxUser === \"Hans\" || reduxUser === \"Sarah\") {\n                navigate(\"/hompageen\");\n              } else if (\n                reduxUser === \"성재\" ||\n                reduxUser === \"엄마\" ||\n                reduxUser === \"아빠\" ||\n                reduxUser === \"은지\"\n              ) {\n                navigate(\"/hompagekr\");\n              }\n              setOpenDrawer(false);\n            }}\n          >\n            <ListItemIcon>\n              <ListItemText>\n                {reduxLan === \"한국어\" ? \"홈\" : \"Home\"}\n              </ListItemText>\n            </ListItemIcon>\n          </ListItem>\n          <ListItem\n            divider\n            button\n            onClick={() => {\n              navigate(\"/changepassword\");\n              setOpenDrawer(false);\n            }}\n          >\n            <ListItemIcon>\n              <ListItemText>\n                {reduxLan === \"한국어\" ? \"비밀번호 바꾸기\" : \"Change Password\"}\n              </ListItemText>\n            </ListItemIcon>\n          </ListItem>\n          <ListItem\n            divider\n            button\n            onClick={() => {\n              if (reduxUser === \"Hans\" || reduxUser === \"Sarah\") {\n                navigate(\"/msglogen\");\n              } else if (\n                reduxUser === \"성재\" ||\n                reduxUser === \"엄마\" ||\n                reduxUser === \"아빠\" ||\n                reduxUser === \"은지\"\n              ) {\n                navigate(\"/msglogkr\");\n              }\n              setOpenDrawer(false);\n            }}\n          >\n            <ListItemIcon>\n              <ListItemText>\n                {reduxLan === \"한국어\" ? \"메세지 로그\" : \"Message Log\"}\n              </ListItemText>\n            </ListItemIcon>\n          </ListItem>\n          <ListItem\n            divider\n            button\n            onClick={() => {\n              logoutHandler();\n              setOpenDrawer(false);\n            }}\n          >\n            <ListItemIcon>\n              <ListItemText>\n                {reduxLan === \"한국어\" ? \"로그아웃\" : \"LogOut\"}\n              </ListItemText>\n            </ListItemIcon>\n          </ListItem>\n        </List>\n      ) : (\n        <List>\n          <ListItem\n            divider\n            button\n            onClick={() => {\n              navigate(\"/signin\");\n              setOpenDrawer(false);\n            }}\n          >\n            <ListItemIcon>\n              <ListItemText>\n                {reduxLan === \"한국어\" ? \"가입하기\" : \"Register\"}\n              </ListItemText>\n            </ListItemIcon>\n          </ListItem>\n          <ListItem\n            divider\n            button\n            onClick={() => {\n              navigate(\"/login\");\n              setOpenDrawer(false);\n            }}\n          >\n            <ListItemIcon>\n              <ListItemText>\n                {reduxLan === \"한국어\" ? \"로그인\" : \"LogIn\"}\n              </ListItemText>\n            </ListItemIcon>\n          </ListItem>\n        </List>\n      )}\n    </Drawer>\n  );\n};\n\nexport default DrawerComponent;\n"]},"metadata":{},"sourceType":"module"}