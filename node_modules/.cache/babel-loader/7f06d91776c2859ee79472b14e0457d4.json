{"ast":null,"code":"/**\n * Copyright Â© INOVUA TRADING.\n *\n * This source code is licensed under the Commercial License found in the\n * LICENSE file in the root directory of this source tree.\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.sortTreeDataWithInfo = exports.sortTreeData = exports.expandByIdsWithInfo = exports.expandByIds = exports.expandAtIndexes = exports.expandAtIndex = exports.collapseByIds = exports.collapseAtIndexes = exports.collapseAtIndexWithInfo = exports.collapseAtIndex = void 0;\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _sorty = _interopRequireDefault(require(\"@inovua/reactdatagrid-community/packages/sorty\"));\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      (0, _defineProperty2.default)(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nvar EMPTY_OBJECT = {};\n\nvar sortAsc = function sortAsc(a, b) {\n  return a - b;\n};\n\nvar identity = function identity(a) {\n  return a;\n};\n\nvar augmentNode = function augmentNode(n, parentNode, index) {\n  var config = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : EMPTY_OBJECT;\n  var idProperty = config.idProperty || 'id';\n  var pathSeparator = config.pathSeparator || '/';\n  var nodesName = config.nodesName || 'nodes';\n  var expandedNodes = config.expandedNodes || EMPTY_OBJECT;\n  var dataSourceCache = config.dataSourceCache || EMPTY_OBJECT;\n  var nodeCache = config.nodeCache || EMPTY_OBJECT;\n  var loadingNodes = config.loadingNodes || EMPTY_OBJECT;\n\n  if (!n) {\n    return;\n  }\n\n  if (!n[idProperty]) {\n    console.error(\"Set the correct \\\"idProperty\\\".\");\n    return;\n  }\n\n  var parentNodeId = parentNode ? parentNode[idProperty] : undefined;\n  var path = parentNode ? \"\".concat(parentNodeId).concat(pathSeparator).concat(n[idProperty]) : \"\".concat(n[idProperty]);\n  var cacheKey = config.generateIdFromPath ? path : n[idProperty];\n  var initialNodes = n[nodesName];\n\n  if (dataSourceCache[cacheKey]) {\n    n = _objectSpread(_objectSpread({}, n), dataSourceCache[cacheKey]);\n  }\n\n  if (nodeCache[cacheKey]) {\n    n = _objectSpread(_objectSpread({}, n), nodeCache[cacheKey]);\n  }\n\n  var itemNodes = n[nodesName];\n  var extraNodeProps = n ? n.__extraNodeProps : undefined;\n  var existingDepth = extraNodeProps ? extraNodeProps.depth : undefined;\n  var depth = existingDepth !== undefined ? existingDepth : parentNode ? parentNode.__nodeProps ? parentNode.__nodeProps.depth + 1 : 1 : 0;\n  var nodeProps = (config.nodeProps || identity)({\n    leafNode: itemNodes === undefined,\n    asyncNode: itemNodes === null,\n    expanded: !!expandedNodes[cacheKey],\n    loading: !!loadingNodes[cacheKey],\n    initialNodes: initialNodes,\n    parentNodeId: parentNodeId,\n    path: path,\n    key: cacheKey,\n    childIndex: index,\n    itemNodesCount: Array.isArray(itemNodes) ? itemNodes.length : 0,\n    depth: depth\n  }, n);\n\n  if (config.isNodeLeaf) {\n    nodeProps.leafNode = config.isNodeLeaf({\n      node: n,\n      nodeProps: nodeProps\n    });\n  }\n\n  if (config.isNodeAsync) {\n    nodeProps.asyncNode = config.isNodeAsync({\n      node: n,\n      nodeProps: nodeProps\n    });\n  }\n\n  var result = _objectSpread(_objectSpread({}, n), {}, {\n    __nodeProps: nodeProps\n  });\n\n  if (config.generateIdFromPath) {\n    result[idProperty] = path;\n  }\n\n  return result;\n};\n\nvar expandAtIndexWithInfo = function expandAtIndexWithInfo(dataArray, index) {\n  var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : EMPTY_OBJECT;\n  var nodesName = config.nodesName || 'nodes';\n  var idProperty = config.idProperty || 'id';\n  var node = dataArray[index];\n\n  if (!node) {\n    return {\n      data: dataArray,\n      insertCount: 0\n    };\n  }\n\n  var nextNode = dataArray[index + 1];\n  var parentNodeId = node[idProperty];\n  var nodes = node[nodesName];\n\n  if (!Array.isArray(nodes) || !nodes.length || nextNode && nextNode.__nodeProps && nextNode.__nodeProps.parentNodeId === parentNodeId) {\n    return {\n      data: dataArray,\n      insertCount: 0\n    };\n  }\n\n  var insertIds = {};\n  nodes = nodes.map(function (n, index) {\n    return augmentNode(n, node, index, config);\n  });\n  return {\n    data: dataArray.slice(0, index).concat(node).concat(nodes).concat(dataArray.slice(index + 1)),\n    insertNodes: nodes,\n    insertIds: insertIds,\n    insertCount: nodes.length\n  };\n};\n\nvar expandAtIndexes = function expandAtIndexes(dataArray, indexes) {\n  var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : EMPTY_OBJECT;\n  indexes = indexes.sort(sortAsc);\n  var alreadyInserted = 0;\n\n  if (!Array.isArray(indexes) || !indexes.length) {\n    return dataArray;\n  }\n\n  return indexes.reduce(function (dataSource, index) {\n    var _expandAtIndexWithInf = expandAtIndexWithInfo(dataSource, index + alreadyInserted, config),\n        data = _expandAtIndexWithInf.data,\n        insertCount = _expandAtIndexWithInf.insertCount;\n\n    alreadyInserted += insertCount;\n    return data;\n  }, dataArray);\n};\n\nexports.expandAtIndexes = expandAtIndexes;\n\nvar collapseAtIndexes = function collapseAtIndexes(dataArray, indexes) {\n  var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : EMPTY_OBJECT;\n  indexes = indexes.sort(sortAsc);\n  var alreadyRemoved = 0;\n\n  if (!Array.isArray(indexes) || !indexes.length) {\n    return dataArray;\n  }\n\n  return indexes.reduce(function (dataSource, index) {\n    var _collapseAtIndexWithI = collapseAtIndexWithInfo(dataSource, index - alreadyRemoved, config),\n        data = _collapseAtIndexWithI.data,\n        removeCount = _collapseAtIndexWithI.removeCount;\n\n    alreadyRemoved += removeCount;\n    return data;\n  }, dataArray);\n};\n\nexports.collapseAtIndexes = collapseAtIndexes;\n\nvar expandAtIndex = function expandAtIndex(dataArray, index) {\n  var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : EMPTY_OBJECT;\n\n  var _expandAtIndexWithInf2 = expandAtIndexWithInfo(dataArray, index, config),\n      data = _expandAtIndexWithInf2.data;\n\n  return data;\n};\n\nexports.expandAtIndex = expandAtIndex;\n\nvar expandByIds = function expandByIds(dataArray, idMap) {\n  var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : EMPTY_OBJECT;\n\n  var _expandByIdsWithInfo = expandByIdsWithInfo(dataArray, idMap, config),\n      data = _expandByIdsWithInfo.data;\n\n  return data;\n};\n\nexports.expandByIds = expandByIds;\n\nvar expandByIdsWithInfo = function expandByIdsWithInfo(dataArray) {\n  var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : EMPTY_OBJECT;\n  var parentNode = arguments.length > 2 ? arguments[2] : undefined;\n  var result = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n  var idToIndexMap = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n  var dataMap = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {};\n  var startIndex = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : 0;\n  var nodesToExpand = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : [];\n  var idProperty = config.idProperty || 'id';\n  var nodesName = config.nodesName || 'nodes';\n  var expandedNodes = config.expandedNodes || EMPTY_OBJECT;\n  var nextItem;\n  var itemAlreadyExpanded;\n  var itemId;\n  var itemNodes;\n  dataArray.forEach(function (item, i) {\n    item = augmentNode(item, parentNode, i, config);\n\n    if (item) {\n      itemId = item[idProperty];\n      itemNodes = item[nodesName];\n      idToIndexMap[itemId] = i + startIndex;\n      dataMap[itemId] = item;\n      result.push(item);\n\n      if (expandedNodes[itemId]) {\n        if (Array.isArray(itemNodes)) {\n          nextItem = dataArray[i + 1];\n          itemAlreadyExpanded = nextItem && nextItem.__nodeProps && nextItem.__nodeProps.parentNodeId === itemId;\n\n          if (!itemAlreadyExpanded) {\n            var startFrom = result.length;\n            expandByIdsWithInfo(itemNodes, config, item, result, idToIndexMap, dataMap, startFrom, nodesToExpand);\n            startIndex += result.length - startFrom;\n          }\n        } else if (item.__nodeProps.expanded && !item.__nodeProps.loading && item.__nodeProps.asyncNode && !item.__nodeProps.itemNodesCount && (!config.collapsingNodes || !config.collapsingNodes[itemId])) {\n          nodesToExpand.push(item);\n        }\n      }\n    }\n  });\n  return {\n    data: result,\n    dataMap: dataMap,\n    idToIndexMap: idToIndexMap,\n    nodesToExpand: nodesToExpand\n  };\n};\n\nexports.expandByIdsWithInfo = expandByIdsWithInfo;\n\nvar collapseByIds = function collapseByIds(dataArray, idMap) {\n  var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : EMPTY_OBJECT;\n  var idToIndexMap = config.idToIndexMap;\n\n  if (!idToIndexMap) {\n    throw new Error(\"The last argument to \\\"collapseByIds\\\" should contain a \\\"idToIndexMap\\\" property. No such property found!\");\n  }\n\n  var indexes = [];\n  var index;\n\n  for (var id in idMap) {\n    index = idToIndexMap[id];\n\n    if (index !== undefined) {\n      indexes.push(index);\n    }\n  }\n\n  return collapseAtIndexes(dataArray, indexes, config);\n};\n\nexports.collapseByIds = collapseByIds;\n\nvar collapseAtIndexWithInfo = function collapseAtIndexWithInfo(dataArray, index) {\n  var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : EMPTY_OBJECT;\n  var node = dataArray[index];\n  var idProperty = config.idProperty || 'id';\n\n  if (!node) {\n    return {\n      data: dataArray,\n      removeCount: 0\n    };\n  }\n\n  var parentNodeId = node[idProperty];\n  var nodesName = config.nodesName || 'nodes';\n  var nodes = node[nodesName];\n  var nextNode = dataArray[index + 1];\n\n  if (!Array.isArray(nodes) || !nodes.length || nextNode && (!nextNode.__nodeProps || nextNode.__nodeProps.parentNodeId !== parentNodeId)) {\n    return {\n      data: dataArray,\n      removeCount: 0\n    };\n  }\n\n  return {\n    data: dataArray.slice(0, index).concat(node).concat(dataArray.slice(index + nodes.length + 1)),\n    removeCount: nodes.length\n  };\n};\n\nexports.collapseAtIndexWithInfo = collapseAtIndexWithInfo;\n\nvar collapseAtIndex = function collapseAtIndex(dataArray, index) {\n  var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : EMPTY_OBJECT;\n\n  var _collapseAtIndexWithI2 = collapseAtIndexWithInfo(dataArray, index, config),\n      data = _collapseAtIndexWithI2.data;\n\n  return data;\n};\n\nexports.collapseAtIndex = collapseAtIndex;\n\nvar sortTreeData = function sortTreeData(sortInfo, dataArray) {\n  var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : EMPTY_OBJECT,\n      _ref$depth = _ref.depth,\n      depth = _ref$depth === void 0 ? 0 : _ref$depth,\n      deep = _ref.deep;\n\n  var _sortTreeDataWithInfo = sortTreeDataWithInfo(sortInfo, dataArray, depth),\n      data = _sortTreeDataWithInfo.data,\n      maxDepth = _sortTreeDataWithInfo.maxDepth;\n\n  if (deep) {\n    var currentDepth = depth;\n\n    while (currentDepth < maxDepth) {\n      currentDepth++;\n      data = sortTreeDataWithInfo(sortInfo, data, currentDepth).data;\n    }\n  }\n\n  return data;\n};\n\nexports.sortTreeData = sortTreeData;\n\nvar sortTreeDataWithInfo = function sortTreeDataWithInfo(sortInfo, dataArray) {\n  var depth = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  var item;\n  var index = 0;\n  var currentDepth;\n  var currentPath;\n  var prevItemDepth = -1;\n\n  var _prevPath;\n\n  var prevMatchingDepthPath;\n  var arrayToSort;\n  var currentNodeChildren = [];\n  var map = {};\n  var sortIndexStart;\n  var maxDepth = 0;\n\n  while (item = dataArray[index]) {\n    currentDepth = item.__nodeProps.depth;\n    currentPath = item.__nodeProps.path;\n    maxDepth = Math.max(maxDepth, currentDepth);\n\n    if (currentDepth === depth) {\n      if (currentDepth > prevItemDepth) {\n        arrayToSort = [];\n        sortIndexStart = index;\n      }\n\n      arrayToSort.push(item);\n    }\n\n    if (prevItemDepth >= depth && currentDepth <= depth) {\n      if (currentNodeChildren.length) {\n        map[prevMatchingDepthPath] = currentNodeChildren;\n        currentNodeChildren = [];\n      }\n    }\n\n    if (currentDepth > depth) {\n      currentNodeChildren.push(item);\n    }\n\n    if (currentDepth < depth && arrayToSort && arrayToSort.length) {\n      (0, _sorty.default)(sortInfo, arrayToSort);\n\n      for (var i = 0, sortItemChildren, sortItemPath, sortItem;; i < arrayToSort.length) {\n        sortItem = arrayToSort[i];\n\n        if (!sortItem) {\n          break;\n        }\n\n        sortItemPath = sortItem.__nodeProps.path;\n        sortItemChildren = map[sortItemPath];\n\n        if (Array.isArray(sortItemChildren)) {\n          var _arrayToSort;\n\n          (_arrayToSort = arrayToSort).splice.apply(_arrayToSort, [i + 1, 0].concat((0, _toConsumableArray2.default)(sortItemChildren)));\n\n          i += sortItemChildren.length;\n        }\n\n        i++;\n      }\n\n      dataArray.splice.apply(dataArray, [sortIndexStart, arrayToSort.length].concat((0, _toConsumableArray2.default)(arrayToSort)));\n      arrayToSort = [];\n    }\n\n    index++;\n\n    if (currentDepth === depth) {\n      prevMatchingDepthPath = currentPath;\n    }\n\n    prevItemDepth = currentDepth;\n    _prevPath = currentPath;\n  }\n\n  if (currentNodeChildren.length) {\n    map[prevMatchingDepthPath] = currentNodeChildren;\n  }\n\n  if (arrayToSort && arrayToSort.length) {\n    (0, _sorty.default)(sortInfo, arrayToSort);\n    var idx = 0;\n\n    var _sortItemChildren;\n\n    var _sortItemPath;\n\n    var _sortItem;\n\n    for (;; idx < arrayToSort.length) {\n      _sortItem = arrayToSort[idx];\n\n      if (!_sortItem) {\n        break;\n      }\n\n      _sortItemPath = _sortItem.__nodeProps.path;\n      _sortItemChildren = map[_sortItemPath];\n\n      if (Array.isArray(_sortItemChildren)) {\n        var _arrayToSort2;\n\n        (_arrayToSort2 = arrayToSort).splice.apply(_arrayToSort2, [idx + 1, 0].concat((0, _toConsumableArray2.default)(_sortItemChildren)));\n\n        idx += _sortItemChildren.length;\n      }\n\n      idx++;\n    }\n\n    dataArray.splice.apply(dataArray, [sortIndexStart, arrayToSort.length].concat((0, _toConsumableArray2.default)(arrayToSort)));\n  }\n\n  return {\n    data: dataArray,\n    maxDepth: maxDepth\n  };\n};\n\nexports.sortTreeDataWithInfo = sortTreeDataWithInfo;","map":{"version":3,"sources":["/Users/sungjaejoo/Desktop/ááµáá¢á¨áá³/ááµá«áá¥áá©áá¥/ILP-main/node_modules/@inovua/reactdatagrid-enterprise/plugins/tree/tree/index.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","sortTreeDataWithInfo","sortTreeData","expandByIdsWithInfo","expandByIds","expandAtIndexes","expandAtIndex","collapseByIds","collapseAtIndexes","collapseAtIndexWithInfo","collapseAtIndex","_toConsumableArray2","_defineProperty2","_sorty","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","default","getOwnPropertyDescriptors","defineProperties","EMPTY_OBJECT","sortAsc","a","b","identity","augmentNode","n","parentNode","index","config","undefined","idProperty","pathSeparator","nodesName","expandedNodes","dataSourceCache","nodeCache","loadingNodes","console","error","parentNodeId","path","concat","cacheKey","generateIdFromPath","initialNodes","itemNodes","extraNodeProps","__extraNodeProps","existingDepth","depth","__nodeProps","nodeProps","leafNode","asyncNode","expanded","loading","childIndex","itemNodesCount","Array","isArray","isNodeLeaf","node","isNodeAsync","result","expandAtIndexWithInfo","dataArray","data","insertCount","nextNode","nodes","insertIds","map","slice","insertNodes","indexes","sort","alreadyInserted","reduce","dataSource","_expandAtIndexWithInf","alreadyRemoved","_collapseAtIndexWithI","removeCount","_expandAtIndexWithInf2","idMap","_expandByIdsWithInfo","idToIndexMap","dataMap","startIndex","nodesToExpand","nextItem","itemAlreadyExpanded","itemId","item","startFrom","collapsingNodes","Error","id","_collapseAtIndexWithI2","sortInfo","_ref","_ref$depth","deep","_sortTreeDataWithInfo","maxDepth","currentDepth","currentPath","prevItemDepth","_prevPath","prevMatchingDepthPath","arrayToSort","currentNodeChildren","sortIndexStart","Math","max","sortItemChildren","sortItemPath","sortItem","_arrayToSort","splice","idx","_sortItemChildren","_sortItemPath","_sortItem","_arrayToSort2"],"mappings":"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","sourcesContent":["/**\n * Copyright Â© INOVUA TRADING.\n *\n * This source code is licensed under the Commercial License found in the\n * LICENSE file in the root directory of this source tree.\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.sortTreeDataWithInfo = exports.sortTreeData = exports.expandByIdsWithInfo = exports.expandByIds = exports.expandAtIndexes = exports.expandAtIndex = exports.collapseByIds = exports.collapseAtIndexes = exports.collapseAtIndexWithInfo = exports.collapseAtIndex = void 0;\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _sorty = _interopRequireDefault(require(\"@inovua/reactdatagrid-community/packages/sorty\"));\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nvar EMPTY_OBJECT = {};\n\nvar sortAsc = function sortAsc(a, b) {\n  return a - b;\n};\n\nvar identity = function identity(a) {\n  return a;\n};\n\nvar augmentNode = function augmentNode(n, parentNode, index) {\n  var config = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : EMPTY_OBJECT;\n  var idProperty = config.idProperty || 'id';\n  var pathSeparator = config.pathSeparator || '/';\n  var nodesName = config.nodesName || 'nodes';\n  var expandedNodes = config.expandedNodes || EMPTY_OBJECT;\n  var dataSourceCache = config.dataSourceCache || EMPTY_OBJECT;\n  var nodeCache = config.nodeCache || EMPTY_OBJECT;\n  var loadingNodes = config.loadingNodes || EMPTY_OBJECT;\n\n  if (!n) {\n    return;\n  }\n\n  if (!n[idProperty]) {\n    console.error(\"Set the correct \\\"idProperty\\\".\");\n    return;\n  }\n\n  var parentNodeId = parentNode ? parentNode[idProperty] : undefined;\n  var path = parentNode ? \"\".concat(parentNodeId).concat(pathSeparator).concat(n[idProperty]) : \"\".concat(n[idProperty]);\n  var cacheKey = config.generateIdFromPath ? path : n[idProperty];\n  var initialNodes = n[nodesName];\n\n  if (dataSourceCache[cacheKey]) {\n    n = _objectSpread(_objectSpread({}, n), dataSourceCache[cacheKey]);\n  }\n\n  if (nodeCache[cacheKey]) {\n    n = _objectSpread(_objectSpread({}, n), nodeCache[cacheKey]);\n  }\n\n  var itemNodes = n[nodesName];\n  var extraNodeProps = n ? n.__extraNodeProps : undefined;\n  var existingDepth = extraNodeProps ? extraNodeProps.depth : undefined;\n  var depth = existingDepth !== undefined ? existingDepth : parentNode ? parentNode.__nodeProps ? parentNode.__nodeProps.depth + 1 : 1 : 0;\n  var nodeProps = (config.nodeProps || identity)({\n    leafNode: itemNodes === undefined,\n    asyncNode: itemNodes === null,\n    expanded: !!expandedNodes[cacheKey],\n    loading: !!loadingNodes[cacheKey],\n    initialNodes: initialNodes,\n    parentNodeId: parentNodeId,\n    path: path,\n    key: cacheKey,\n    childIndex: index,\n    itemNodesCount: Array.isArray(itemNodes) ? itemNodes.length : 0,\n    depth: depth\n  }, n);\n\n  if (config.isNodeLeaf) {\n    nodeProps.leafNode = config.isNodeLeaf({\n      node: n,\n      nodeProps: nodeProps\n    });\n  }\n\n  if (config.isNodeAsync) {\n    nodeProps.asyncNode = config.isNodeAsync({\n      node: n,\n      nodeProps: nodeProps\n    });\n  }\n\n  var result = _objectSpread(_objectSpread({}, n), {}, {\n    __nodeProps: nodeProps\n  });\n\n  if (config.generateIdFromPath) {\n    result[idProperty] = path;\n  }\n\n  return result;\n};\n\nvar expandAtIndexWithInfo = function expandAtIndexWithInfo(dataArray, index) {\n  var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : EMPTY_OBJECT;\n  var nodesName = config.nodesName || 'nodes';\n  var idProperty = config.idProperty || 'id';\n  var node = dataArray[index];\n\n  if (!node) {\n    return {\n      data: dataArray,\n      insertCount: 0\n    };\n  }\n\n  var nextNode = dataArray[index + 1];\n  var parentNodeId = node[idProperty];\n  var nodes = node[nodesName];\n\n  if (!Array.isArray(nodes) || !nodes.length || nextNode && nextNode.__nodeProps && nextNode.__nodeProps.parentNodeId === parentNodeId) {\n    return {\n      data: dataArray,\n      insertCount: 0\n    };\n  }\n\n  var insertIds = {};\n  nodes = nodes.map(function (n, index) {\n    return augmentNode(n, node, index, config);\n  });\n  return {\n    data: dataArray.slice(0, index).concat(node).concat(nodes).concat(dataArray.slice(index + 1)),\n    insertNodes: nodes,\n    insertIds: insertIds,\n    insertCount: nodes.length\n  };\n};\n\nvar expandAtIndexes = function expandAtIndexes(dataArray, indexes) {\n  var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : EMPTY_OBJECT;\n  indexes = indexes.sort(sortAsc);\n  var alreadyInserted = 0;\n\n  if (!Array.isArray(indexes) || !indexes.length) {\n    return dataArray;\n  }\n\n  return indexes.reduce(function (dataSource, index) {\n    var _expandAtIndexWithInf = expandAtIndexWithInfo(dataSource, index + alreadyInserted, config),\n        data = _expandAtIndexWithInf.data,\n        insertCount = _expandAtIndexWithInf.insertCount;\n\n    alreadyInserted += insertCount;\n    return data;\n  }, dataArray);\n};\n\nexports.expandAtIndexes = expandAtIndexes;\n\nvar collapseAtIndexes = function collapseAtIndexes(dataArray, indexes) {\n  var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : EMPTY_OBJECT;\n  indexes = indexes.sort(sortAsc);\n  var alreadyRemoved = 0;\n\n  if (!Array.isArray(indexes) || !indexes.length) {\n    return dataArray;\n  }\n\n  return indexes.reduce(function (dataSource, index) {\n    var _collapseAtIndexWithI = collapseAtIndexWithInfo(dataSource, index - alreadyRemoved, config),\n        data = _collapseAtIndexWithI.data,\n        removeCount = _collapseAtIndexWithI.removeCount;\n\n    alreadyRemoved += removeCount;\n    return data;\n  }, dataArray);\n};\n\nexports.collapseAtIndexes = collapseAtIndexes;\n\nvar expandAtIndex = function expandAtIndex(dataArray, index) {\n  var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : EMPTY_OBJECT;\n\n  var _expandAtIndexWithInf2 = expandAtIndexWithInfo(dataArray, index, config),\n      data = _expandAtIndexWithInf2.data;\n\n  return data;\n};\n\nexports.expandAtIndex = expandAtIndex;\n\nvar expandByIds = function expandByIds(dataArray, idMap) {\n  var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : EMPTY_OBJECT;\n\n  var _expandByIdsWithInfo = expandByIdsWithInfo(dataArray, idMap, config),\n      data = _expandByIdsWithInfo.data;\n\n  return data;\n};\n\nexports.expandByIds = expandByIds;\n\nvar expandByIdsWithInfo = function expandByIdsWithInfo(dataArray) {\n  var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : EMPTY_OBJECT;\n  var parentNode = arguments.length > 2 ? arguments[2] : undefined;\n  var result = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n  var idToIndexMap = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n  var dataMap = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {};\n  var startIndex = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : 0;\n  var nodesToExpand = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : [];\n  var idProperty = config.idProperty || 'id';\n  var nodesName = config.nodesName || 'nodes';\n  var expandedNodes = config.expandedNodes || EMPTY_OBJECT;\n  var nextItem;\n  var itemAlreadyExpanded;\n  var itemId;\n  var itemNodes;\n  dataArray.forEach(function (item, i) {\n    item = augmentNode(item, parentNode, i, config);\n\n    if (item) {\n      itemId = item[idProperty];\n      itemNodes = item[nodesName];\n      idToIndexMap[itemId] = i + startIndex;\n      dataMap[itemId] = item;\n      result.push(item);\n\n      if (expandedNodes[itemId]) {\n        if (Array.isArray(itemNodes)) {\n          nextItem = dataArray[i + 1];\n          itemAlreadyExpanded = nextItem && nextItem.__nodeProps && nextItem.__nodeProps.parentNodeId === itemId;\n\n          if (!itemAlreadyExpanded) {\n            var startFrom = result.length;\n            expandByIdsWithInfo(itemNodes, config, item, result, idToIndexMap, dataMap, startFrom, nodesToExpand);\n            startIndex += result.length - startFrom;\n          }\n        } else if (item.__nodeProps.expanded && !item.__nodeProps.loading && item.__nodeProps.asyncNode && !item.__nodeProps.itemNodesCount && (!config.collapsingNodes || !config.collapsingNodes[itemId])) {\n          nodesToExpand.push(item);\n        }\n      }\n    }\n  });\n  return {\n    data: result,\n    dataMap: dataMap,\n    idToIndexMap: idToIndexMap,\n    nodesToExpand: nodesToExpand\n  };\n};\n\nexports.expandByIdsWithInfo = expandByIdsWithInfo;\n\nvar collapseByIds = function collapseByIds(dataArray, idMap) {\n  var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : EMPTY_OBJECT;\n  var idToIndexMap = config.idToIndexMap;\n\n  if (!idToIndexMap) {\n    throw new Error(\"The last argument to \\\"collapseByIds\\\" should contain a \\\"idToIndexMap\\\" property. No such property found!\");\n  }\n\n  var indexes = [];\n  var index;\n\n  for (var id in idMap) {\n    index = idToIndexMap[id];\n\n    if (index !== undefined) {\n      indexes.push(index);\n    }\n  }\n\n  return collapseAtIndexes(dataArray, indexes, config);\n};\n\nexports.collapseByIds = collapseByIds;\n\nvar collapseAtIndexWithInfo = function collapseAtIndexWithInfo(dataArray, index) {\n  var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : EMPTY_OBJECT;\n  var node = dataArray[index];\n  var idProperty = config.idProperty || 'id';\n\n  if (!node) {\n    return {\n      data: dataArray,\n      removeCount: 0\n    };\n  }\n\n  var parentNodeId = node[idProperty];\n  var nodesName = config.nodesName || 'nodes';\n  var nodes = node[nodesName];\n  var nextNode = dataArray[index + 1];\n\n  if (!Array.isArray(nodes) || !nodes.length || nextNode && (!nextNode.__nodeProps || nextNode.__nodeProps.parentNodeId !== parentNodeId)) {\n    return {\n      data: dataArray,\n      removeCount: 0\n    };\n  }\n\n  return {\n    data: dataArray.slice(0, index).concat(node).concat(dataArray.slice(index + nodes.length + 1)),\n    removeCount: nodes.length\n  };\n};\n\nexports.collapseAtIndexWithInfo = collapseAtIndexWithInfo;\n\nvar collapseAtIndex = function collapseAtIndex(dataArray, index) {\n  var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : EMPTY_OBJECT;\n\n  var _collapseAtIndexWithI2 = collapseAtIndexWithInfo(dataArray, index, config),\n      data = _collapseAtIndexWithI2.data;\n\n  return data;\n};\n\nexports.collapseAtIndex = collapseAtIndex;\n\nvar sortTreeData = function sortTreeData(sortInfo, dataArray) {\n  var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : EMPTY_OBJECT,\n      _ref$depth = _ref.depth,\n      depth = _ref$depth === void 0 ? 0 : _ref$depth,\n      deep = _ref.deep;\n\n  var _sortTreeDataWithInfo = sortTreeDataWithInfo(sortInfo, dataArray, depth),\n      data = _sortTreeDataWithInfo.data,\n      maxDepth = _sortTreeDataWithInfo.maxDepth;\n\n  if (deep) {\n    var currentDepth = depth;\n\n    while (currentDepth < maxDepth) {\n      currentDepth++;\n      data = sortTreeDataWithInfo(sortInfo, data, currentDepth).data;\n    }\n  }\n\n  return data;\n};\n\nexports.sortTreeData = sortTreeData;\n\nvar sortTreeDataWithInfo = function sortTreeDataWithInfo(sortInfo, dataArray) {\n  var depth = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  var item;\n  var index = 0;\n  var currentDepth;\n  var currentPath;\n  var prevItemDepth = -1;\n\n  var _prevPath;\n\n  var prevMatchingDepthPath;\n  var arrayToSort;\n  var currentNodeChildren = [];\n  var map = {};\n  var sortIndexStart;\n  var maxDepth = 0;\n\n  while (item = dataArray[index]) {\n    currentDepth = item.__nodeProps.depth;\n    currentPath = item.__nodeProps.path;\n    maxDepth = Math.max(maxDepth, currentDepth);\n\n    if (currentDepth === depth) {\n      if (currentDepth > prevItemDepth) {\n        arrayToSort = [];\n        sortIndexStart = index;\n      }\n\n      arrayToSort.push(item);\n    }\n\n    if (prevItemDepth >= depth && currentDepth <= depth) {\n      if (currentNodeChildren.length) {\n        map[prevMatchingDepthPath] = currentNodeChildren;\n        currentNodeChildren = [];\n      }\n    }\n\n    if (currentDepth > depth) {\n      currentNodeChildren.push(item);\n    }\n\n    if (currentDepth < depth && arrayToSort && arrayToSort.length) {\n      (0, _sorty.default)(sortInfo, arrayToSort);\n\n      for (var i = 0, sortItemChildren, sortItemPath, sortItem;; i < arrayToSort.length) {\n        sortItem = arrayToSort[i];\n\n        if (!sortItem) {\n          break;\n        }\n\n        sortItemPath = sortItem.__nodeProps.path;\n        sortItemChildren = map[sortItemPath];\n\n        if (Array.isArray(sortItemChildren)) {\n          var _arrayToSort;\n\n          (_arrayToSort = arrayToSort).splice.apply(_arrayToSort, [i + 1, 0].concat((0, _toConsumableArray2.default)(sortItemChildren)));\n\n          i += sortItemChildren.length;\n        }\n\n        i++;\n      }\n\n      dataArray.splice.apply(dataArray, [sortIndexStart, arrayToSort.length].concat((0, _toConsumableArray2.default)(arrayToSort)));\n      arrayToSort = [];\n    }\n\n    index++;\n\n    if (currentDepth === depth) {\n      prevMatchingDepthPath = currentPath;\n    }\n\n    prevItemDepth = currentDepth;\n    _prevPath = currentPath;\n  }\n\n  if (currentNodeChildren.length) {\n    map[prevMatchingDepthPath] = currentNodeChildren;\n  }\n\n  if (arrayToSort && arrayToSort.length) {\n    (0, _sorty.default)(sortInfo, arrayToSort);\n    var idx = 0;\n\n    var _sortItemChildren;\n\n    var _sortItemPath;\n\n    var _sortItem;\n\n    for (;; idx < arrayToSort.length) {\n      _sortItem = arrayToSort[idx];\n\n      if (!_sortItem) {\n        break;\n      }\n\n      _sortItemPath = _sortItem.__nodeProps.path;\n      _sortItemChildren = map[_sortItemPath];\n\n      if (Array.isArray(_sortItemChildren)) {\n        var _arrayToSort2;\n\n        (_arrayToSort2 = arrayToSort).splice.apply(_arrayToSort2, [idx + 1, 0].concat((0, _toConsumableArray2.default)(_sortItemChildren)));\n\n        idx += _sortItemChildren.length;\n      }\n\n      idx++;\n    }\n\n    dataArray.splice.apply(dataArray, [sortIndexStart, arrayToSort.length].concat((0, _toConsumableArray2.default)(arrayToSort)));\n  }\n\n  return {\n    data: dataArray,\n    maxDepth: maxDepth\n  };\n};\n\nexports.sortTreeDataWithInfo = sortTreeDataWithInfo;"]},"metadata":{},"sourceType":"script"}