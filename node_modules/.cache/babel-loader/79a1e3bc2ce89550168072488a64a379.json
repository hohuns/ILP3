{"ast":null,"code":"/** \n * Copyright Â© INOVUA TRADING.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _reactCleanProps = _interopRequireDefault(require(\"../../../packages/react-clean-props\"));\n\nvar _shallowequal = require(\"../../../packages/shallowequal\");\n\nvar _join = _interopRequireDefault(require(\"../../../packages/join\"));\n\nvar _clamp = _interopRequireDefault(require(\"../../../utils/clamp\"));\n\nvar _Cell = _interopRequireDefault(require(\"../Cell\"));\n\nvar _renderCellsMaybeLocked = _interopRequireDefault(require(\"./renderCellsMaybeLocked\"));\n\nvar _adjustCellProps = _interopRequireDefault(require(\"./adjustCellProps\"));\n\nvar _usePrevious = _interopRequireDefault(require(\"../../../hooks/usePrevious\"));\n\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\n\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache(nodeInterop);\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      (0, _defineProperty2.default)(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nvar CLASS_NAME = 'InovuaReactDataGrid__row';\n\nvar rowClean = function rowClean(p) {\n  var result = _objectSpread({}, p);\n\n  delete result.activeRowRef;\n  return result;\n};\n\nvar skipSelect = function skipSelect(event) {\n  event.nativeEvent.skipSelect = true;\n};\n\nvar getValueForPivotColumn = function getValueForPivotColumn(item, path) {\n  return path.reduce(function (acc, field, index) {\n    if (!acc || acc[field] == null) {\n      return null;\n    }\n\n    if (index === path.length - 1) {\n      return acc[field];\n    }\n\n    return acc[field].pivotSummary || acc[field].values;\n  }, item);\n};\n\nvar getValueForPivotColumnSummary = function getValueForPivotColumnSummary(item, _ref) {\n  var path = _ref.pivotSummaryPath;\n  var i = 0;\n  var root = item;\n  var current;\n\n  while ((current = path[i]) && root) {\n    if (!root.pivotSummary) {\n      return null;\n    }\n\n    root = root.pivotSummary[current.value];\n    i++;\n  }\n\n  if (root && root.pivotColumnSummary) {\n    return root.pivotColumnSummary[path[path.length - 1].field];\n  }\n\n  return null;\n};\n\nvar DataGridRow = _react.default.forwardRef(function (props, ref) {\n  var cells = (0, _react.useRef)([]);\n  var cellRef = (0, _react.useRef)();\n  var domRef = (0, _react.useRef)(null);\n  var columnRenderStartIndex = (0, _react.useRef)(0);\n  var hasBorderTop = (0, _react.useRef)(false);\n  var hasBorderBottom = (0, _react.useRef)(false);\n  var maxRowspan = (0, _react.useRef)(1);\n  var scrollingInProgress = (0, _react.useRef)(false);\n  var scrollingDirection = (0, _react.useRef)('vertical');\n\n  var initCells = function initCells() {\n    cellRef.current = function (c) {\n      if (!c) return;\n      cells.current.push(c);\n    };\n  };\n\n  var cleanupCells = (0, _react.useCallback)(function () {\n    cells.current = cells.current.filter(Boolean);\n    return cells.current;\n  }, []);\n  var getCells = (0, _react.useCallback)(function () {\n    return cells.current;\n  }, []);\n  var prevColumnRenderCount = (0, _usePrevious.default)(props.columnRenderCount, props.columnRenderCount);\n\n  if (props.columnRenderCount < prevColumnRenderCount) {\n    cleanupCells();\n    getCells().forEach(function (cell) {\n      if (cell.getProps().computedLocked) {\n        return;\n      }\n\n      cell.setStateProps(null);\n    });\n  }\n\n  var getDOMNode = (0, _react.useCallback)(function () {\n    return domRef.current;\n  }, []);\n\n  var setActiveRowRef = function setActiveRowRef() {\n    props.activeRowRef.current = {\n      instance: {\n        hasBorderBottom: hasBorderBottom.current,\n        hasBorderTop: hasBorderTop.current,\n        props: props\n      },\n      node: getDOMNode()\n    };\n  };\n\n  if (props.active) {\n    setActiveRowRef();\n  }\n\n  (0, _react.useEffect)(function () {\n    initCells();\n\n    if (props.columnRenderStartIndex) {\n      setColumnRenderStartIndex(props.columnRenderStartIndex);\n    }\n\n    return function () {\n      cells.current = [];\n    };\n  }, []);\n  var prevRowIndex = (0, _usePrevious.default)(props.rowIndex, props.rowIndex);\n  var prevEditing = (0, _usePrevious.default)(props.editing, props.editing);\n  var prevActive = (0, _usePrevious.default)(props.active, props.active);\n  (0, _react.useEffect)(function () {\n    if (props.groupProps && props.rowIndex !== prevRowIndex) {\n      fixForColspan();\n    }\n\n    if (props.editing !== prevEditing) {\n      updateEditCell();\n    }\n\n    if (!prevActive && props.active) {\n      setActiveRowRef();\n    }\n  });\n  var onCellUnmount = (0, _react.useCallback)(function (_cellProps, cell) {\n    if (cells.current) {\n      cells.current = cells.current.filter(function (c) {\n        return c !== cell;\n      });\n    }\n  }, []);\n  var orderCells = (0, _react.useCallback)(function () {\n    var cells = cleanupCells();\n    var sortedProps = cells.map(function (c) {\n      return c.getProps();\n    }).sort(function (p1, p2) {\n      return p1.index - p2.index;\n    });\n    cells.sort(function (cell1, cell2) {\n      return cell1.props.renderIndex - cell2.props.renderIndex;\n    });\n    cells.forEach(function (c, i) {\n      c.setStateProps(sortedProps[i]);\n    });\n  }, [cleanupCells]);\n  var updateEditCell = (0, _react.useCallback)(function () {\n    var cells = getCells();\n    var editColumnIndex = props.editColumnIndex;\n\n    for (var i = 0, len = cells.length, cell; i < len; i++) {\n      cell = cells[i];\n\n      if (getCellIndex(cell) === editColumnIndex) {\n        setCellIndex(cell, editColumnIndex);\n      }\n\n      if (cell.getProps().inEdit) {\n        setCellIndex(cell, getCellIndex(cell));\n      }\n    }\n  }, [props.editColumnIndex]);\n  var fixForColspan = (0, _react.useCallback)(function () {\n    if (props.computedHasColSpan) {\n      setColumnRenderStartIndex(columnRenderStartIndex.current);\n    }\n  }, [props.computedHasColSpan]);\n  var setScrolling = (0, _react.useCallback)(function (scrolling) {\n    var node = getDOMNode() || domRef.current;\n    var scrollingDir = scrollingDirection.current;\n\n    if (scrolling !== false) {\n      scrollingDirection.current = scrolling;\n    }\n\n    var oldScrollingInProgress = scrollingInProgress.current;\n    scrollingDirection.current = scrollingDir;\n    scrollingInProgress.current = scrolling ? true : false;\n\n    if (!node) {\n      return;\n    }\n\n    if (oldScrollingInProgress !== scrollingInProgress.current) {\n      var _className = \"\".concat(CLASS_NAME, \"--scrolling\");\n\n      if (scrollingInProgress.current) {\n        node.classList.add(_className);\n      } else {\n        node.classList.remove(_className);\n      }\n    }\n\n    return;\n  }, []);\n  var renderRowDetails = (0, _react.useCallback)(function (rowDetailsInfo) {\n    if (props.computedRenderRowDetails) {\n      return props.computedRenderRowDetails(rowDetailsInfo);\n    }\n\n    return 'Please specify `renderRowDetails`';\n  }, []);\n  var onContextMenu = (0, _react.useCallback)(function (event) {\n    var passedProps = props.passedProps,\n        onRowContextMenu = props.onRowContextMenu;\n\n    if (onRowContextMenu) {\n      onRowContextMenu(props, event);\n    }\n\n    if (passedProps && passedProps.onContextMenu) {\n      passedProps.onContextMenu(event, props);\n    }\n  }, [props.passedProps, props.passedProps.onContextMenu, props.onRowContextMenu]);\n  var setCellIndex = (0, _react.useCallback)(function (cell, index, cellProps) {\n    cellProps = cellProps || (props.computedHasColSpan ? getPropsForCells().slice(index, index + 1)[0] : getPropsForCells(index, index)[0]);\n    cell.setStateProps(cellProps);\n  }, [props.computedHasColSpan]);\n  var getCellIndex = (0, _react.useCallback)(function (cell) {\n    return cell.getProps().computedVisibleIndex;\n  }, []);\n  var sortCells = (0, _react.useCallback)(function (cells) {\n    return cells.sort(function (cell1, cell2) {\n      return getCellIndex(cell1) - getCellIndex(cell2);\n    });\n  }, []);\n  var getCellAt = (0, _react.useCallback)(function (index) {\n    return getCells().filter(function (c) {\n      return c.getProps().computedVisibleIndex === index;\n    })[0];\n  }, []);\n  var getCellById = (0, _react.useCallback)(function (id) {\n    return getCells().filter(function (c) {\n      return c.getProps().id === id;\n    })[0];\n  }, []);\n  var getSortedCells = (0, _react.useCallback)(function () {\n    return sortCells(getCells().slice());\n  }, []);\n  var getGaps = (0, _react.useCallback)(function (startIndex, endIndex) {\n    var visibleCellPositions = {};\n    var sortedCells = getSortedCells();\n    sortedCells.forEach(function (cell) {\n      var cellProps = cell.getProps();\n\n      if (cellProps.computedLocked) {\n        return;\n      }\n\n      var computedVisibleIndex = cellProps.computedVisibleIndex,\n          computedColspan = cellProps.computedColspan,\n          groupProps = cellProps.groupProps;\n\n      if (groupProps && computedVisibleIndex <= groupProps.depth + 1) {\n        return;\n      }\n\n      visibleCellPositions[computedVisibleIndex] = true;\n\n      if (computedColspan) {\n        for (var i = 0; i < computedColspan; i++) {\n          visibleCellPositions[computedVisibleIndex + i] = true;\n        }\n      }\n    });\n    var gaps = [];\n\n    for (; startIndex <= endIndex; startIndex++) {\n      if (!visibleCellPositions[startIndex]) {\n        gaps.push(startIndex);\n      }\n    }\n\n    return gaps;\n  }, []);\n  var getVirtualizeColumns = (0, _react.useCallback)(function () {\n    return props.virtualizeColumns;\n    return scrollingDirection.current !== 'horizontal' ? props.virtualizeColumns : false;\n  }, [props.virtualizeColumns]);\n  var toggleRowExpand = (0, _react.useCallback)(function (rowIndex) {\n    if (typeof rowIndex !== 'number') {\n      rowIndex = props.realIndex;\n    }\n\n    props.toggleRowExpand(rowIndex);\n  }, [props.realIndex, props.toggleRowExpand]);\n  var toggleNodeExpand = (0, _react.useCallback)(function (rowIndex) {\n    if (typeof rowIndex !== 'number') {\n      rowIndex = props.realIndex;\n    }\n\n    props.toggleNodeExpand(rowIndex);\n  }, [props.realIndex, props.toggleNodeExpand]);\n  var loadNodeAsync = (0, _react.useCallback)(function () {\n    var _props$loadNodeAsync;\n\n    (_props$loadNodeAsync = props.loadNodeAsync) === null || _props$loadNodeAsync === void 0 ? void 0 : _props$loadNodeAsync.call(props, props.data);\n  }, [props.loadNodeAsync, props.data]);\n  var isRowExpandable = (0, _react.useCallback)(function (rowIndex) {\n    if (typeof rowIndex !== 'number') {\n      rowIndex = props.realIndex;\n    }\n\n    return props.isRowExpandableAt(rowIndex);\n  }, [props.realIndex, props.isRowExpandableAt]);\n  var setRowExpanded = (0, _react.useCallback)(function (expanded, _) {\n    var rowIndex = props.realIndex;\n    var _expanded = expanded;\n\n    if (typeof expanded === 'number') {\n      rowIndex = expanded;\n      _expanded = _;\n    }\n\n    props.setRowExpanded(rowIndex, _expanded);\n  }, [props.realIndex, props.setRowExpanded]);\n\n  var getCurrentGaps = function getCurrentGaps() {};\n\n  var setColumnRenderStartIndex = (0, _react.useCallback)(function (columnStartIndex) {\n    if (columnRenderStartIndex.current === columnStartIndex) {\n      return;\n    }\n\n    columnRenderStartIndex.current = columnStartIndex;\n\n    if (getVirtualizeColumns() === false) {\n      return;\n    }\n\n    var newCellProps;\n    var renderRange;\n    var cellPropsAt;\n\n    if (props.computedHasColSpan) {\n      newCellProps = getPropsForCells();\n      renderRange = getColumnRenderRange(newCellProps);\n\n      cellPropsAt = function cellPropsAt(index) {\n        return newCellProps[index];\n      };\n    } else {\n      var _renderRange, _renderRange2;\n\n      renderRange = getColumnRenderRange();\n      newCellProps = getPropsForCells((_renderRange = renderRange) === null || _renderRange === void 0 ? void 0 : _renderRange.start, (((_renderRange2 = renderRange) === null || _renderRange2 === void 0 ? void 0 : _renderRange2.end) || 0) + 1);\n\n      cellPropsAt = function cellPropsAt(index) {\n        return newCellProps.filter(function (cellProps) {\n          return cellProps.computedVisibleIndex === index;\n        })[0];\n      };\n    }\n\n    if (!renderRange) {\n      return;\n    }\n\n    var _renderRange3 = renderRange,\n        start = _renderRange3.start,\n        end = _renderRange3.end;\n    var gaps = getGaps(start, end);\n\n    if (!gaps.length) {\n      return;\n    }\n\n    var gapsMap = gaps.reduce(function (acc, gapIndex) {\n      acc[gapIndex] = true;\n      return acc;\n    }, {});\n    var tempCellMap = {};\n    var calls = [];\n    getCells().forEach(function (cell) {\n      var cellProps = cell.getProps();\n      var groupProps = cellProps.groupProps,\n          cellIndex = cellProps.computedVisibleIndex,\n          computedColspan = cellProps.computedColspan,\n          computedLocked = cellProps.computedLocked;\n\n      if (computedLocked) {\n        return;\n      }\n\n      if (!props.groupColumn && groupProps && cellIndex <= groupProps.depth + 1) {\n        return;\n      }\n\n      var outside = cellIndex < start || cellIndex > end || cellIndex === undefined;\n\n      if (outside && computedColspan) {\n        var endCellIndex = cellIndex + (computedColspan - 1);\n        outside = cellIndex < start && endCellIndex < start || cellIndex > end;\n      }\n\n      var outOfView = outside || tempCellMap[cellIndex] || gapsMap[cellIndex];\n      tempCellMap[cellIndex] = true;\n      var newIndex;\n\n      if (outOfView && gaps.length) {\n        newIndex = gaps[gaps.length - 1];\n        calls.push([cell, newIndex]);\n        gaps.length -= 1;\n      }\n    });\n    calls.forEach(function (call) {\n      var cell = call[0];\n      var newIndex = call[1];\n      setCellIndex(cell, newIndex, cellPropsAt(newIndex));\n    });\n  }, [props.columnRenderStartIndex, props.computedHasColSpan, props.columnRenderCount, props.virtualizeColumns]);\n  var propsRef = (0, _react.useRef)(props);\n  propsRef.current = props;\n\n  var getPropsForCells = function getPropsForCells(startIndex, endIndex) {\n    var _columns$filter$;\n\n    var props = propsRef.current;\n    var initialColumns = props.columns;\n    var columns = initialColumns;\n    var hasLockedStart = props.hasLockedStart,\n        data = props.data,\n        onGroupToggle = props.onGroupToggle,\n        computedPivot = props.computedPivot,\n        rowHeight = props.rowHeight,\n        remoteRowIndex = props.remoteRowIndex,\n        initialRowHeight = props.initialRowHeight,\n        lastLockedStartIndex = props.lastLockedStartIndex,\n        lastLockedEndIndex = props.lastLockedEndIndex,\n        lastUnlockedIndex = props.lastUnlockedIndex,\n        minRowHeight = props.minRowHeight,\n        realIndex = props.realIndex,\n        showHorizontalCellBorders = props.showHorizontalCellBorders,\n        showVerticalCellBorders = props.showVerticalCellBorders,\n        empty = props.empty,\n        treeColumn = props.treeColumn,\n        groupColumn = props.groupColumn,\n        totalDataCount = props.totalDataCount,\n        depth = props.depth,\n        dataSourceArray = props.dataSourceArray,\n        computedGroupBy = props.computedGroupBy,\n        groupProps = props.groupProps,\n        summaryProps = props.summaryProps,\n        indexInGroup = props.indexInGroup,\n        firstUnlockedIndex = props.firstUnlockedIndex,\n        firstLockedEndIndex = props.firstLockedEndIndex,\n        selectAll = props.selectAll,\n        deselectAll = props.deselectAll,\n        columnUserSelect = props.columnUserSelect,\n        multiSelect = props.multiSelect,\n        selection = props.selection,\n        setRowSelected = props.setRowSelected,\n        computedRowExpandEnabled = props.computedRowExpandEnabled,\n        rtl = props.rtl,\n        lastRow = props.last,\n        computedCellSelection = props.computedCellSelection,\n        lastNonEmpty = props.lastNonEmpty,\n        maxVisibleRows = props.maxVisibleRows,\n        onCellClick = props.onCellClick,\n        editStartEvent = props.editStartEvent,\n        naturalRowHeight = props.naturalRowHeight,\n        renderNodeTool = props.renderNodeTool,\n        computedTreeEnabled = props.computedTreeEnabled,\n        rowExpanded = props.expanded,\n        expandGroupTitle = props.expandGroupTitle,\n        expandColumnFn = props.expandColumn,\n        onCellSelectionDraggerMouseDown = props.onCellSelectionDraggerMouseDown,\n        onCellMouseDown = props.onCellMouseDown,\n        onCellEnter = props.onCellEnter,\n        computedCellMultiSelectionEnabled = props.computedCellMultiSelectionEnabled,\n        getCellSelectionKey = props.getCellSelectionKey,\n        lastCellInRange = props.lastCellInRange,\n        computedRowspans = props.computedRowspans,\n        renderIndex = props.renderIndex,\n        nativeScroll = props.nativeScroll,\n        onDragRowMouseDown = props.onDragRowMouseDown,\n        theme = props.theme,\n        onContextMenu = props.onContextMenu,\n        setActiveIndex = props.setActiveIndex,\n        renderTreeCollapseTool = props.renderTreeCollapseTool,\n        renderTreeExpandTool = props.renderTreeExpandTool,\n        renderTreeLoadingTool = props.renderTreeLoadingTool,\n        onColumnMouseEnter = props.onColumnMouseEnter,\n        onColumnMouseLeave = props.onColumnMouseLeave,\n        columnIndexHovered = props.columnIndexHovered,\n        computedEnableColumnHover = props.computedEnableColumnHover,\n        columnHoverClassName = props.columnHoverClassName,\n        enableColumnAutosize = props.enableColumnAutosize,\n        renderRowDetailsExpandIcon = props.renderRowDetailsExpandIcon,\n        renderRowDetailsCollapsedIcon = props.renderRowDetailsCollapsedIcon;\n    var expandColumnId = expandColumnFn ? expandColumnFn({\n      data: data\n    }) : undefined;\n    var virtualizeColumns = getVirtualizeColumns();\n    var visibleColumnCount = columns.length;\n    var expandColumnIndex = expandColumnId ? (_columns$filter$ = columns.filter(function (c) {\n      return c.id === expandColumnId;\n    })[0]) === null || _columns$filter$ === void 0 ? void 0 : _columns$filter$.computedVisibleIndex : undefined;\n\n    if (startIndex !== undefined) {\n      columns = columns.slice(startIndex, endIndex ? endIndex + 1 : startIndex + 1);\n    }\n\n    startIndex = startIndex || 0;\n    var hasBorderTopVar = false;\n    var hasBorderBottomVar = false;\n    var hiddenCells = {};\n    var belongsToColspan = {};\n    var columnsTillColspanStart = {};\n    var lastInGroup = indexInGroup == props.groupCount - 1;\n    var activeCell = props.computedActiveCell && getCellSelectionKey ? getCellSelectionKey.apply(void 0, (0, _toConsumableArray2.default)(props.computedActiveCell)) : null;\n    var lastInRange = lastCellInRange || activeCell || null;\n    var maxRowspanVar = 1;\n    var cellPropsArray = columns.map(function (column, xindex) {\n      var theColumnIndex = xindex + startIndex;\n      var columnProps = column;\n      var name = columnProps.name,\n          computedVisibleIndex = columnProps.computedVisibleIndex;\n      var value = data ? data[name] : null;\n      var rowIndex = realIndex;\n\n      if (groupProps && data && data.groupColumnSummary) {\n        value = data.groupColumnSummary[name];\n      }\n\n      if (groupProps && data && column.groupColumn) {\n        value = data.value;\n      }\n\n      if (columnProps.pivotColumnPath) {\n        value = data.pivotSummary ? getValueForPivotColumn(data.pivotSummary, columnProps.pivotColumnPath) : value;\n      }\n\n      if (columnProps.pivotGrandSummaryColumn) {} else {\n        if (columnProps.pivotSummaryPath) {\n          value = data.pivotSummary ? getValueForPivotColumnSummary(data, {\n            pivotSummaryPath: columnProps.pivotSummaryPath,\n            pivotGrandSummaryColumn: columnProps.pivotGrandSummaryColumn\n          }) : value;\n        }\n      }\n\n      var defaults = {};\n\n      if (columnUserSelect !== undefined) {\n        defaults.userSelect = columnUserSelect;\n      }\n\n      var groupTitleCell = !groupColumn && groupProps && groupProps.depth + 1 == computedVisibleIndex;\n      var groupExpandCell = !groupColumn && groupProps && groupProps.depth == computedVisibleIndex;\n      var hidden = groupProps ? expandGroupTitle && !groupColumn ? computedVisibleIndex > groupProps.depth + 1 : false : false;\n\n      if (expandColumnIndex != null && computedVisibleIndex > expandColumnIndex) {\n        hidden = true;\n      }\n\n      var cellProps = _objectSpread(_objectSpread(_objectSpread({}, defaults), columnProps), {}, {\n        remoteRowIndex: remoteRowIndex,\n        indexInColumns: theColumnIndex,\n        depth: depth,\n        expandColumnIndex: expandColumnIndex,\n        expandColumn: expandColumnIndex === computedVisibleIndex,\n        editStartEvent: editStartEvent,\n        onCellClick: onCellClick,\n        computedRowspan: computedRowspans ? computedRowspans[column.id] : 1,\n        groupNestingSize: props.groupNestingSize,\n        treeNestingSize: props.treeNestingSize,\n        data: data,\n        naturalRowHeight: naturalRowHeight,\n        totalDataCount: totalDataCount,\n        onCellSelectionDraggerMouseDown: onCellSelectionDraggerMouseDown,\n        onCellMouseDown: onCellMouseDown,\n        onCellEnter: onCellEnter,\n        rtl: rtl,\n        computedPivot: computedPivot,\n        selectAll: selectAll,\n        deselectAll: deselectAll,\n        selection: selection,\n        renderNodeTool: renderNodeTool,\n        onDragRowMouseDown: onDragRowMouseDown,\n        multiSelect: multiSelect,\n        treeColumn: treeColumn !== undefined ? treeColumn === columnProps.id : false,\n        setRowSelected: setRowSelected,\n        setRowExpanded: computedRowExpandEnabled ? setRowExpanded : null,\n        toggleRowExpand: computedRowExpandEnabled ? toggleRowExpand : null,\n        toggleNodeExpand: computedTreeEnabled ? toggleNodeExpand : null,\n        loadNodeAsync: computedTreeEnabled ? loadNodeAsync : null,\n        rowActive: props.active,\n        rowSelected: props.selected,\n        rowExpanded: rowExpanded,\n        rowIndex: rowIndex,\n        rowHeight: rowHeight,\n        groupColumnVisible: !!groupColumn,\n        minRowHeight: minRowHeight,\n        groupProps: groupProps,\n        summaryProps: summaryProps,\n        empty: empty,\n        computedGroupBy: computedGroupBy,\n        nativeScroll: nativeScroll,\n        computedCellMultiSelectionEnabled: computedCellMultiSelectionEnabled,\n        lastRowInGroup: lastInGroup,\n        columnIndex: computedVisibleIndex,\n        first: computedVisibleIndex == 0,\n        last: computedVisibleIndex == visibleColumnCount - 1,\n        value: value,\n        virtualizeColumns: virtualizeColumns,\n        hasLockedStart: hasLockedStart,\n        rowIndexInGroup: indexInGroup,\n        rowRenderIndex: renderIndex,\n        hidden: hidden,\n        groupTitleCell: groupTitleCell,\n        groupExpandCell: groupExpandCell,\n        isRowExpandable: computedRowExpandEnabled ? isRowExpandable : null,\n        tryRowCellEdit: tryRowCellEdit,\n        tryNextRowEdit: tryNextRowEdit,\n        onGroupToggle: onGroupToggle,\n        initialRowHeight: rowExpanded ? initialRowHeight : rowHeight,\n        theme: theme,\n        onContextMenu: onContextMenu,\n        setActiveIndex: setActiveIndex,\n        renderTreeCollapseTool: renderTreeCollapseTool,\n        renderTreeExpandTool: renderTreeExpandTool,\n        renderTreeLoadingTool: renderTreeLoadingTool,\n        onColumnMouseEnter: onColumnMouseEnter,\n        onColumnMouseLeave: onColumnMouseLeave,\n        columnIndexHovered: columnIndexHovered,\n        computedEnableColumnHover: computedEnableColumnHover,\n        columnHoverClassName: columnHoverClassName,\n        renderRowDetailsExpandIcon: renderRowDetailsExpandIcon,\n        renderRowDetailsCollapsedIcon: renderRowDetailsCollapsedIcon\n      });\n\n      if (computedCellSelection && getCellSelectionKey) {\n        cellProps.cellSelected = computedCellSelection[getCellSelectionKey(rowIndex, computedVisibleIndex)];\n\n        if (cellProps.cellSelected) {\n          cellProps.hasRightSelectedSibling = cellProps.last ? false : computedCellSelection[getCellSelectionKey(rowIndex, computedVisibleIndex + 1)];\n          cellProps.hasLeftSelectedSibling = cellProps.first ? false : computedCellSelection[getCellSelectionKey(rowIndex, computedVisibleIndex - 1)];\n          cellProps.hasTopSelectedSibling = computedCellSelection[getCellSelectionKey(rowIndex - 1, computedVisibleIndex)];\n          cellProps.hasBottomSelectedSibling = computedCellSelection[getCellSelectionKey(rowIndex + 1, computedVisibleIndex)];\n        }\n      }\n\n      if (getCellSelectionKey && (activeCell || lastInRange)) {\n        var cellKey = getCellSelectionKey(rowIndex, computedVisibleIndex);\n\n        if (activeCell && activeCell === cellKey) {\n          cellProps.cellActive = true;\n        }\n\n        if (lastInRange && lastInRange === cellKey) {\n          cellProps.lastInRange = true;\n        }\n      }\n\n      if (cellProps.visibilityTransitionDuration || cellProps.showTransitionDuration || cellProps.hideTransitionDuration) {\n        cellProps.onTransitionEnd = onTransitionEnd(cellProps, columnProps);\n      }\n\n      if (props.editing && props.editColumnIndex === cellProps.columnIndex) {\n        cellProps.inEdit = true;\n        cellProps.editValue = props.editValue;\n      }\n\n      if (virtualizeColumns && !cellProps.computedLocked || enableColumnAutosize || props.editable || cellProps.computedEditable) {\n        cellProps.cellRef = cellRef.current;\n        cellProps.onUnmount = onCellUnmount;\n      }\n\n      var computedLocked = cellProps.computedLocked,\n          colspan = cellProps.colspan;\n      var lockedStart = computedLocked === 'start';\n      var lockedEnd = computedLocked === 'end';\n      var unlocked = !computedLocked;\n      var computedColspan = 1;\n\n      if (typeof colspan === 'function') {\n        computedColspan = cellProps.computedColspan = Math.max(1, colspan({\n          remoteRowIndex: remoteRowIndex,\n          dataSourceArray: dataSourceArray,\n          data: cellProps.data,\n          value: cellProps.value,\n          rowIndex: cellProps.rowIndex,\n          column: column,\n          columns: columns,\n          empty: empty\n        }));\n\n        if (lockedStart) {\n          computedColspan = (0, _clamp.default)(computedColspan, 1, Math.max(lastLockedStartIndex - computedVisibleIndex + 1, 1));\n        }\n\n        if (lockedEnd) {\n          computedColspan = (0, _clamp.default)(computedColspan, 1, Math.max(lastLockedEndIndex - computedVisibleIndex + 1, 1));\n        }\n\n        if (unlocked) {\n          computedColspan = (0, _clamp.default)(computedColspan, 1, Math.max(lastUnlockedIndex - computedVisibleIndex + 1, 1));\n        }\n\n        if (computedColspan > 1) {\n          cellProps.computedWidth = columns.slice(theColumnIndex, theColumnIndex + computedColspan).reduce(function (sum, col) {\n            if (col.id !== column.id) {\n              hiddenCells[col.id] = true;\n\n              if (column.computedLocked === col.computedLocked) {\n                belongsToColspan[col.id] = column.id;\n                columnsTillColspanStart[col.id] = col.computedVisibleIndex - column.computedVisibleIndex;\n              }\n            }\n\n            return sum + col.computedWidth;\n          }, 0);\n        }\n      }\n\n      cellProps.lastInSection = lockedStart ? computedVisibleIndex + computedColspan - 1 === firstUnlockedIndex - 1 : lockedEnd ? computedVisibleIndex + computedColspan - 1 === visibleColumnCount - 1 : computedVisibleIndex + computedColspan - 1 === firstLockedEndIndex - 1;\n      cellProps.firstInSection = lockedStart ? computedVisibleIndex === 0 : lockedEnd ? computedVisibleIndex === firstLockedEndIndex : computedVisibleIndex === firstUnlockedIndex;\n\n      if (computedGroupBy && !groupColumn && !!cellProps.depth) {\n        cellProps.noBackground = computedVisibleIndex < cellProps.depth;\n      }\n\n      if (hiddenCells[column.id]) {\n        cellProps.hidden = true;\n      }\n\n      if (belongsToColspan[column.id]) {\n        cellProps.computedColspanedBy = belongsToColspan[column.id];\n        cellProps.computedColspanToStart = columnsTillColspanStart[column.id];\n      }\n\n      if (groupProps && !groupColumn || expandColumnIndex != null) {\n        (0, _adjustCellProps.default)(cellProps, props);\n      }\n\n      if (cellProps.hidden) {\n        cellProps.last = false;\n        cellProps.lastInSection = false;\n      } else {\n        cellProps.showBorderLeft = showVerticalCellBorders && computedVisibleIndex > 0;\n        cellProps.showBorderBottom = showHorizontalCellBorders;\n\n        if (!showVerticalCellBorders && computedGroupBy) {\n          cellProps.showBorderLeft = computedVisibleIndex > 0 && computedVisibleIndex <= computedGroupBy.length;\n        }\n\n        if (computedGroupBy) {\n          if (!cellProps.groupProps) {\n            cellProps.showBorderBottom = groupColumn ? showHorizontalCellBorders : computedVisibleIndex >= computedGroupBy.length && showHorizontalCellBorders;\n            var summaryBefore = indexInGroup === 0 && !groupColumn ? dataSourceArray[rowIndex - indexInGroup] : null;\n\n            if (summaryBefore && summaryBefore.__summary && computedVisibleIndex >= computedGroupBy.length) {\n              cellProps.showBorderBottom = false;\n            }\n          }\n\n          if (!empty) {\n            if (!groupColumn && (computedVisibleIndex < computedGroupBy.length || lastInGroup)) {\n              cellProps.showBorderBottom = rowExpanded;\n            }\n\n            if (cellProps.groupProps) {\n              cellProps.showBorderBottom = cellProps.groupProps.collapsed ? !!groupColumn : groupColumn ? true : computedVisibleIndex > cellProps.groupProps.depth && cellProps.groupProps.depth >= computedGroupBy.length;\n              cellProps.showBorderTop = groupTitleCell || groupExpandCell || !expandGroupTitle && !groupColumn;\n            } else if (indexInGroup === 0 && !groupColumn) {\n              cellProps.showBorderTop = computedVisibleIndex >= computedGroupBy.length;\n            }\n\n            if (lastNonEmpty && !lastRow && showHorizontalCellBorders) {\n              cellProps.showBorderBottom = computedVisibleIndex >= (cellProps.groupProps ? cellProps.groupProps.depth : computedGroupBy.length);\n            }\n          } else if (rowIndex > 0 && showHorizontalCellBorders) {\n            if (rowIndex === totalDataCount) {\n              cellProps.showBorderBottom = computedVisibleIndex >= computedGroupBy.length;\n            } else {\n              cellProps.showBorderBottom = computedGroupBy ? computedVisibleIndex >= computedGroupBy.length : true;\n            }\n          }\n        }\n\n        if (lastRow) {\n          cellProps.showBorderBottom = rowIndex < maxVisibleRows - 1 || rowExpanded;\n        }\n\n        if (lockedStart && cellProps.lastInSection) {\n          cellProps.showBorderRight = true;\n        }\n\n        if (lockedEnd && computedVisibleIndex === firstLockedEndIndex) {\n          cellProps.showBorderLeft = true;\n        }\n\n        if (cellProps.groupProps && computedVisibleIndex >= cellProps.groupProps.depth + 1 && !groupColumn && props.expandGroupTitle) {\n          cellProps.showBorderLeft = false;\n        }\n\n        if (cellProps.summaryProps) {\n          cellProps.showBorderBottom = lastRow;\n          cellProps.showBorderTop = computedVisibleIndex > cellProps.summaryProps.depth;\n\n          if (cellProps.summaryProps.position == 'start') {\n            cellProps.showBorderTop = computedVisibleIndex >= cellProps.summaryProps.depth;\n            cellProps.showBorderBottom = false;\n          }\n\n          cellProps.showBorderLeft = showVerticalCellBorders ? true : computedVisibleIndex <= cellProps.summaryProps.depth;\n\n          if (computedVisibleIndex > cellProps.summaryProps.depth && computedVisibleIndex <= computedGroupBy.length && !groupColumn) {\n            cellProps.showBorderLeft = false;\n          }\n\n          if (computedVisibleIndex === 0) {\n            cellProps.showBorderLeft = false;\n          }\n\n          cellProps.noBackground = !groupColumn;\n        }\n\n        if (firstUnlockedIndex === computedVisibleIndex && hasLockedStart) {\n          cellProps.showBorderLeft = false;\n        }\n\n        if (cellProps.groupSpacerColumn && rowExpanded) {\n          cellProps.showBorderBottom = false;\n        }\n\n        if (cellProps.last) {\n          cellProps.showBorderRight = true;\n        }\n\n        var prevColumn = columns[theColumnIndex - 1];\n        var nextColumn = columns[theColumnIndex + 1];\n\n        if (nextColumn && nextColumn.prevBorderRight !== undefined && !(lockedStart && cellProps.lastInSection)) {\n          cellProps.showBorderRight = nextColumn.prevBorderRight;\n        }\n\n        if (prevColumn && prevColumn.nextBorderLeft !== undefined) {\n          cellProps.showBorderLeft = prevColumn.nextBorderLeft;\n        }\n\n        if (columnProps.showBorderRight !== undefined) {\n          cellProps.showBorderRight = columnProps.showBorderRight;\n        }\n\n        if (columnProps.showBorderLeft !== undefined) {\n          cellProps.showBorderLeft = columnProps.showBorderLeft;\n        }\n      }\n\n      if (cellProps.computedEditable) {\n        cellProps.onEditStopForRow = onCellStopEdit;\n        cellProps.onEditStartForRow = onCellStartEdit;\n        cellProps.onEditCancelForRow = onCellEditCancel;\n        cellProps.onEditValueChangeForRow = onCellEditValueChange;\n        cellProps.onEditCompleteForRow = onCellEditComplete;\n      }\n\n      hasBorderBottomVar = hasBorderBottomVar || cellProps.showBorderBottom;\n      hasBorderTopVar = hasBorderTopVar || cellProps.showBorderTop;\n      return cellProps;\n    });\n    maxRowspan.current = maxRowspanVar;\n\n    if (props.computedEnableRowspan) {\n      props.setRowSpan && props.setRowSpan(maxRowspan.current);\n    }\n\n    hasBorderTop.current = hasBorderTopVar;\n    hasBorderBottom.current = hasBorderBottomVar;\n    return cellPropsArray;\n  };\n\n  var onCellStopEdit = (0, _react.useCallback)(function (value, cellProps) {\n    if (props.onEditStop) {\n      props.onEditStop({\n        value: value,\n        data: cellProps.data,\n        rowId: props.getItemId(cellProps.data),\n        columnId: cellProps.id,\n        columnIndex: cellProps.computedVisibleIndex,\n        rowIndex: cellProps.rowIndex,\n        cellProps: cellProps\n      });\n    }\n  }, [props.onEditStop]);\n  var onCellStartEdit = (0, _react.useCallback)(function (value, cellProps) {\n    if (props.onEditStart) {\n      props.onEditStart({\n        data: cellProps.data,\n        value: value,\n        rowId: props.getItemId(cellProps.data),\n        columnId: cellProps.id,\n        columnIndex: cellProps.computedVisibleIndex,\n        rowIndex: cellProps.rowIndex,\n        cellProps: cellProps\n      });\n    }\n  }, [props.onEditStart]);\n  var onCellEditCancel = (0, _react.useCallback)(function (cellProps) {\n    if (props.onEditCancel) {\n      props.onEditCancel({\n        data: cellProps.data,\n        rowId: props.getItemId(cellProps.data),\n        columnIndex: cellProps.computedVisibleIndex,\n        columnId: cellProps.id,\n        rowIndex: cellProps.rowIndex,\n        cellProps: cellProps\n      });\n    }\n  }, [props.onEditCancel]);\n  var onCellEditValueChange = (0, _react.useCallback)(function (value, cellProps) {\n    if (props.onEditValueChange) {\n      props.onEditValueChange({\n        value: value,\n        data: cellProps.data,\n        rowId: props.getItemId(cellProps.data),\n        columnId: cellProps.id,\n        columnIndex: cellProps.computedVisibleIndex,\n        rowIndex: cellProps.rowIndex,\n        cellProps: cellProps\n      });\n    }\n  }, [props.onEditValueChange]);\n  var onCellEditComplete = (0, _react.useCallback)(function (value, cellProps) {\n    if (props.onEditComplete) {\n      props.onEditComplete({\n        value: value,\n        data: cellProps.data,\n        rowId: props.getItemId(cellProps.data),\n        columnId: cellProps.id,\n        columnIndex: cellProps.computedVisibleIndex,\n        rowIndex: cellProps.rowIndex,\n        cellProps: cellProps\n      });\n    }\n  }, [props.onEditComplete]);\n  var tryRowCellEdit = (0, _react.useCallback)(function (editIndex) {\n    var dir = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    var isEnterNavigation = arguments.length > 2 ? arguments[2] : undefined;\n    var cols = props.columns;\n    var col;\n    var colIndex;\n\n    if (!dir) {\n      dir = 1;\n    }\n\n    dir = dir == 1 ? 1 : -1;\n    var currentIndex = dir == 1 ? 0 : cols.length - 1;\n    var foundCols = [];\n\n    while (cols[currentIndex]) {\n      col = cols[currentIndex];\n\n      if (col.editable || props.editable && col.editable !== false) {\n        colIndex = col.computedVisibleIndex;\n\n        if (colIndex == editIndex) {\n          foundCols.push(col);\n        } else {\n          if (dir < 0) {\n            if (colIndex < editIndex) {\n              foundCols.push(col);\n            }\n          } else if (dir > 0) {\n            if (colIndex > editIndex) {\n              foundCols.push(col);\n            }\n          }\n        }\n      }\n\n      currentIndex += dir;\n    }\n\n    if (!foundCols.length) {\n      tryNextRowEdit(dir, isEnterNavigation ? editIndex : dir > 0 ? 0 : props.columns.length - 1);\n      return Promise.reject(null);\n    }\n\n    foundCols.sort(function (a, b) {\n      return dir > 0 ? a - b : b - a;\n    });\n    return new Promise(function (resolve, reject) {\n      var startEdit = function startEdit(cols) {\n        var index = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n        props.currentEditCompletePromise.current.then(function () {\n          var errBack = function errBack() {\n            isEnterNavigation ? tryNextRowEdit(dir, editIndex, true) : startEdit(cols, index + 1);\n          };\n\n          var col = cols[index];\n\n          if (!col) {\n            tryNextRowEdit(dir, isEnterNavigation ? editIndex : dir > 0 ? 0 : props.columns.length - 1);\n            return reject('column not found');\n          }\n\n          var cell = getCellById(col.id);\n\n          if (!cell) {\n            if (props.scrollToColumn) {\n              props.scrollToColumn(col.id, undefined, function () {\n                setTimeout(function () {\n                  startEdit(cols, index);\n                }, 20);\n              });\n            }\n\n            return;\n          }\n\n          setTimeout(function () {\n            return cell.startEdit(undefined, errBack).then(resolve).catch(errBack);\n          }, 0);\n        }).catch(function (error) {\n          return reject(error);\n        });\n        return;\n      };\n\n      startEdit(foundCols, 0);\n    });\n  }, [props.columns, props.editable, props.currentEditCompletePromise, props.rowIndex, props.scrollToColumn]);\n  var tryNextRowEdit = (0, _react.useCallback)(function (dir, columnIndex, isEnterNavigation) {\n    if (props.scrollToIndexIfNeeded) {\n      props.scrollToIndexIfNeeded(props.rowIndex + 2 * dir, {\n        direction: dir == -1 ? 'top' : 'bottom'\n      }, function () {\n        if (props.tryNextRowEdit) {\n          props.tryNextRowEdit(props.rowIndex + dir, dir, columnIndex, isEnterNavigation);\n        }\n      });\n    }\n  }, [props.rowIndex, props.scrollToIndexIfNeeded, props.tryNextRowEdit]);\n  var onTransitionEnd = (0, _react.useCallback)(function (cellProps, columnProps, e) {\n    e.stopPropagation();\n\n    if (columnProps.onTransitionEnd) {\n      columnProps.onTransitionEnd(e);\n    }\n\n    if (props.onTransitionEnd) {\n      props.onTransitionEnd(e, cellProps);\n    }\n  }, [props.onTransitionEnd]);\n  var getColumnRenderRange = (0, _react.useCallback)(function (cellProps) {\n    var virtualizeColumns = getVirtualizeColumns();\n\n    if (!virtualizeColumns) {\n      return null;\n    }\n\n    var minStartIndex = props.lockedStartColumns.length ? props.lockedStartColumns.length : props.groupProps && !props.groupColumn ? props.groupProps.depth + 2 : 0;\n    var maxEndIndex = props.columns.length - props.lockedEndColumns.length - 1;\n    var columnStartIndex = columnRenderStartIndex.current == null ? props.columnRenderStartIndex || 0 : columnRenderStartIndex.current;\n    columnStartIndex = Math.max(columnStartIndex, minStartIndex);\n\n    var fixStartIndexForColspan = function fixStartIndexForColspan() {\n      if (cellProps) {\n        while (cellProps[columnStartIndex].computedColspanedBy) {\n          columnStartIndex--;\n        }\n      }\n    };\n\n    if (props.columnRenderCount != null) {\n      var columnRenderEndIndex = columnStartIndex + props.columnRenderCount;\n      columnRenderEndIndex = Math.min(columnRenderEndIndex, maxEndIndex);\n\n      if (columnRenderEndIndex - props.columnRenderCount != columnStartIndex) {\n        columnStartIndex = Math.max(columnRenderEndIndex - props.columnRenderCount, minStartIndex);\n      }\n\n      if (columnRenderEndIndex < 0) {\n        return {\n          start: 0,\n          end: 0\n        };\n      }\n\n      fixStartIndexForColspan();\n      return {\n        start: columnStartIndex,\n        end: columnRenderEndIndex\n      };\n    }\n\n    return null;\n  }, [props.virtualizeColumns, props.columnRenderCount, props.lockedStartColumns, props.lockedEndColumns, props.groupColumn, props.groupProps, props.columnRenderStartIndex, props.columns]);\n  var expandRangeWithColspan = (0, _react.useCallback)(function (range, cellProps) {\n    var extraNeededColumns = cellProps.reduce(function (total, cellProps) {\n      return total + (cellProps.computedColspan > 1 ? cellProps.computedColspan - 1 : 0);\n    }, 0);\n\n    if (!extraNeededColumns) {\n      return range;\n    }\n\n    if (range.start < props.firstUnlockedIndex) {\n      range.start = props.firstUnlockedIndex;\n    }\n\n    if (range.start > extraNeededColumns) {\n      range.start -= extraNeededColumns;\n      return range;\n    }\n\n    extraNeededColumns -= range.start;\n    range.start = 0;\n\n    if (extraNeededColumns) {\n      range.end += extraNeededColumns;\n    }\n\n    return range;\n  }, []);\n\n  var renderRowInstance = function renderRowInstance(_, __, style) {\n    var scrollLeft = props.scrollLeft,\n        hasLockedStart = props.hasLockedStart,\n        hasLockedEnd = props.hasLockedEnd,\n        lockedStartColumns = props.lockedStartColumns,\n        lockedEndColumns = props.lockedEndColumns,\n        computedHasColSpan = props.computedHasColSpan,\n        groupProps = props.groupProps,\n        columns = props.columns;\n    var virtualizeColumns = getVirtualizeColumns();\n    var cellProps;\n\n    if (!virtualizeColumns) {\n      cellProps = getPropsForCells();\n    } else {\n      var lockedStartCellProps = [];\n      var lockedEndCellProps = [];\n      var groupCellProps = [];\n      var renderRange;\n\n      if (computedHasColSpan) {\n        cellProps = getPropsForCells();\n\n        if (hasLockedStart) {\n          lockedStartCellProps = cellProps.slice(0, lockedStartColumns.length);\n        } else if (groupProps) {\n          groupCellProps = cellProps.slice(0, groupProps.depth + 2);\n        }\n\n        if (hasLockedEnd) {\n          lockedEndCellProps = cellProps.slice(columns.length - lockedEndColumns.length, columns.length);\n        }\n\n        renderRange = getColumnRenderRange(cellProps);\n\n        if (renderRange) {\n          renderRange = expandRangeWithColspan(renderRange, cellProps);\n          cellProps = cellProps.slice(renderRange.start, renderRange.end + 1);\n        }\n      } else {\n        var _renderRange4, _renderRange5;\n\n        renderRange = getColumnRenderRange();\n        cellProps = getPropsForCells((_renderRange4 = renderRange) === null || _renderRange4 === void 0 ? void 0 : _renderRange4.start, ((_renderRange5 = renderRange) === null || _renderRange5 === void 0 ? void 0 : _renderRange5.end) || 0);\n\n        if (hasLockedStart) {\n          lockedStartCellProps = getPropsForCells(0, lockedStartColumns.length - 1);\n        } else if (groupProps) {\n          groupCellProps = getPropsForCells(0, groupProps.depth + 2 - 1);\n        }\n\n        if (hasLockedEnd) {\n          lockedEndCellProps = getPropsForCells(lockedEndColumns[0].computedVisibleIndex, columns.length - 1);\n        }\n      }\n\n      if (hasLockedStart) {\n        cellProps = [].concat((0, _toConsumableArray2.default)(lockedStartCellProps), (0, _toConsumableArray2.default)(cellProps));\n      } else if (groupProps) {\n        cellProps = [].concat((0, _toConsumableArray2.default)(groupCellProps), (0, _toConsumableArray2.default)(cellProps));\n      }\n\n      if (hasLockedEnd) {\n        var _cellProps2;\n\n        (_cellProps2 = cellProps).push.apply(_cellProps2, (0, _toConsumableArray2.default)(lockedEndCellProps));\n      }\n    }\n\n    var result = cellProps.map(function (cProps, index) {\n      var cell;\n      var key = index;\n\n      if (!virtualizeColumns) {\n        key = cProps.id || index;\n      }\n\n      if (props.cellFactory) {\n        cell = props.cellFactory(cProps);\n      }\n\n      if (cell === undefined) {\n        cell = _react.default.createElement(_Cell.default, _objectSpread(_objectSpread({}, cProps), {}, {\n          ref: cProps.cellRef ? cProps.cellRef : null,\n          key: key\n        }));\n      }\n\n      return cell;\n    });\n    return (0, _renderCellsMaybeLocked.default)(result, props, scrollLeft, undefined, style);\n  };\n\n  var onClick = (0, _react.useCallback)(function (event) {\n    if (props.computedTreeEnabled && props.expandOnMouseDown) {\n      toggleNodeExpand(props.rowIndex);\n    }\n\n    if (props.onClick) {\n      props.onClick(event, props);\n    }\n\n    if (props.passedProps && props.passedProps.onClick) {\n      props.passedProps.onClick(event, props);\n    }\n  }, [props.passedProps, props.computedTreeEnabled, props.rowIndex, props.expandOnMouseDown, props.onClick]);\n  var onMouseDown = (0, _react.useCallback)(function (event) {\n    if (props.onMouseDown) {\n      props.onMouseDown(event, props);\n    }\n  }, [props.onMouseDown]);\n  (0, _react.useImperativeHandle)(ref, function () {\n    return {\n      onCellUnmount: onCellUnmount,\n      cleanupCells: cleanupCells,\n      getDOMNode: getDOMNode,\n      orderCells: orderCells,\n      updateEditCell: updateEditCell,\n      fixForColspan: fixForColspan,\n      setScrolling: setScrolling,\n      renderRowDetails: renderRowDetails,\n      onContextMenu: onContextMenu,\n      setCellIndex: setCellIndex,\n      getCellIndex: getCellIndex,\n      sortCells: sortCells,\n      getCellAt: getCellAt,\n      getCellById: getCellById,\n      getCells: getCells,\n      getSortedCells: getSortedCells,\n      getGaps: getGaps,\n      getVirtualizeColumns: getVirtualizeColumns,\n      toggleRowExpand: toggleRowExpand,\n      toggleNodeExpand: toggleNodeExpand,\n      loadNodeAsync: loadNodeAsync,\n      isRowExpandable: isRowExpandable,\n      setRowExpanded: setRowExpanded,\n      setColumnRenderStartIndex: setColumnRenderStartIndex,\n      getPropsForCells: getPropsForCells,\n      onCellStopEdit: onCellStopEdit,\n      onCellStartEdit: onCellStartEdit,\n      onCellEditCancel: onCellEditCancel,\n      onCellEditValueChange: onCellEditValueChange,\n      onCellEditComplete: onCellEditComplete,\n      tryRowCellEdit: tryRowCellEdit,\n      tryNextRowEdit: tryNextRowEdit,\n      onTransitionEnd: onTransitionEnd,\n      getColumnRenderRange: getColumnRenderRange,\n      expandRangeWithColspan: expandRangeWithColspan,\n      renderRow: renderRow,\n      onClick: onClick,\n      onMouseDown: onMouseDown,\n      getCurrentGaps: getCurrentGaps,\n      rowProps: rowProps,\n      domRef: domRef,\n      props: props\n    };\n  });\n  var rowHeight = props.rowHeight,\n      initialRowHeight = props.initialRowHeight,\n      maxRowHeight = props.maxRowHeight,\n      groupNestingSize = props.groupNestingSize,\n      summaryProps = props.summaryProps,\n      data = props.data,\n      id = props.id,\n      columns = props.columns,\n      minWidth = props.minWidth,\n      maxWidth = props.maxWidth,\n      rowStyle = props.rowStyle,\n      scrollbars = props.scrollbars,\n      renderRow = props.renderRow,\n      computedRowExpandEnabled = props.computedRowExpandEnabled,\n      even = props.even,\n      odd = props.odd,\n      active = props.active,\n      selected = props.selected,\n      expanded = props.expanded,\n      passedProps = props.passedProps,\n      realIndex = props.realIndex,\n      remoteRowIndex = props.remoteRowIndex,\n      nativeScroll = props.nativeScroll,\n      indexInGroup = props.indexInGroup,\n      naturalRowHeight = props.naturalRowHeight,\n      rowDetailsStyle = props.rowDetailsStyle,\n      renderDetailsGrid = props.renderDetailsGrid,\n      last = props.last,\n      empty = props.empty,\n      computedPivot = props.computedPivot,\n      computedShowZebraRows = props.computedShowZebraRows,\n      rowDetailsWidth = props.rowDetailsWidth,\n      availableWidth = props.availableWidth,\n      groupProps = props.groupProps,\n      groupColumn = props.groupColumn,\n      dataSourceArray = props.dataSourceArray,\n      onRenderRow = props.onRenderRow,\n      shouldRenderCollapsedRowDetails = props.shouldRenderCollapsedRowDetails,\n      editing = props.editing,\n      rtl = props.rtl,\n      sticky = props.sticky,\n      hasLockedEnd = props.hasLockedEnd,\n      hasLockedStart = props.hasLockedStart,\n      showHorizontalCellBorders = props.showHorizontalCellBorders;\n  var rowClassName = props.rowClassName;\n  var virtualizeColumns = getVirtualizeColumns();\n  var lastInGroup = indexInGroup == props.groupCount - 1;\n  var hasRowSpan = props.computedRowspans && Object.keys(props.computedRowspans).map(function (name) {\n    var rowspan = props.computedRowspans[name];\n    return rowspan > 1;\n  }).find(function (rowSpan) {\n    return rowSpan === true;\n  });\n  var className = (0, _join.default)(props.className, CLASS_NAME, scrollingInProgress.current && \"\".concat(CLASS_NAME, \"--scrolling\"), empty && \"\".concat(CLASS_NAME, \"--empty\"), editing && \"\".concat(CLASS_NAME, \"--editing\"), \"\".concat(CLASS_NAME, \"--direction-\").concat(rtl ? 'rtl' : 'ltr'), computedShowZebraRows && even && (!groupProps || computedPivot) && \"\".concat(CLASS_NAME, \"--even\"), computedShowZebraRows && odd && (!groupProps || computedPivot) && \"\".concat(CLASS_NAME, \"--odd\"), !computedShowZebraRows && !groupProps && \"\".concat(CLASS_NAME, \"--no-zebra\"), groupProps && \"\".concat(CLASS_NAME, \"--group-row\"), summaryProps && \"\".concat(CLASS_NAME, \"--summary-row\"), summaryProps && \"\".concat(CLASS_NAME, \"--summary-position-\").concat(summaryProps.position), groupProps && groupProps.collapsed && \"\".concat(CLASS_NAME, \"--collapsed\"), selected && \"\".concat(CLASS_NAME, \"--selected\"), expanded && \"\".concat(CLASS_NAME, \"--expanded\"), hasLockedStart ? \"\".concat(CLASS_NAME, \"--has-locked-start\") : \"\".concat(CLASS_NAME, \"--no-locked-start\"), hasLockedEnd ? \"\".concat(CLASS_NAME, \"--has-locked-end\") : \"\".concat(CLASS_NAME, \"--no-locked-end\"), showHorizontalCellBorders && \"\".concat(CLASS_NAME, \"--show-horizontal-borders\"), active && \"\".concat(CLASS_NAME, \"--active\"), virtualizeColumns && \"\".concat(CLASS_NAME, \"--virtualize-columns\"), rowHeight && \"\".concat(CLASS_NAME, \"--rowheight\"), naturalRowHeight && \"\".concat(CLASS_NAME, \"--natural-rowheight\"), realIndex == 0 && \"\".concat(CLASS_NAME, \"--first\"), last && \"\".concat(CLASS_NAME, \"--last\"), indexInGroup == 0 && \"\".concat(CLASS_NAME, \"--first-in-group\"), lastInGroup && \"\".concat(CLASS_NAME, \"--last-in-group\"), hasRowSpan ? \"\".concat(CLASS_NAME, \"--has-rowspan\") : '');\n\n  if (passedProps) {\n    className = (0, _join.default)(className, selected && passedProps.selectedClassName);\n  }\n\n  var style = _objectSpread(_objectSpread({}, props.style), {}, {\n    height: naturalRowHeight ? null : rowHeight,\n    width: props.width,\n    minWidth: minWidth,\n    direction: 'ltr'\n  });\n\n  if (maxWidth != null) {\n    style.maxWidth = maxWidth;\n  }\n\n  if (maxRowHeight != null) {\n    style.maxHeight = maxRowHeight;\n  }\n\n  if (rowStyle) {\n    if (typeof rowStyle === 'function') {\n      var rowStyleResult = rowStyle({\n        data: data,\n        props: props,\n        style: style\n      });\n\n      if (rowStyleResult !== undefined) {\n        style = _objectSpread(_objectSpread({}, style), rowStyleResult);\n      }\n    } else {\n      style = _objectSpread(_objectSpread({}, style), rowStyle);\n    }\n  }\n\n  if (rowClassName) {\n    if (typeof rowClassName === 'function') {\n      rowClassName = rowClassName({\n        data: data,\n        props: props,\n        className: className\n      });\n    }\n\n    if (rowClassName && typeof rowClassName == 'string') {\n      className = (0, _join.default)(className, rowClassName);\n    }\n  }\n\n  var rowProps = _objectSpread(_objectSpread(_objectSpread({}, props), {}, {\n    className: className,\n    style: style,\n    ref: domRef\n  }, passedProps), {}, {\n    onClick: onClick,\n    onContextMenu: onContextMenu\n  });\n\n  rowProps.children = [_react.default.createElement(\"div\", {\n    key: \"cellWrap\",\n    className: \"InovuaReactDataGrid__row-cell-wrap InovuaReactDataGrid__row-hover-target\",\n    style: {\n      width: props.width,\n      height: naturalRowHeight ? null : rowHeight,\n      position: 'absolute',\n      top: 0,\n      left: rtl ? -(props.emptyScrollOffset || 0) : 0\n    }\n  }, renderRowInstance(data, columns, style))];\n  var groupDepth = groupColumn ? 0 : data && data.__group ? data.depth - 1 : data && data.__summary ? rowProps.summaryProps.depth : props.depth || 0;\n  var activeBordersDiv = sticky ? _react.default.createElement(\"div\", {\n    key: \"active-row-borders\",\n    className: (0, _join.default)(\"\".concat(CLASS_NAME, \"-active-borders\"), hasBorderTop.current && \"\".concat(CLASS_NAME, \"-active-borders--has-border-top\"), hasBorderBottom.current && \"\".concat(CLASS_NAME, \"-actived-borders--has-border-bottom\"))\n  }) : null;\n  var shouldRender = expanded || shouldRenderCollapsedRowDetails;\n\n  if (computedRowExpandEnabled && shouldRender && !data.__group) {\n    var rowDetailsInfo = {\n      data: data,\n      rtl: rtl,\n      isRowExpandable: isRowExpandable,\n      rowIndex: realIndex,\n      remoteRowIndex: remoteRowIndex,\n      rowId: props.getItemId(data),\n      rowExpanded: expanded,\n      id: id,\n      rowSelected: selected,\n      rowActive: active,\n      toggleRowExpand: toggleRowExpand,\n      setRowExpanded: setRowExpanded,\n      dataSource: dataSourceArray\n    };\n    var detailsStyle = {\n      position: 'absolute',\n      height: rowHeight - initialRowHeight,\n      overflow: renderDetailsGrid ? 'visible' : 'auto',\n      top: initialRowHeight\n    };\n\n    if (rtl) {\n      detailsStyle.direction = 'rtl';\n    }\n\n    if (rowDetailsWidth == 'max-viewport-width') {\n      detailsStyle.width = Math.min(availableWidth, props.width || maxWidth);\n    }\n\n    if (rowDetailsWidth === 'min-viewport-width') {\n      detailsStyle.width = Math.max(availableWidth, props.width || maxWidth);\n    }\n\n    if (rowDetailsWidth === 'viewport-width') {\n      detailsStyle.width = availableWidth;\n    }\n\n    if (groupDepth) {\n      detailsStyle[rtl ? 'paddingRight' : 'paddingLeft'] = (groupNestingSize || 0) * groupDepth;\n    }\n\n    detailsStyle[rtl ? 'right' : 'left'] = 0;\n\n    if (isNaN(detailsStyle.width)) {\n      delete detailsStyle.width;\n    }\n\n    if (!expanded) {\n      detailsStyle.display = 'none';\n    }\n\n    if (rowDetailsStyle) {\n      if (typeof rowDetailsStyle === 'function') {\n        var styleResult = rowDetailsStyle(detailsStyle, rowDetailsInfo);\n\n        if (styleResult !== undefined) {\n          detailsStyle = styleResult;\n        }\n      } else {\n        detailsStyle = _objectSpread(_objectSpread({}, detailsStyle), rowDetailsStyle);\n      }\n    }\n\n    var showBorderBottom = !lastInGroup || last;\n\n    if (nativeScroll && last && expanded) {\n      showBorderBottom = false;\n    }\n\n    rowProps.children.push(_react.default.createElement(\"div\", {\n      key: \"rowDetails\",\n      style: detailsStyle,\n      onClick: skipSelect,\n      className: (0, _join.default)(\"\".concat(CLASS_NAME, \"-details\"), \"\".concat(CLASS_NAME, \"-details--\").concat(rowDetailsWidth), renderDetailsGrid ? \"\".concat(CLASS_NAME, \"-details--details-grid\") : null, !nativeScroll || nativeScroll && scrollbars && !scrollbars.vertical || availableWidth > minWidth ? \"\".concat(CLASS_NAME, \"-details--show-border-right\") : null, showBorderBottom ? \"\".concat(CLASS_NAME, \"-details--show-border-bottom\") : '')\n    }, renderRowDetails(rowDetailsInfo)), _react.default.createElement(\"div\", {\n      className: \"\".concat(CLASS_NAME, \"-details-special-bottom-border\"),\n      key: \"row-details-special-bottom-border\",\n      style: (0, _defineProperty2.default)({}, rtl ? 'right' : 'left', (groupDepth || 0) * groupNestingSize)\n    }), groupDepth ? (0, _toConsumableArray2.default)(new Array(groupDepth)).map(function (_, index) {\n      var _style2;\n\n      return _react.default.createElement(\"div\", {\n        key: index,\n        className: \"\".concat(CLASS_NAME, \"-details-border\"),\n        style: (_style2 = {\n          height: '100%',\n          position: 'absolute'\n        }, (0, _defineProperty2.default)(_style2, rtl ? 'right' : 'left', (index + 1) * groupNestingSize), (0, _defineProperty2.default)(_style2, \"top\", 0), _style2)\n      });\n    }) : null, rowDetailsWidth != 'max-viewport-width' ? _react.default.createElement(\"div\", {\n      key: \"rowDetailsBorder\",\n      style: (0, _defineProperty2.default)({\n        top: initialRowHeight - 1,\n        width: availableWidth\n      }, rtl ? 'right' : 'left', (groupDepth || 0) * groupNestingSize),\n      className: \"\".concat(CLASS_NAME, \"-details-special-top-border\")\n    }) : null);\n  }\n\n  if (sticky) {\n    if (activeBordersDiv) {\n      var _style4;\n\n      rowProps.children.push(_react.default.createElement(\"div\", {\n        key: \"active-row-borders\",\n        className: \"InovuaReactDataGrid__row-active-borders-wrapper\",\n        style: (_style4 = {\n          height: '100%',\n          position: 'absolute',\n          top: 0\n        }, (0, _defineProperty2.default)(_style4, rtl ? 'right' : 'left', (groupNestingSize || 0) * groupDepth), (0, _defineProperty2.default)(_style4, \"width\", availableWidth - (groupNestingSize || 0) * groupDepth), (0, _defineProperty2.default)(_style4, \"pointerEvents\", 'none'), _style4)\n      }, activeBordersDiv));\n    }\n  }\n\n  var row;\n\n  if (renderRow) {\n    row = renderRow(rowProps);\n  }\n\n  if (onRenderRow) {\n    onRenderRow(rowProps);\n  }\n\n  if (row === undefined) {\n    row = _react.default.createElement(\"div\", _objectSpread(_objectSpread({}, (0, _reactCleanProps.default)(rowProps, DataGridRow.propTypes)), {}, {\n      id: null,\n      data: null,\n      value: null\n    }));\n  }\n\n  return row;\n});\n\nvar emptyFn = function emptyFn() {};\n\nDataGridRow.defaultProps = {\n  onClick: emptyFn,\n  onMouseEnter: emptyFn,\n  onMouseLeave: emptyFn,\n  onMouseDown: emptyFn,\n  columnRenderStartIndex: 0,\n  showAllGroupCells: false\n};\nDataGridRow.propTypes = {\n  rowActive: _propTypes.default.bool,\n  rowSelected: _propTypes.default.bool,\n  availableWidth: _propTypes.default.number,\n  computedGroupBy: _propTypes.default.array,\n  expandGroupTitle: _propTypes.default.bool,\n  expandColumn: _propTypes.default.any,\n  getCellSelectionKey: _propTypes.default.func,\n  depth: _propTypes.default.number,\n  columns: _propTypes.default.array,\n  columnsMap: _propTypes.default.shape({}),\n  active: _propTypes.default.bool,\n  computedActiveCell: _propTypes.default.any,\n  cellFactory: _propTypes.default.func,\n  computedCellMultiSelectionEnabled: _propTypes.default.bool,\n  computedCellSelection: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),\n  columnRenderCount: _propTypes.default.number,\n  columnRenderStartIndex: _propTypes.default.number,\n  columnUserSelect: _propTypes.default.bool,\n  deselectAll: _propTypes.default.func,\n  empty: _propTypes.default.bool,\n  even: _propTypes.default.bool,\n  firstLockedEndIndex: _propTypes.default.number,\n  firstLockedStartIndex: _propTypes.default.number,\n  firstUnlockedIndex: _propTypes.default.number,\n  flex: _propTypes.default.number,\n  groupCount: _propTypes.default.number,\n  groupNestingSize: _propTypes.default.number,\n  treeNestingSize: _propTypes.default.number,\n  groupProps: _propTypes.default.object,\n  summaryProps: _propTypes.default.object,\n  hasLockedEnd: _propTypes.default.bool,\n  hasLockedStart: _propTypes.default.bool,\n  indexInGroup: _propTypes.default.number,\n  last: _propTypes.default.bool,\n  lastCellInRange: _propTypes.default.any,\n  lastNonEmpty: _propTypes.default.bool,\n  lastRowInGroup: _propTypes.default.bool,\n  lockedEndColumns: _propTypes.default.array,\n  lockedStartColumns: _propTypes.default.array,\n  maxRowHeight: _propTypes.default.number,\n  minRowHeight: _propTypes.default.number,\n  maxVisibleRows: _propTypes.default.number,\n  minWidth: _propTypes.default.number,\n  multiSelect: _propTypes.default.bool,\n  odd: _propTypes.default.bool,\n  onArrowDown: _propTypes.default.func,\n  onArrowUp: _propTypes.default.func,\n  onCellClick: _propTypes.default.func,\n  onCellEnter: _propTypes.default.func,\n  onCellMouseDown: _propTypes.default.func,\n  onCellSelectionDraggerMouseDown: _propTypes.default.func,\n  onRowContextMenu: _propTypes.default.func,\n  passedProps: _propTypes.default.object,\n  realIndex: _propTypes.default.number,\n  renderIndex: _propTypes.default.number,\n  renderRow: _propTypes.default.func,\n  onRenderRow: _propTypes.default.func,\n  rowHeight: _propTypes.default.number,\n  rowExpandHeight: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.func]),\n  initialRowHeight: _propTypes.default.number,\n  defaultRowHeight: _propTypes.default.number,\n  emptyScrollOffset: _propTypes.default.number,\n  rowIndex: _propTypes.default.number,\n  remoteRowIndex: _propTypes.default.number,\n  rowIndexInGroup: _propTypes.default.bool,\n  rowStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.func]),\n  rowClassName: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.func]),\n  scrollLeft: _propTypes.default.number,\n  selectAll: _propTypes.default.func,\n  selected: _propTypes.default.bool,\n  expanded: _propTypes.default.bool,\n  selection: _propTypes.default.any,\n  computedRowExpandEnabled: _propTypes.default.bool,\n  computedTreeEnabled: _propTypes.default.bool,\n  computedRenderRowDetails: _propTypes.default.func,\n  isRowExpandableAt: _propTypes.default.func,\n  setRowSelected: _propTypes.default.func,\n  setRowExpanded: _propTypes.default.func,\n  toggleRowExpand: _propTypes.default.func,\n  toggleNodeExpand: _propTypes.default.func,\n  expandOnMouseDown: _propTypes.default.bool,\n  loadNodeAsync: _propTypes.default.func,\n  showAllGroupCells: _propTypes.default.bool,\n  computedShowCellBorders: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.bool]),\n  showHorizontalCellBorders: _propTypes.default.bool,\n  showVerticalCellBorders: _propTypes.default.bool,\n  totalColumnCount: _propTypes.default.number,\n  totalComputedWidth: _propTypes.default.number,\n  totalDataCount: _propTypes.default.number,\n  totalLockedEndWidth: _propTypes.default.number,\n  totalLockedStartWidth: _propTypes.default.number,\n  totalUnlockedWidth: _propTypes.default.number,\n  unlockedColumns: _propTypes.default.array,\n  virtualizeColumns: _propTypes.default.bool,\n  nativeScroll: _propTypes.default.bool,\n  shouldRenderCollapsedRowDetails: _propTypes.default.bool,\n  rowDetailsStyle: _propTypes.default.oneOfType([_propTypes.default.func, _propTypes.default.object]),\n  dataSourceArray: _propTypes.default.array,\n  getItemId: _propTypes.default.func.isRequired,\n  editable: _propTypes.default.bool,\n  editing: _propTypes.default.bool,\n  editValue: _propTypes.default.any,\n  editRowIndex: _propTypes.default.number,\n  editColumnIndex: _propTypes.default.number,\n  editColumnId: _propTypes.default.any,\n  naturalRowHeight: _propTypes.default.bool,\n  renderDetailsGrid: _propTypes.default.func,\n  scrollToColumn: _propTypes.default.func,\n  scrollToIndexIfNeeded: _propTypes.default.func,\n  renderNodeTool: _propTypes.default.func,\n  computedEnableRowspan: _propTypes.default.bool,\n  setRowSpan: _propTypes.default.func,\n  treeColumn: _propTypes.default.string,\n  scrollbars: _propTypes.default.shape({\n    horizontal: _propTypes.default.bool,\n    vertical: _propTypes.default.bool\n  }),\n  rtl: _propTypes.default.bool,\n  computedPivot: _propTypes.default.array,\n  groupColumnSummaries: _propTypes.default.any,\n  groupSummary: _propTypes.default.any,\n  groupColumn: _propTypes.default.any,\n  lastUnlockedIndex: _propTypes.default.number,\n  lastLockedEndIndex: _propTypes.default.number,\n  lastLockedStartIndex: _propTypes.default.number,\n  computedShowZebraRows: _propTypes.default.bool,\n  computedRowspans: _propTypes.default.any,\n  editStartEvent: _propTypes.default.string,\n  onGroupToggle: _propTypes.default.func,\n  onEditStop: _propTypes.default.func,\n  onEditStart: _propTypes.default.func,\n  onEditCancel: _propTypes.default.func,\n  onEditValueChange: _propTypes.default.func,\n  onEditComplete: _propTypes.default.func,\n  onFilterValueChange: _propTypes.default.func,\n  tryNextRowEdit: _propTypes.default.func,\n  getScrollLeftMax: _propTypes.default.func,\n  activeRowRef: _propTypes.default.any,\n  sticky: _propTypes.default.bool,\n  edition: _propTypes.default.string,\n  computedLicenseValid: _propTypes.default.bool,\n  parentGroupDataArray: _propTypes.default.any,\n  rowDetailsWidth: _propTypes.default.oneOf(['max-viewport-width', 'min-viewport-width', 'viewport-width']),\n  computedHasColSpan: _propTypes.default.bool,\n  onRowReorder: _propTypes.default.oneOfType([_propTypes.default.func, _propTypes.default.bool]),\n  onDragRowMouseDown: _propTypes.default.func,\n  renderLockedStartCells: _propTypes.default.func,\n  renderLockedEndCells: _propTypes.default.func,\n  setActiveIndex: _propTypes.default.func,\n  renderTreeCollapseTool: _propTypes.default.func,\n  renderTreeExpandTool: _propTypes.default.func,\n  renderTreeLoadingTool: _propTypes.default.func,\n  currentEditCompletePromise: _propTypes.default.any,\n  enableColumnAutosize: _propTypes.default.bool,\n  columnHoverClassName: _propTypes.default.string,\n  computedEnableColumnHover: _propTypes.default.bool,\n  onColumnMouseEnter: _propTypes.default.func,\n  onColumnMouseLeave: _propTypes.default.func,\n  columnIndexHovered: _propTypes.default.number,\n  renderRowDetailsExpandIcon: _propTypes.default.func,\n  renderRowDetailsCollapsedIcon: _propTypes.default.func\n};\n\nvar _default = _react.default.memo(DataGridRow, function (prevProps, nextProps) {\n  var areEqual = (0, _shallowequal.equalReturnKey)(prevProps, nextProps, {\n    computedActiveCell: 1,\n    computedActiveIndex: 1,\n    columnRenderStartIndex: 1,\n    activeRowRef: 1,\n    active: 1,\n    onKeyDown: 1,\n    onFocus: 1,\n    setRowSpan: 1,\n    passedProps: 1,\n    computedRowspans: 1,\n    lockedStartColumns: 1,\n    selection: 1,\n    lockedEndColumns: 1,\n    unlockedColumns: 1,\n    maxVisibleRows: 1,\n    onClick: 1,\n    style: 1,\n    loadNodeAsync: 1,\n    scrollToIndexIfNeeded: 1,\n    onColumnMouseEnter: 1,\n    onColumnMouseLeave: 1,\n    computedCellSelection: 1,\n    getCellSelectionKey: 1\n  });\n\n  if (areEqual.result) {\n    if (prevProps.computedActiveCell != nextProps.computedActiveCell) {\n      var _ref2 = prevProps.computedActiveCell || [],\n          _ref3 = (0, _slicedToArray2.default)(_ref2, 1),\n          oldRowIndex = _ref3[0];\n\n      var _ref4 = nextProps.computedActiveCell || [],\n          _ref5 = (0, _slicedToArray2.default)(_ref4, 1),\n          newRowIndex = _ref5[0];\n\n      if (oldRowIndex === nextProps.rowIndex || newRowIndex === nextProps.rowIndex) {\n        return false;\n      }\n    }\n  }\n\n  if (!areEqual.result) {\n    return false;\n  }\n\n  if (prevProps.active !== nextProps.active) {\n    return false;\n  }\n\n  if (JSON.stringify(prevProps.style) !== JSON.stringify(nextProps.style)) {\n    return false;\n  }\n\n  var prevActiveCellRow, prevActiveColumn;\n  var activeCellRow, activeColumn;\n\n  if (prevProps.computedActiveCell) {\n    var _prevProps$computedAc = (0, _slicedToArray2.default)(prevProps.computedActiveCell, 2);\n\n    prevActiveCellRow = _prevProps$computedAc[0];\n    prevActiveColumn = _prevProps$computedAc[1];\n  }\n\n  if (nextProps.computedActiveCell) {\n    var _nextProps$computedAc = (0, _slicedToArray2.default)(nextProps.computedActiveCell, 2);\n\n    activeCellRow = _nextProps$computedAc[0];\n    activeColumn = _nextProps$computedAc[1];\n  }\n\n  if (activeCellRow !== prevActiveCellRow) {\n    if (nextProps.rowIndex === activeCellRow || nextProps.rowIndex === prevActiveCellRow) {\n      return false;\n    }\n  } else {\n    if (nextProps.rowIndex === activeCellRow && activeColumn !== prevActiveColumn) {\n      return false;\n    }\n  }\n\n  return true;\n});\n\nexports.default = _default;","map":{"version":3,"sources":["/Users/sungjaejoo/Desktop/ááµáá¢á¨áá³/ááµá«áá¥áá©áá¥/ILP-main/node_modules/@inovua/reactdatagrid-community/Layout/ColumnLayout/Content/Row.js"],"names":["_interopRequireDefault","require","_typeof","Object","defineProperty","exports","value","default","_slicedToArray2","_toConsumableArray2","_defineProperty2","_react","_interopRequireWildcard","_propTypes","_reactCleanProps","_shallowequal","_join","_clamp","_Cell","_renderCellsMaybeLocked","_adjustCellProps","_usePrevious","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","cache","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","CLASS_NAME","rowClean","p","result","activeRowRef","skipSelect","event","nativeEvent","getValueForPivotColumn","item","path","reduce","acc","field","index","pivotSummary","values","getValueForPivotColumnSummary","_ref","pivotSummaryPath","root","current","pivotColumnSummary","DataGridRow","forwardRef","props","ref","cells","useRef","cellRef","domRef","columnRenderStartIndex","hasBorderTop","hasBorderBottom","maxRowspan","scrollingInProgress","scrollingDirection","initCells","c","cleanupCells","useCallback","Boolean","getCells","prevColumnRenderCount","columnRenderCount","cell","getProps","computedLocked","setStateProps","getDOMNode","setActiveRowRef","instance","node","active","useEffect","setColumnRenderStartIndex","prevRowIndex","rowIndex","prevEditing","editing","prevActive","groupProps","fixForColspan","updateEditCell","onCellUnmount","_cellProps","orderCells","sortedProps","map","sort","p1","p2","cell1","cell2","renderIndex","editColumnIndex","len","getCellIndex","setCellIndex","inEdit","computedHasColSpan","setScrolling","scrolling","scrollingDir","oldScrollingInProgress","_className","concat","classList","add","remove","renderRowDetails","rowDetailsInfo","computedRenderRowDetails","onContextMenu","passedProps","onRowContextMenu","cellProps","getPropsForCells","slice","computedVisibleIndex","sortCells","getCellAt","getCellById","id","getSortedCells","getGaps","startIndex","endIndex","visibleCellPositions","sortedCells","computedColspan","depth","gaps","getVirtualizeColumns","virtualizeColumns","toggleRowExpand","realIndex","toggleNodeExpand","loadNodeAsync","_props$loadNodeAsync","data","isRowExpandable","isRowExpandableAt","setRowExpanded","expanded","_","_expanded","getCurrentGaps","columnStartIndex","newCellProps","renderRange","cellPropsAt","getColumnRenderRange","_renderRange","_renderRange2","start","end","_renderRange3","gapsMap","gapIndex","tempCellMap","calls","cellIndex","groupColumn","outside","undefined","endCellIndex","outOfView","newIndex","propsRef","_columns$filter$","initialColumns","columns","hasLockedStart","onGroupToggle","computedPivot","rowHeight","remoteRowIndex","initialRowHeight","lastLockedStartIndex","lastLockedEndIndex","lastUnlockedIndex","minRowHeight","showHorizontalCellBorders","showVerticalCellBorders","empty","treeColumn","totalDataCount","dataSourceArray","computedGroupBy","summaryProps","indexInGroup","firstUnlockedIndex","firstLockedEndIndex","selectAll","deselectAll","columnUserSelect","multiSelect","selection","setRowSelected","computedRowExpandEnabled","rtl","lastRow","last","computedCellSelection","lastNonEmpty","maxVisibleRows","onCellClick","editStartEvent","naturalRowHeight","renderNodeTool","computedTreeEnabled","rowExpanded","expandGroupTitle","expandColumnFn","expandColumn","onCellSelectionDraggerMouseDown","onCellMouseDown","onCellEnter","computedCellMultiSelectionEnabled","getCellSelectionKey","lastCellInRange","computedRowspans","nativeScroll","onDragRowMouseDown","theme","setActiveIndex","renderTreeCollapseTool","renderTreeExpandTool","renderTreeLoadingTool","onColumnMouseEnter","onColumnMouseLeave","columnIndexHovered","computedEnableColumnHover","columnHoverClassName","enableColumnAutosize","renderRowDetailsExpandIcon","renderRowDetailsCollapsedIcon","expandColumnId","visibleColumnCount","expandColumnIndex","hasBorderTopVar","hasBorderBottomVar","hiddenCells","belongsToColspan","columnsTillColspanStart","lastInGroup","groupCount","activeCell","computedActiveCell","lastInRange","maxRowspanVar","cellPropsArray","column","xindex","theColumnIndex","columnProps","name","groupColumnSummary","pivotColumnPath","pivotGrandSummaryColumn","defaults","userSelect","groupTitleCell","groupExpandCell","hidden","indexInColumns","computedRowspan","groupNestingSize","treeNestingSize","rowActive","rowSelected","selected","groupColumnVisible","lastRowInGroup","columnIndex","first","rowIndexInGroup","rowRenderIndex","tryRowCellEdit","tryNextRowEdit","cellSelected","hasRightSelectedSibling","hasLeftSelectedSibling","hasTopSelectedSibling","hasBottomSelectedSibling","cellKey","cellActive","visibilityTransitionDuration","showTransitionDuration","hideTransitionDuration","onTransitionEnd","editValue","editable","computedEditable","onUnmount","colspan","lockedStart","lockedEnd","unlocked","Math","max","computedWidth","sum","col","lastInSection","firstInSection","noBackground","computedColspanedBy","computedColspanToStart","showBorderLeft","showBorderBottom","summaryBefore","__summary","collapsed","showBorderTop","showBorderRight","position","groupSpacerColumn","prevColumn","nextColumn","prevBorderRight","nextBorderLeft","onEditStopForRow","onCellStopEdit","onEditStartForRow","onCellStartEdit","onEditCancelForRow","onCellEditCancel","onEditValueChangeForRow","onCellEditValueChange","onEditCompleteForRow","onCellEditComplete","computedEnableRowspan","setRowSpan","onEditStop","rowId","getItemId","columnId","onEditStart","onEditCancel","onEditValueChange","onEditComplete","editIndex","dir","isEnterNavigation","cols","colIndex","currentIndex","foundCols","Promise","reject","a","b","resolve","startEdit","currentEditCompletePromise","then","errBack","scrollToColumn","setTimeout","catch","error","scrollToIndexIfNeeded","direction","e","stopPropagation","minStartIndex","lockedStartColumns","maxEndIndex","lockedEndColumns","fixStartIndexForColspan","columnRenderEndIndex","min","expandRangeWithColspan","range","extraNeededColumns","total","renderRowInstance","__","style","scrollLeft","hasLockedEnd","lockedStartCellProps","lockedEndCellProps","groupCellProps","_renderRange4","_renderRange5","_cellProps2","cProps","cellFactory","createElement","onClick","expandOnMouseDown","onMouseDown","useImperativeHandle","renderRow","rowProps","maxRowHeight","minWidth","maxWidth","rowStyle","scrollbars","even","odd","rowDetailsStyle","renderDetailsGrid","computedShowZebraRows","rowDetailsWidth","availableWidth","onRenderRow","shouldRenderCollapsedRowDetails","sticky","rowClassName","hasRowSpan","rowspan","find","rowSpan","className","selectedClassName","height","width","maxHeight","rowStyleResult","children","top","left","emptyScrollOffset","groupDepth","__group","activeBordersDiv","shouldRender","dataSource","detailsStyle","overflow","isNaN","display","styleResult","vertical","Array","_style2","_style4","row","propTypes","emptyFn","defaultProps","onMouseEnter","onMouseLeave","showAllGroupCells","bool","number","array","any","func","columnsMap","shape","oneOfType","firstLockedStartIndex","flex","onArrowDown","onArrowUp","rowExpandHeight","defaultRowHeight","string","computedShowCellBorders","totalColumnCount","totalComputedWidth","totalLockedEndWidth","totalLockedStartWidth","totalUnlockedWidth","unlockedColumns","isRequired","editRowIndex","editColumnId","horizontal","groupColumnSummaries","groupSummary","onFilterValueChange","getScrollLeftMax","edition","computedLicenseValid","parentGroupDataArray","oneOf","onRowReorder","renderLockedStartCells","renderLockedEndCells","_default","memo","prevProps","nextProps","areEqual","equalReturnKey","computedActiveIndex","onKeyDown","onFocus","_ref2","_ref3","oldRowIndex","_ref4","_ref5","newRowIndex","JSON","stringify","prevActiveCellRow","prevActiveColumn","activeCellRow","activeColumn","_prevProps$computedAc","_nextProps$computedAc"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAApC;;AAEA,IAAIC,OAAO,GAAGD,OAAO,CAAC,+BAAD,CAArB;;AAEAE,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,eAAe,GAAGR,sBAAsB,CAACC,OAAO,CAAC,sCAAD,CAAR,CAA5C;;AAEA,IAAIQ,mBAAmB,GAAGT,sBAAsB,CAACC,OAAO,CAAC,0CAAD,CAAR,CAAhD;;AAEA,IAAIS,gBAAgB,GAAGV,sBAAsB,CAACC,OAAO,CAAC,uCAAD,CAAR,CAA7C;;AAEA,IAAIU,MAAM,GAAGC,uBAAuB,CAACX,OAAO,CAAC,OAAD,CAAR,CAApC;;AAEA,IAAIY,UAAU,GAAGb,sBAAsB,CAACC,OAAO,CAAC,YAAD,CAAR,CAAvC;;AAEA,IAAIa,gBAAgB,GAAGd,sBAAsB,CAACC,OAAO,CAAC,qCAAD,CAAR,CAA7C;;AAEA,IAAIc,aAAa,GAAGd,OAAO,CAAC,gCAAD,CAA3B;;AAEA,IAAIe,KAAK,GAAGhB,sBAAsB,CAACC,OAAO,CAAC,wBAAD,CAAR,CAAlC;;AAEA,IAAIgB,MAAM,GAAGjB,sBAAsB,CAACC,OAAO,CAAC,sBAAD,CAAR,CAAnC;;AAEA,IAAIiB,KAAK,GAAGlB,sBAAsB,CAACC,OAAO,CAAC,SAAD,CAAR,CAAlC;;AAEA,IAAIkB,uBAAuB,GAAGnB,sBAAsB,CAACC,OAAO,CAAC,0BAAD,CAAR,CAApD;;AAEA,IAAImB,gBAAgB,GAAGpB,sBAAsB,CAACC,OAAO,CAAC,mBAAD,CAAR,CAA7C;;AAEA,IAAIoB,YAAY,GAAGrB,sBAAsB,CAACC,OAAO,CAAC,4BAAD,CAAR,CAAzC;;AAEA,SAASqB,wBAAT,CAAkCC,WAAlC,EAA+C;AAAE,MAAI,OAAOC,OAAP,KAAmB,UAAvB,EAAmC,OAAO,IAAP;AAAa,MAAIC,iBAAiB,GAAG,IAAID,OAAJ,EAAxB;AAAuC,MAAIE,gBAAgB,GAAG,IAAIF,OAAJ,EAAvB;AAAsC,SAAO,CAACF,wBAAwB,GAAG,SAASA,wBAAT,CAAkCC,WAAlC,EAA+C;AAAE,WAAOA,WAAW,GAAGG,gBAAH,GAAsBD,iBAAxC;AAA4D,GAAzI,EAA2IF,WAA3I,CAAP;AAAiK;;AAE/U,SAASX,uBAAT,CAAiCe,GAAjC,EAAsCJ,WAAtC,EAAmD;AAAE,MAAI,CAACA,WAAD,IAAgBI,GAAhB,IAAuBA,GAAG,CAACC,UAA/B,EAA2C;AAAE,WAAOD,GAAP;AAAa;;AAAC,MAAIA,GAAG,KAAK,IAAR,IAAgBzB,OAAO,CAACyB,GAAD,CAAP,KAAiB,QAAjB,IAA6B,OAAOA,GAAP,KAAe,UAAhE,EAA4E;AAAE,WAAO;AAAEpB,MAAAA,OAAO,EAAEoB;AAAX,KAAP;AAA0B;;AAAC,MAAIE,KAAK,GAAGP,wBAAwB,CAACC,WAAD,CAApC;;AAAmD,MAAIM,KAAK,IAAIA,KAAK,CAACC,GAAN,CAAUH,GAAV,CAAb,EAA6B;AAAE,WAAOE,KAAK,CAACE,GAAN,CAAUJ,GAAV,CAAP;AAAwB;;AAAC,MAAIK,MAAM,GAAG,EAAb;AAAiB,MAAIC,qBAAqB,GAAG9B,MAAM,CAACC,cAAP,IAAyBD,MAAM,CAAC+B,wBAA5D;;AAAsF,OAAK,IAAIC,GAAT,IAAgBR,GAAhB,EAAqB;AAAE,QAAIQ,GAAG,KAAK,SAAR,IAAqBhC,MAAM,CAACiC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCX,GAArC,EAA0CQ,GAA1C,CAAzB,EAAyE;AAAE,UAAII,IAAI,GAAGN,qBAAqB,GAAG9B,MAAM,CAAC+B,wBAAP,CAAgCP,GAAhC,EAAqCQ,GAArC,CAAH,GAA+C,IAA/E;;AAAqF,UAAII,IAAI,KAAKA,IAAI,CAACR,GAAL,IAAYQ,IAAI,CAACC,GAAtB,CAAR,EAAoC;AAAErC,QAAAA,MAAM,CAACC,cAAP,CAAsB4B,MAAtB,EAA8BG,GAA9B,EAAmCI,IAAnC;AAA2C,OAAjF,MAAuF;AAAEP,QAAAA,MAAM,CAACG,GAAD,CAAN,GAAcR,GAAG,CAACQ,GAAD,CAAjB;AAAyB;AAAE;AAAE;;AAACH,EAAAA,MAAM,CAACzB,OAAP,GAAiBoB,GAAjB;;AAAsB,MAAIE,KAAJ,EAAW;AAAEA,IAAAA,KAAK,CAACW,GAAN,CAAUb,GAAV,EAAeK,MAAf;AAAyB;;AAAC,SAAOA,MAAP;AAAgB;;AAEtyB,SAASS,OAAT,CAAiBC,MAAjB,EAAyBC,cAAzB,EAAyC;AAAE,MAAIC,IAAI,GAAGzC,MAAM,CAACyC,IAAP,CAAYF,MAAZ,CAAX;;AAAgC,MAAIvC,MAAM,CAAC0C,qBAAX,EAAkC;AAAE,QAAIC,OAAO,GAAG3C,MAAM,CAAC0C,qBAAP,CAA6BH,MAA7B,CAAd;AAAoDC,IAAAA,cAAc,KAAKG,OAAO,GAAGA,OAAO,CAACC,MAAR,CAAe,UAAUC,GAAV,EAAe;AAAE,aAAO7C,MAAM,CAAC+B,wBAAP,CAAgCQ,MAAhC,EAAwCM,GAAxC,EAA6CC,UAApD;AAAiE,KAAjG,CAAf,CAAd,EAAkIL,IAAI,CAACM,IAAL,CAAUC,KAAV,CAAgBP,IAAhB,EAAsBE,OAAtB,CAAlI;AAAmK;;AAAC,SAAOF,IAAP;AAAc;;AAErV,SAASQ,aAAT,CAAuBC,MAAvB,EAA+B;AAAE,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AAAE,QAAIG,MAAM,GAAG,QAAQF,SAAS,CAACD,CAAD,CAAjB,GAAuBC,SAAS,CAACD,CAAD,CAAhC,GAAsC,EAAnD;AAAuDA,IAAAA,CAAC,GAAG,CAAJ,GAAQb,OAAO,CAACtC,MAAM,CAACsD,MAAD,CAAP,EAAiB,CAAC,CAAlB,CAAP,CAA4BC,OAA5B,CAAoC,UAAUvB,GAAV,EAAe;AAAE,OAAC,GAAGzB,gBAAgB,CAACH,OAArB,EAA8B8C,MAA9B,EAAsClB,GAAtC,EAA2CsB,MAAM,CAACtB,GAAD,CAAjD;AAA0D,KAA/G,CAAR,GAA2HhC,MAAM,CAACwD,yBAAP,GAAmCxD,MAAM,CAACyD,gBAAP,CAAwBP,MAAxB,EAAgClD,MAAM,CAACwD,yBAAP,CAAiCF,MAAjC,CAAhC,CAAnC,GAA+GhB,OAAO,CAACtC,MAAM,CAACsD,MAAD,CAAP,CAAP,CAAwBC,OAAxB,CAAgC,UAAUvB,GAAV,EAAe;AAAEhC,MAAAA,MAAM,CAACC,cAAP,CAAsBiD,MAAtB,EAA8BlB,GAA9B,EAAmChC,MAAM,CAAC+B,wBAAP,CAAgCuB,MAAhC,EAAwCtB,GAAxC,CAAnC;AAAmF,KAApI,CAA1O;AAAkX;;AAAC,SAAOkB,MAAP;AAAgB;;AAExgB,IAAIQ,UAAU,GAAG,0BAAjB;;AAEA,IAAIC,QAAQ,GAAG,SAASA,QAAT,CAAkBC,CAAlB,EAAqB;AAClC,MAAIC,MAAM,GAAGZ,aAAa,CAAC,EAAD,EAAKW,CAAL,CAA1B;;AAEA,SAAOC,MAAM,CAACC,YAAd;AACA,SAAOD,MAAP;AACD,CALD;;AAOA,IAAIE,UAAU,GAAG,SAASA,UAAT,CAAoBC,KAApB,EAA2B;AAC1CA,EAAAA,KAAK,CAACC,WAAN,CAAkBF,UAAlB,GAA+B,IAA/B;AACD,CAFD;;AAIA,IAAIG,sBAAsB,GAAG,SAASA,sBAAT,CAAgCC,IAAhC,EAAsCC,IAAtC,EAA4C;AACvE,SAAOA,IAAI,CAACC,MAAL,CAAY,UAAUC,GAAV,EAAeC,KAAf,EAAsBC,KAAtB,EAA6B;AAC9C,QAAI,CAACF,GAAD,IAAQA,GAAG,CAACC,KAAD,CAAH,IAAc,IAA1B,EAAgC;AAC9B,aAAO,IAAP;AACD;;AAED,QAAIC,KAAK,KAAKJ,IAAI,CAACf,MAAL,GAAc,CAA5B,EAA+B;AAC7B,aAAOiB,GAAG,CAACC,KAAD,CAAV;AACD;;AAED,WAAOD,GAAG,CAACC,KAAD,CAAH,CAAWE,YAAX,IAA2BH,GAAG,CAACC,KAAD,CAAH,CAAWG,MAA7C;AACD,GAVM,EAUJP,IAVI,CAAP;AAWD,CAZD;;AAcA,IAAIQ,6BAA6B,GAAG,SAASA,6BAAT,CAAuCR,IAAvC,EAA6CS,IAA7C,EAAmD;AACrF,MAAIR,IAAI,GAAGQ,IAAI,CAACC,gBAAhB;AACA,MAAI1B,CAAC,GAAG,CAAR;AACA,MAAI2B,IAAI,GAAGX,IAAX;AACA,MAAIY,OAAJ;;AAEA,SAAO,CAACA,OAAO,GAAGX,IAAI,CAACjB,CAAD,CAAf,KAAuB2B,IAA9B,EAAoC;AAClC,QAAI,CAACA,IAAI,CAACL,YAAV,EAAwB;AACtB,aAAO,IAAP;AACD;;AAEDK,IAAAA,IAAI,GAAGA,IAAI,CAACL,YAAL,CAAkBM,OAAO,CAAC5E,KAA1B,CAAP;AACAgD,IAAAA,CAAC;AACF;;AAED,MAAI2B,IAAI,IAAIA,IAAI,CAACE,kBAAjB,EAAqC;AACnC,WAAOF,IAAI,CAACE,kBAAL,CAAwBZ,IAAI,CAACA,IAAI,CAACf,MAAL,GAAc,CAAf,CAAJ,CAAsBkB,KAA9C,CAAP;AACD;;AAED,SAAO,IAAP;AACD,CApBD;;AAsBA,IAAIU,WAAW,GAAGzE,MAAM,CAACJ,OAAP,CAAe8E,UAAf,CAA0B,UAAUC,KAAV,EAAiBC,GAAjB,EAAsB;AAChE,MAAIC,KAAK,GAAG,CAAC,GAAG7E,MAAM,CAAC8E,MAAX,EAAmB,EAAnB,CAAZ;AACA,MAAIC,OAAO,GAAG,CAAC,GAAG/E,MAAM,CAAC8E,MAAX,GAAd;AACA,MAAIE,MAAM,GAAG,CAAC,GAAGhF,MAAM,CAAC8E,MAAX,EAAmB,IAAnB,CAAb;AACA,MAAIG,sBAAsB,GAAG,CAAC,GAAGjF,MAAM,CAAC8E,MAAX,EAAmB,CAAnB,CAA7B;AACA,MAAII,YAAY,GAAG,CAAC,GAAGlF,MAAM,CAAC8E,MAAX,EAAmB,KAAnB,CAAnB;AACA,MAAIK,eAAe,GAAG,CAAC,GAAGnF,MAAM,CAAC8E,MAAX,EAAmB,KAAnB,CAAtB;AACA,MAAIM,UAAU,GAAG,CAAC,GAAGpF,MAAM,CAAC8E,MAAX,EAAmB,CAAnB,CAAjB;AACA,MAAIO,mBAAmB,GAAG,CAAC,GAAGrF,MAAM,CAAC8E,MAAX,EAAmB,KAAnB,CAA1B;AACA,MAAIQ,kBAAkB,GAAG,CAAC,GAAGtF,MAAM,CAAC8E,MAAX,EAAmB,UAAnB,CAAzB;;AAEA,MAAIS,SAAS,GAAG,SAASA,SAAT,GAAqB;AACnCR,IAAAA,OAAO,CAACR,OAAR,GAAkB,UAAUiB,CAAV,EAAa;AAC7B,UAAI,CAACA,CAAL,EAAQ;AACRX,MAAAA,KAAK,CAACN,OAAN,CAAchC,IAAd,CAAmBiD,CAAnB;AACD,KAHD;AAID,GALD;;AAOA,MAAIC,YAAY,GAAG,CAAC,GAAGzF,MAAM,CAAC0F,WAAX,EAAwB,YAAY;AACrDb,IAAAA,KAAK,CAACN,OAAN,GAAgBM,KAAK,CAACN,OAAN,CAAcnC,MAAd,CAAqBuD,OAArB,CAAhB;AACA,WAAOd,KAAK,CAACN,OAAb;AACD,GAHkB,EAGhB,EAHgB,CAAnB;AAIA,MAAIqB,QAAQ,GAAG,CAAC,GAAG5F,MAAM,CAAC0F,WAAX,EAAwB,YAAY;AACjD,WAAOb,KAAK,CAACN,OAAb;AACD,GAFc,EAEZ,EAFY,CAAf;AAGA,MAAIsB,qBAAqB,GAAG,CAAC,GAAGnF,YAAY,CAACd,OAAjB,EAA0B+E,KAAK,CAACmB,iBAAhC,EAAmDnB,KAAK,CAACmB,iBAAzD,CAA5B;;AAEA,MAAInB,KAAK,CAACmB,iBAAN,GAA0BD,qBAA9B,EAAqD;AACnDJ,IAAAA,YAAY;AACZG,IAAAA,QAAQ,GAAG7C,OAAX,CAAmB,UAAUgD,IAAV,EAAgB;AACjC,UAAIA,IAAI,CAACC,QAAL,GAAgBC,cAApB,EAAoC;AAClC;AACD;;AAEDF,MAAAA,IAAI,CAACG,aAAL,CAAmB,IAAnB;AACD,KAND;AAOD;;AAED,MAAIC,UAAU,GAAG,CAAC,GAAGnG,MAAM,CAAC0F,WAAX,EAAwB,YAAY;AACnD,WAAOV,MAAM,CAACT,OAAd;AACD,GAFgB,EAEd,EAFc,CAAjB;;AAIA,MAAI6B,eAAe,GAAG,SAASA,eAAT,GAA2B;AAC/CzB,IAAAA,KAAK,CAACrB,YAAN,CAAmBiB,OAAnB,GAA6B;AAC3B8B,MAAAA,QAAQ,EAAE;AACRlB,QAAAA,eAAe,EAAEA,eAAe,CAACZ,OADzB;AAERW,QAAAA,YAAY,EAAEA,YAAY,CAACX,OAFnB;AAGRI,QAAAA,KAAK,EAAEA;AAHC,OADiB;AAM3B2B,MAAAA,IAAI,EAAEH,UAAU;AANW,KAA7B;AAQD,GATD;;AAWA,MAAIxB,KAAK,CAAC4B,MAAV,EAAkB;AAChBH,IAAAA,eAAe;AAChB;;AAED,GAAC,GAAGpG,MAAM,CAACwG,SAAX,EAAsB,YAAY;AAChCjB,IAAAA,SAAS;;AAET,QAAIZ,KAAK,CAACM,sBAAV,EAAkC;AAChCwB,MAAAA,yBAAyB,CAAC9B,KAAK,CAACM,sBAAP,CAAzB;AACD;;AAED,WAAO,YAAY;AACjBJ,MAAAA,KAAK,CAACN,OAAN,GAAgB,EAAhB;AACD,KAFD;AAGD,GAVD,EAUG,EAVH;AAWA,MAAImC,YAAY,GAAG,CAAC,GAAGhG,YAAY,CAACd,OAAjB,EAA0B+E,KAAK,CAACgC,QAAhC,EAA0ChC,KAAK,CAACgC,QAAhD,CAAnB;AACA,MAAIC,WAAW,GAAG,CAAC,GAAGlG,YAAY,CAACd,OAAjB,EAA0B+E,KAAK,CAACkC,OAAhC,EAAyClC,KAAK,CAACkC,OAA/C,CAAlB;AACA,MAAIC,UAAU,GAAG,CAAC,GAAGpG,YAAY,CAACd,OAAjB,EAA0B+E,KAAK,CAAC4B,MAAhC,EAAwC5B,KAAK,CAAC4B,MAA9C,CAAjB;AACA,GAAC,GAAGvG,MAAM,CAACwG,SAAX,EAAsB,YAAY;AAChC,QAAI7B,KAAK,CAACoC,UAAN,IAAoBpC,KAAK,CAACgC,QAAN,KAAmBD,YAA3C,EAAyD;AACvDM,MAAAA,aAAa;AACd;;AAED,QAAIrC,KAAK,CAACkC,OAAN,KAAkBD,WAAtB,EAAmC;AACjCK,MAAAA,cAAc;AACf;;AAED,QAAI,CAACH,UAAD,IAAenC,KAAK,CAAC4B,MAAzB,EAAiC;AAC/BH,MAAAA,eAAe;AAChB;AACF,GAZD;AAaA,MAAIc,aAAa,GAAG,CAAC,GAAGlH,MAAM,CAAC0F,WAAX,EAAwB,UAAUyB,UAAV,EAAsBpB,IAAtB,EAA4B;AACtE,QAAIlB,KAAK,CAACN,OAAV,EAAmB;AACjBM,MAAAA,KAAK,CAACN,OAAN,GAAgBM,KAAK,CAACN,OAAN,CAAcnC,MAAd,CAAqB,UAAUoD,CAAV,EAAa;AAChD,eAAOA,CAAC,KAAKO,IAAb;AACD,OAFe,CAAhB;AAGD;AACF,GANmB,EAMjB,EANiB,CAApB;AAOA,MAAIqB,UAAU,GAAG,CAAC,GAAGpH,MAAM,CAAC0F,WAAX,EAAwB,YAAY;AACnD,QAAIb,KAAK,GAAGY,YAAY,EAAxB;AACA,QAAI4B,WAAW,GAAGxC,KAAK,CAACyC,GAAN,CAAU,UAAU9B,CAAV,EAAa;AACvC,aAAOA,CAAC,CAACQ,QAAF,EAAP;AACD,KAFiB,EAEfuB,IAFe,CAEV,UAAUC,EAAV,EAAcC,EAAd,EAAkB;AACxB,aAAOD,EAAE,CAACxD,KAAH,GAAWyD,EAAE,CAACzD,KAArB;AACD,KAJiB,CAAlB;AAKAa,IAAAA,KAAK,CAAC0C,IAAN,CAAW,UAAUG,KAAV,EAAiBC,KAAjB,EAAwB;AACjC,aAAOD,KAAK,CAAC/C,KAAN,CAAYiD,WAAZ,GAA0BD,KAAK,CAAChD,KAAN,CAAYiD,WAA7C;AACD,KAFD;AAGA/C,IAAAA,KAAK,CAAC9B,OAAN,CAAc,UAAUyC,CAAV,EAAa7C,CAAb,EAAgB;AAC5B6C,MAAAA,CAAC,CAACU,aAAF,CAAgBmB,WAAW,CAAC1E,CAAD,CAA3B;AACD,KAFD;AAGD,GAbgB,EAad,CAAC8C,YAAD,CAbc,CAAjB;AAcA,MAAIwB,cAAc,GAAG,CAAC,GAAGjH,MAAM,CAAC0F,WAAX,EAAwB,YAAY;AACvD,QAAIb,KAAK,GAAGe,QAAQ,EAApB;AACA,QAAIiC,eAAe,GAAGlD,KAAK,CAACkD,eAA5B;;AAEA,SAAK,IAAIlF,CAAC,GAAG,CAAR,EAAWmF,GAAG,GAAGjD,KAAK,CAAChC,MAAvB,EAA+BkD,IAApC,EAA0CpD,CAAC,GAAGmF,GAA9C,EAAmDnF,CAAC,EAApD,EAAwD;AACtDoD,MAAAA,IAAI,GAAGlB,KAAK,CAAClC,CAAD,CAAZ;;AAEA,UAAIoF,YAAY,CAAChC,IAAD,CAAZ,KAAuB8B,eAA3B,EAA4C;AAC1CG,QAAAA,YAAY,CAACjC,IAAD,EAAO8B,eAAP,CAAZ;AACD;;AAED,UAAI9B,IAAI,CAACC,QAAL,GAAgBiC,MAApB,EAA4B;AAC1BD,QAAAA,YAAY,CAACjC,IAAD,EAAOgC,YAAY,CAAChC,IAAD,CAAnB,CAAZ;AACD;AACF;AACF,GAfoB,EAelB,CAACpB,KAAK,CAACkD,eAAP,CAfkB,CAArB;AAgBA,MAAIb,aAAa,GAAG,CAAC,GAAGhH,MAAM,CAAC0F,WAAX,EAAwB,YAAY;AACtD,QAAIf,KAAK,CAACuD,kBAAV,EAA8B;AAC5BzB,MAAAA,yBAAyB,CAACxB,sBAAsB,CAACV,OAAxB,CAAzB;AACD;AACF,GAJmB,EAIjB,CAACI,KAAK,CAACuD,kBAAP,CAJiB,CAApB;AAKA,MAAIC,YAAY,GAAG,CAAC,GAAGnI,MAAM,CAAC0F,WAAX,EAAwB,UAAU0C,SAAV,EAAqB;AAC9D,QAAI9B,IAAI,GAAGH,UAAU,MAAMnB,MAAM,CAACT,OAAlC;AACA,QAAI8D,YAAY,GAAG/C,kBAAkB,CAACf,OAAtC;;AAEA,QAAI6D,SAAS,KAAK,KAAlB,EAAyB;AACvB9C,MAAAA,kBAAkB,CAACf,OAAnB,GAA6B6D,SAA7B;AACD;;AAED,QAAIE,sBAAsB,GAAGjD,mBAAmB,CAACd,OAAjD;AACAe,IAAAA,kBAAkB,CAACf,OAAnB,GAA6B8D,YAA7B;AACAhD,IAAAA,mBAAmB,CAACd,OAApB,GAA8B6D,SAAS,GAAG,IAAH,GAAU,KAAjD;;AAEA,QAAI,CAAC9B,IAAL,EAAW;AACT;AACD;;AAED,QAAIgC,sBAAsB,KAAKjD,mBAAmB,CAACd,OAAnD,EAA4D;AAC1D,UAAIgE,UAAU,GAAG,GAAGC,MAAH,CAAUtF,UAAV,EAAsB,aAAtB,CAAjB;;AAEA,UAAImC,mBAAmB,CAACd,OAAxB,EAAiC;AAC/B+B,QAAAA,IAAI,CAACmC,SAAL,CAAeC,GAAf,CAAmBH,UAAnB;AACD,OAFD,MAEO;AACLjC,QAAAA,IAAI,CAACmC,SAAL,CAAeE,MAAf,CAAsBJ,UAAtB;AACD;AACF;;AAED;AACD,GA3BkB,EA2BhB,EA3BgB,CAAnB;AA4BA,MAAIK,gBAAgB,GAAG,CAAC,GAAG5I,MAAM,CAAC0F,WAAX,EAAwB,UAAUmD,cAAV,EAA0B;AACvE,QAAIlE,KAAK,CAACmE,wBAAV,EAAoC;AAClC,aAAOnE,KAAK,CAACmE,wBAAN,CAA+BD,cAA/B,CAAP;AACD;;AAED,WAAO,mCAAP;AACD,GANsB,EAMpB,EANoB,CAAvB;AAOA,MAAIE,aAAa,GAAG,CAAC,GAAG/I,MAAM,CAAC0F,WAAX,EAAwB,UAAUlC,KAAV,EAAiB;AAC3D,QAAIwF,WAAW,GAAGrE,KAAK,CAACqE,WAAxB;AAAA,QACIC,gBAAgB,GAAGtE,KAAK,CAACsE,gBAD7B;;AAGA,QAAIA,gBAAJ,EAAsB;AACpBA,MAAAA,gBAAgB,CAACtE,KAAD,EAAQnB,KAAR,CAAhB;AACD;;AAED,QAAIwF,WAAW,IAAIA,WAAW,CAACD,aAA/B,EAA8C;AAC5CC,MAAAA,WAAW,CAACD,aAAZ,CAA0BvF,KAA1B,EAAiCmB,KAAjC;AACD;AACF,GAXmB,EAWjB,CAACA,KAAK,CAACqE,WAAP,EAAoBrE,KAAK,CAACqE,WAAN,CAAkBD,aAAtC,EAAqDpE,KAAK,CAACsE,gBAA3D,CAXiB,CAApB;AAYA,MAAIjB,YAAY,GAAG,CAAC,GAAGhI,MAAM,CAAC0F,WAAX,EAAwB,UAAUK,IAAV,EAAgB/B,KAAhB,EAAuBkF,SAAvB,EAAkC;AAC3EA,IAAAA,SAAS,GAAGA,SAAS,KAAKvE,KAAK,CAACuD,kBAAN,GAA2BiB,gBAAgB,GAAGC,KAAnB,CAAyBpF,KAAzB,EAAgCA,KAAK,GAAG,CAAxC,EAA2C,CAA3C,CAA3B,GAA2EmF,gBAAgB,CAACnF,KAAD,EAAQA,KAAR,CAAhB,CAA+B,CAA/B,CAAhF,CAArB;AACA+B,IAAAA,IAAI,CAACG,aAAL,CAAmBgD,SAAnB;AACD,GAHkB,EAGhB,CAACvE,KAAK,CAACuD,kBAAP,CAHgB,CAAnB;AAIA,MAAIH,YAAY,GAAG,CAAC,GAAG/H,MAAM,CAAC0F,WAAX,EAAwB,UAAUK,IAAV,EAAgB;AACzD,WAAOA,IAAI,CAACC,QAAL,GAAgBqD,oBAAvB;AACD,GAFkB,EAEhB,EAFgB,CAAnB;AAGA,MAAIC,SAAS,GAAG,CAAC,GAAGtJ,MAAM,CAAC0F,WAAX,EAAwB,UAAUb,KAAV,EAAiB;AACvD,WAAOA,KAAK,CAAC0C,IAAN,CAAW,UAAUG,KAAV,EAAiBC,KAAjB,EAAwB;AACxC,aAAOI,YAAY,CAACL,KAAD,CAAZ,GAAsBK,YAAY,CAACJ,KAAD,CAAzC;AACD,KAFM,CAAP;AAGD,GAJe,EAIb,EAJa,CAAhB;AAKA,MAAI4B,SAAS,GAAG,CAAC,GAAGvJ,MAAM,CAAC0F,WAAX,EAAwB,UAAU1B,KAAV,EAAiB;AACvD,WAAO4B,QAAQ,GAAGxD,MAAX,CAAkB,UAAUoD,CAAV,EAAa;AACpC,aAAOA,CAAC,CAACQ,QAAF,GAAaqD,oBAAb,KAAsCrF,KAA7C;AACD,KAFM,EAEJ,CAFI,CAAP;AAGD,GAJe,EAIb,EAJa,CAAhB;AAKA,MAAIwF,WAAW,GAAG,CAAC,GAAGxJ,MAAM,CAAC0F,WAAX,EAAwB,UAAU+D,EAAV,EAAc;AACtD,WAAO7D,QAAQ,GAAGxD,MAAX,CAAkB,UAAUoD,CAAV,EAAa;AACpC,aAAOA,CAAC,CAACQ,QAAF,GAAayD,EAAb,KAAoBA,EAA3B;AACD,KAFM,EAEJ,CAFI,CAAP;AAGD,GAJiB,EAIf,EAJe,CAAlB;AAKA,MAAIC,cAAc,GAAG,CAAC,GAAG1J,MAAM,CAAC0F,WAAX,EAAwB,YAAY;AACvD,WAAO4D,SAAS,CAAC1D,QAAQ,GAAGwD,KAAX,EAAD,CAAhB;AACD,GAFoB,EAElB,EAFkB,CAArB;AAGA,MAAIO,OAAO,GAAG,CAAC,GAAG3J,MAAM,CAAC0F,WAAX,EAAwB,UAAUkE,UAAV,EAAsBC,QAAtB,EAAgC;AACpE,QAAIC,oBAAoB,GAAG,EAA3B;AACA,QAAIC,WAAW,GAAGL,cAAc,EAAhC;AACAK,IAAAA,WAAW,CAAChH,OAAZ,CAAoB,UAAUgD,IAAV,EAAgB;AAClC,UAAImD,SAAS,GAAGnD,IAAI,CAACC,QAAL,EAAhB;;AAEA,UAAIkD,SAAS,CAACjD,cAAd,EAA8B;AAC5B;AACD;;AAED,UAAIoD,oBAAoB,GAAGH,SAAS,CAACG,oBAArC;AAAA,UACIW,eAAe,GAAGd,SAAS,CAACc,eADhC;AAAA,UAEIjD,UAAU,GAAGmC,SAAS,CAACnC,UAF3B;;AAIA,UAAIA,UAAU,IAAIsC,oBAAoB,IAAItC,UAAU,CAACkD,KAAX,GAAmB,CAA7D,EAAgE;AAC9D;AACD;;AAEDH,MAAAA,oBAAoB,CAACT,oBAAD,CAApB,GAA6C,IAA7C;;AAEA,UAAIW,eAAJ,EAAqB;AACnB,aAAK,IAAIrH,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGqH,eAApB,EAAqCrH,CAAC,EAAtC,EAA0C;AACxCmH,UAAAA,oBAAoB,CAACT,oBAAoB,GAAG1G,CAAxB,CAApB,GAAiD,IAAjD;AACD;AACF;AACF,KAtBD;AAuBA,QAAIuH,IAAI,GAAG,EAAX;;AAEA,WAAON,UAAU,IAAIC,QAArB,EAA+BD,UAAU,EAAzC,EAA6C;AAC3C,UAAI,CAACE,oBAAoB,CAACF,UAAD,CAAzB,EAAuC;AACrCM,QAAAA,IAAI,CAAC3H,IAAL,CAAUqH,UAAV;AACD;AACF;;AAED,WAAOM,IAAP;AACD,GAnCa,EAmCX,EAnCW,CAAd;AAoCA,MAAIC,oBAAoB,GAAG,CAAC,GAAGnK,MAAM,CAAC0F,WAAX,EAAwB,YAAY;AAC7D,WAAOf,KAAK,CAACyF,iBAAb;AACA,WAAO9E,kBAAkB,CAACf,OAAnB,KAA+B,YAA/B,GAA8CI,KAAK,CAACyF,iBAApD,GAAwE,KAA/E;AACD,GAH0B,EAGxB,CAACzF,KAAK,CAACyF,iBAAP,CAHwB,CAA3B;AAIA,MAAIC,eAAe,GAAG,CAAC,GAAGrK,MAAM,CAAC0F,WAAX,EAAwB,UAAUiB,QAAV,EAAoB;AAChE,QAAI,OAAOA,QAAP,KAAoB,QAAxB,EAAkC;AAChCA,MAAAA,QAAQ,GAAGhC,KAAK,CAAC2F,SAAjB;AACD;;AAED3F,IAAAA,KAAK,CAAC0F,eAAN,CAAsB1D,QAAtB;AACD,GANqB,EAMnB,CAAChC,KAAK,CAAC2F,SAAP,EAAkB3F,KAAK,CAAC0F,eAAxB,CANmB,CAAtB;AAOA,MAAIE,gBAAgB,GAAG,CAAC,GAAGvK,MAAM,CAAC0F,WAAX,EAAwB,UAAUiB,QAAV,EAAoB;AACjE,QAAI,OAAOA,QAAP,KAAoB,QAAxB,EAAkC;AAChCA,MAAAA,QAAQ,GAAGhC,KAAK,CAAC2F,SAAjB;AACD;;AAED3F,IAAAA,KAAK,CAAC4F,gBAAN,CAAuB5D,QAAvB;AACD,GANsB,EAMpB,CAAChC,KAAK,CAAC2F,SAAP,EAAkB3F,KAAK,CAAC4F,gBAAxB,CANoB,CAAvB;AAOA,MAAIC,aAAa,GAAG,CAAC,GAAGxK,MAAM,CAAC0F,WAAX,EAAwB,YAAY;AACtD,QAAI+E,oBAAJ;;AAEA,KAACA,oBAAoB,GAAG9F,KAAK,CAAC6F,aAA9B,MAAiD,IAAjD,IAAyDC,oBAAoB,KAAK,KAAK,CAAvF,GAA2F,KAAK,CAAhG,GAAoGA,oBAAoB,CAAC9I,IAArB,CAA0BgD,KAA1B,EAAiCA,KAAK,CAAC+F,IAAvC,CAApG;AACD,GAJmB,EAIjB,CAAC/F,KAAK,CAAC6F,aAAP,EAAsB7F,KAAK,CAAC+F,IAA5B,CAJiB,CAApB;AAKA,MAAIC,eAAe,GAAG,CAAC,GAAG3K,MAAM,CAAC0F,WAAX,EAAwB,UAAUiB,QAAV,EAAoB;AAChE,QAAI,OAAOA,QAAP,KAAoB,QAAxB,EAAkC;AAChCA,MAAAA,QAAQ,GAAGhC,KAAK,CAAC2F,SAAjB;AACD;;AAED,WAAO3F,KAAK,CAACiG,iBAAN,CAAwBjE,QAAxB,CAAP;AACD,GANqB,EAMnB,CAAChC,KAAK,CAAC2F,SAAP,EAAkB3F,KAAK,CAACiG,iBAAxB,CANmB,CAAtB;AAOA,MAAIC,cAAc,GAAG,CAAC,GAAG7K,MAAM,CAAC0F,WAAX,EAAwB,UAAUoF,QAAV,EAAoBC,CAApB,EAAuB;AAClE,QAAIpE,QAAQ,GAAGhC,KAAK,CAAC2F,SAArB;AACA,QAAIU,SAAS,GAAGF,QAAhB;;AAEA,QAAI,OAAOA,QAAP,KAAoB,QAAxB,EAAkC;AAChCnE,MAAAA,QAAQ,GAAGmE,QAAX;AACAE,MAAAA,SAAS,GAAGD,CAAZ;AACD;;AAEDpG,IAAAA,KAAK,CAACkG,cAAN,CAAqBlE,QAArB,EAA+BqE,SAA/B;AACD,GAVoB,EAUlB,CAACrG,KAAK,CAAC2F,SAAP,EAAkB3F,KAAK,CAACkG,cAAxB,CAVkB,CAArB;;AAYA,MAAII,cAAc,GAAG,SAASA,cAAT,GAA0B,CAAE,CAAjD;;AAEA,MAAIxE,yBAAyB,GAAG,CAAC,GAAGzG,MAAM,CAAC0F,WAAX,EAAwB,UAAUwF,gBAAV,EAA4B;AAClF,QAAIjG,sBAAsB,CAACV,OAAvB,KAAmC2G,gBAAvC,EAAyD;AACvD;AACD;;AAEDjG,IAAAA,sBAAsB,CAACV,OAAvB,GAAiC2G,gBAAjC;;AAEA,QAAIf,oBAAoB,OAAO,KAA/B,EAAsC;AACpC;AACD;;AAED,QAAIgB,YAAJ;AACA,QAAIC,WAAJ;AACA,QAAIC,WAAJ;;AAEA,QAAI1G,KAAK,CAACuD,kBAAV,EAA8B;AAC5BiD,MAAAA,YAAY,GAAGhC,gBAAgB,EAA/B;AACAiC,MAAAA,WAAW,GAAGE,oBAAoB,CAACH,YAAD,CAAlC;;AAEAE,MAAAA,WAAW,GAAG,SAASA,WAAT,CAAqBrH,KAArB,EAA4B;AACxC,eAAOmH,YAAY,CAACnH,KAAD,CAAnB;AACD,OAFD;AAGD,KAPD,MAOO;AACL,UAAIuH,YAAJ,EAAkBC,aAAlB;;AAEAJ,MAAAA,WAAW,GAAGE,oBAAoB,EAAlC;AACAH,MAAAA,YAAY,GAAGhC,gBAAgB,CAAC,CAACoC,YAAY,GAAGH,WAAhB,MAAiC,IAAjC,IAAyCG,YAAY,KAAK,KAAK,CAA/D,GAAmE,KAAK,CAAxE,GAA4EA,YAAY,CAACE,KAA1F,EAAiG,CAAC,CAAC,CAACD,aAAa,GAAGJ,WAAjB,MAAkC,IAAlC,IAA0CI,aAAa,KAAK,KAAK,CAAjE,GAAqE,KAAK,CAA1E,GAA8EA,aAAa,CAACE,GAA7F,KAAqG,CAAtG,IAA2G,CAA5M,CAA/B;;AAEAL,MAAAA,WAAW,GAAG,SAASA,WAAT,CAAqBrH,KAArB,EAA4B;AACxC,eAAOmH,YAAY,CAAC/I,MAAb,CAAoB,UAAU8G,SAAV,EAAqB;AAC9C,iBAAOA,SAAS,CAACG,oBAAV,KAAmCrF,KAA1C;AACD,SAFM,EAEJ,CAFI,CAAP;AAGD,OAJD;AAKD;;AAED,QAAI,CAACoH,WAAL,EAAkB;AAChB;AACD;;AAED,QAAIO,aAAa,GAAGP,WAApB;AAAA,QACIK,KAAK,GAAGE,aAAa,CAACF,KAD1B;AAAA,QAEIC,GAAG,GAAGC,aAAa,CAACD,GAFxB;AAGA,QAAIxB,IAAI,GAAGP,OAAO,CAAC8B,KAAD,EAAQC,GAAR,CAAlB;;AAEA,QAAI,CAACxB,IAAI,CAACrH,MAAV,EAAkB;AAChB;AACD;;AAED,QAAI+I,OAAO,GAAG1B,IAAI,CAACrG,MAAL,CAAY,UAAUC,GAAV,EAAe+H,QAAf,EAAyB;AACjD/H,MAAAA,GAAG,CAAC+H,QAAD,CAAH,GAAgB,IAAhB;AACA,aAAO/H,GAAP;AACD,KAHa,EAGX,EAHW,CAAd;AAIA,QAAIgI,WAAW,GAAG,EAAlB;AACA,QAAIC,KAAK,GAAG,EAAZ;AACAnG,IAAAA,QAAQ,GAAG7C,OAAX,CAAmB,UAAUgD,IAAV,EAAgB;AACjC,UAAImD,SAAS,GAAGnD,IAAI,CAACC,QAAL,EAAhB;AACA,UAAIe,UAAU,GAAGmC,SAAS,CAACnC,UAA3B;AAAA,UACIiF,SAAS,GAAG9C,SAAS,CAACG,oBAD1B;AAAA,UAEIW,eAAe,GAAGd,SAAS,CAACc,eAFhC;AAAA,UAGI/D,cAAc,GAAGiD,SAAS,CAACjD,cAH/B;;AAKA,UAAIA,cAAJ,EAAoB;AAClB;AACD;;AAED,UAAI,CAACtB,KAAK,CAACsH,WAAP,IAAsBlF,UAAtB,IAAoCiF,SAAS,IAAIjF,UAAU,CAACkD,KAAX,GAAmB,CAAxE,EAA2E;AACzE;AACD;;AAED,UAAIiC,OAAO,GAAGF,SAAS,GAAGP,KAAZ,IAAqBO,SAAS,GAAGN,GAAjC,IAAwCM,SAAS,KAAKG,SAApE;;AAEA,UAAID,OAAO,IAAIlC,eAAf,EAAgC;AAC9B,YAAIoC,YAAY,GAAGJ,SAAS,IAAIhC,eAAe,GAAG,CAAtB,CAA5B;AACAkC,QAAAA,OAAO,GAAGF,SAAS,GAAGP,KAAZ,IAAqBW,YAAY,GAAGX,KAApC,IAA6CO,SAAS,GAAGN,GAAnE;AACD;;AAED,UAAIW,SAAS,GAAGH,OAAO,IAAIJ,WAAW,CAACE,SAAD,CAAtB,IAAqCJ,OAAO,CAACI,SAAD,CAA5D;AACAF,MAAAA,WAAW,CAACE,SAAD,CAAX,GAAyB,IAAzB;AACA,UAAIM,QAAJ;;AAEA,UAAID,SAAS,IAAInC,IAAI,CAACrH,MAAtB,EAA8B;AAC5ByJ,QAAAA,QAAQ,GAAGpC,IAAI,CAACA,IAAI,CAACrH,MAAL,GAAc,CAAf,CAAf;AACAkJ,QAAAA,KAAK,CAACxJ,IAAN,CAAW,CAACwD,IAAD,EAAOuG,QAAP,CAAX;AACApC,QAAAA,IAAI,CAACrH,MAAL,IAAe,CAAf;AACD;AACF,KA/BD;AAgCAkJ,IAAAA,KAAK,CAAChJ,OAAN,CAAc,UAAUpB,IAAV,EAAgB;AAC5B,UAAIoE,IAAI,GAAGpE,IAAI,CAAC,CAAD,CAAf;AACA,UAAI2K,QAAQ,GAAG3K,IAAI,CAAC,CAAD,CAAnB;AACAqG,MAAAA,YAAY,CAACjC,IAAD,EAAOuG,QAAP,EAAiBjB,WAAW,CAACiB,QAAD,CAA5B,CAAZ;AACD,KAJD;AAKD,GA3F+B,EA2F7B,CAAC3H,KAAK,CAACM,sBAAP,EAA+BN,KAAK,CAACuD,kBAArC,EAAyDvD,KAAK,CAACmB,iBAA/D,EAAkFnB,KAAK,CAACyF,iBAAxF,CA3F6B,CAAhC;AA4FA,MAAImC,QAAQ,GAAG,CAAC,GAAGvM,MAAM,CAAC8E,MAAX,EAAmBH,KAAnB,CAAf;AACA4H,EAAAA,QAAQ,CAAChI,OAAT,GAAmBI,KAAnB;;AAEA,MAAIwE,gBAAgB,GAAG,SAASA,gBAAT,CAA0BS,UAA1B,EAAsCC,QAAtC,EAAgD;AACrE,QAAI2C,gBAAJ;;AAEA,QAAI7H,KAAK,GAAG4H,QAAQ,CAAChI,OAArB;AACA,QAAIkI,cAAc,GAAG9H,KAAK,CAAC+H,OAA3B;AACA,QAAIA,OAAO,GAAGD,cAAd;AACA,QAAIE,cAAc,GAAGhI,KAAK,CAACgI,cAA3B;AAAA,QACIjC,IAAI,GAAG/F,KAAK,CAAC+F,IADjB;AAAA,QAEIkC,aAAa,GAAGjI,KAAK,CAACiI,aAF1B;AAAA,QAGIC,aAAa,GAAGlI,KAAK,CAACkI,aAH1B;AAAA,QAIIC,SAAS,GAAGnI,KAAK,CAACmI,SAJtB;AAAA,QAKIC,cAAc,GAAGpI,KAAK,CAACoI,cAL3B;AAAA,QAMIC,gBAAgB,GAAGrI,KAAK,CAACqI,gBAN7B;AAAA,QAOIC,oBAAoB,GAAGtI,KAAK,CAACsI,oBAPjC;AAAA,QAQIC,kBAAkB,GAAGvI,KAAK,CAACuI,kBAR/B;AAAA,QASIC,iBAAiB,GAAGxI,KAAK,CAACwI,iBAT9B;AAAA,QAUIC,YAAY,GAAGzI,KAAK,CAACyI,YAVzB;AAAA,QAWI9C,SAAS,GAAG3F,KAAK,CAAC2F,SAXtB;AAAA,QAYI+C,yBAAyB,GAAG1I,KAAK,CAAC0I,yBAZtC;AAAA,QAaIC,uBAAuB,GAAG3I,KAAK,CAAC2I,uBAbpC;AAAA,QAcIC,KAAK,GAAG5I,KAAK,CAAC4I,KAdlB;AAAA,QAeIC,UAAU,GAAG7I,KAAK,CAAC6I,UAfvB;AAAA,QAgBIvB,WAAW,GAAGtH,KAAK,CAACsH,WAhBxB;AAAA,QAiBIwB,cAAc,GAAG9I,KAAK,CAAC8I,cAjB3B;AAAA,QAkBIxD,KAAK,GAAGtF,KAAK,CAACsF,KAlBlB;AAAA,QAmBIyD,eAAe,GAAG/I,KAAK,CAAC+I,eAnB5B;AAAA,QAoBIC,eAAe,GAAGhJ,KAAK,CAACgJ,eApB5B;AAAA,QAqBI5G,UAAU,GAAGpC,KAAK,CAACoC,UArBvB;AAAA,QAsBI6G,YAAY,GAAGjJ,KAAK,CAACiJ,YAtBzB;AAAA,QAuBIC,YAAY,GAAGlJ,KAAK,CAACkJ,YAvBzB;AAAA,QAwBIC,kBAAkB,GAAGnJ,KAAK,CAACmJ,kBAxB/B;AAAA,QAyBIC,mBAAmB,GAAGpJ,KAAK,CAACoJ,mBAzBhC;AAAA,QA0BIC,SAAS,GAAGrJ,KAAK,CAACqJ,SA1BtB;AAAA,QA2BIC,WAAW,GAAGtJ,KAAK,CAACsJ,WA3BxB;AAAA,QA4BIC,gBAAgB,GAAGvJ,KAAK,CAACuJ,gBA5B7B;AAAA,QA6BIC,WAAW,GAAGxJ,KAAK,CAACwJ,WA7BxB;AAAA,QA8BIC,SAAS,GAAGzJ,KAAK,CAACyJ,SA9BtB;AAAA,QA+BIC,cAAc,GAAG1J,KAAK,CAAC0J,cA/B3B;AAAA,QAgCIC,wBAAwB,GAAG3J,KAAK,CAAC2J,wBAhCrC;AAAA,QAiCIC,GAAG,GAAG5J,KAAK,CAAC4J,GAjChB;AAAA,QAkCIC,OAAO,GAAG7J,KAAK,CAAC8J,IAlCpB;AAAA,QAmCIC,qBAAqB,GAAG/J,KAAK,CAAC+J,qBAnClC;AAAA,QAoCIC,YAAY,GAAGhK,KAAK,CAACgK,YApCzB;AAAA,QAqCIC,cAAc,GAAGjK,KAAK,CAACiK,cArC3B;AAAA,QAsCIC,WAAW,GAAGlK,KAAK,CAACkK,WAtCxB;AAAA,QAuCIC,cAAc,GAAGnK,KAAK,CAACmK,cAvC3B;AAAA,QAwCIC,gBAAgB,GAAGpK,KAAK,CAACoK,gBAxC7B;AAAA,QAyCIC,cAAc,GAAGrK,KAAK,CAACqK,cAzC3B;AAAA,QA0CIC,mBAAmB,GAAGtK,KAAK,CAACsK,mBA1ChC;AAAA,QA2CIC,WAAW,GAAGvK,KAAK,CAACmG,QA3CxB;AAAA,QA4CIqE,gBAAgB,GAAGxK,KAAK,CAACwK,gBA5C7B;AAAA,QA6CIC,cAAc,GAAGzK,KAAK,CAAC0K,YA7C3B;AAAA,QA8CIC,+BAA+B,GAAG3K,KAAK,CAAC2K,+BA9C5C;AAAA,QA+CIC,eAAe,GAAG5K,KAAK,CAAC4K,eA/C5B;AAAA,QAgDIC,WAAW,GAAG7K,KAAK,CAAC6K,WAhDxB;AAAA,QAiDIC,iCAAiC,GAAG9K,KAAK,CAAC8K,iCAjD9C;AAAA,QAkDIC,mBAAmB,GAAG/K,KAAK,CAAC+K,mBAlDhC;AAAA,QAmDIC,eAAe,GAAGhL,KAAK,CAACgL,eAnD5B;AAAA,QAoDIC,gBAAgB,GAAGjL,KAAK,CAACiL,gBApD7B;AAAA,QAqDIhI,WAAW,GAAGjD,KAAK,CAACiD,WArDxB;AAAA,QAsDIiI,YAAY,GAAGlL,KAAK,CAACkL,YAtDzB;AAAA,QAuDIC,kBAAkB,GAAGnL,KAAK,CAACmL,kBAvD/B;AAAA,QAwDIC,KAAK,GAAGpL,KAAK,CAACoL,KAxDlB;AAAA,QAyDIhH,aAAa,GAAGpE,KAAK,CAACoE,aAzD1B;AAAA,QA0DIiH,cAAc,GAAGrL,KAAK,CAACqL,cA1D3B;AAAA,QA2DIC,sBAAsB,GAAGtL,KAAK,CAACsL,sBA3DnC;AAAA,QA4DIC,oBAAoB,GAAGvL,KAAK,CAACuL,oBA5DjC;AAAA,QA6DIC,qBAAqB,GAAGxL,KAAK,CAACwL,qBA7DlC;AAAA,QA8DIC,kBAAkB,GAAGzL,KAAK,CAACyL,kBA9D/B;AAAA,QA+DIC,kBAAkB,GAAG1L,KAAK,CAAC0L,kBA/D/B;AAAA,QAgEIC,kBAAkB,GAAG3L,KAAK,CAAC2L,kBAhE/B;AAAA,QAiEIC,yBAAyB,GAAG5L,KAAK,CAAC4L,yBAjEtC;AAAA,QAkEIC,oBAAoB,GAAG7L,KAAK,CAAC6L,oBAlEjC;AAAA,QAmEIC,oBAAoB,GAAG9L,KAAK,CAAC8L,oBAnEjC;AAAA,QAoEIC,0BAA0B,GAAG/L,KAAK,CAAC+L,0BApEvC;AAAA,QAqEIC,6BAA6B,GAAGhM,KAAK,CAACgM,6BArE1C;AAsEA,QAAIC,cAAc,GAAGxB,cAAc,GAAGA,cAAc,CAAC;AACnD1E,MAAAA,IAAI,EAAEA;AAD6C,KAAD,CAAjB,GAE9ByB,SAFL;AAGA,QAAI/B,iBAAiB,GAAGD,oBAAoB,EAA5C;AACA,QAAI0G,kBAAkB,GAAGnE,OAAO,CAAC7J,MAAjC;AACA,QAAIiO,iBAAiB,GAAGF,cAAc,GAAG,CAACpE,gBAAgB,GAAGE,OAAO,CAACtK,MAAR,CAAe,UAAUoD,CAAV,EAAa;AACvF,aAAOA,CAAC,CAACiE,EAAF,KAASmH,cAAhB;AACD,KAF4D,EAE1D,CAF0D,CAApB,MAE9B,IAF8B,IAEtBpE,gBAAgB,KAAK,KAAK,CAFJ,GAEQ,KAAK,CAFb,GAEiBA,gBAAgB,CAACnD,oBAFrC,GAE4D8C,SAFlG;;AAIA,QAAIvC,UAAU,KAAKuC,SAAnB,EAA8B;AAC5BO,MAAAA,OAAO,GAAGA,OAAO,CAACtD,KAAR,CAAcQ,UAAd,EAA0BC,QAAQ,GAAGA,QAAQ,GAAG,CAAd,GAAkBD,UAAU,GAAG,CAAjE,CAAV;AACD;;AAEDA,IAAAA,UAAU,GAAGA,UAAU,IAAI,CAA3B;AACA,QAAImH,eAAe,GAAG,KAAtB;AACA,QAAIC,kBAAkB,GAAG,KAAzB;AACA,QAAIC,WAAW,GAAG,EAAlB;AACA,QAAIC,gBAAgB,GAAG,EAAvB;AACA,QAAIC,uBAAuB,GAAG,EAA9B;AACA,QAAIC,WAAW,GAAGvD,YAAY,IAAIlJ,KAAK,CAAC0M,UAAN,GAAmB,CAArD;AACA,QAAIC,UAAU,GAAG3M,KAAK,CAAC4M,kBAAN,IAA4B7B,mBAA5B,GAAkDA,mBAAmB,CAAClN,KAApB,CAA0B,KAAK,CAA/B,EAAkC,CAAC,GAAG1C,mBAAmB,CAACF,OAAxB,EAAiC+E,KAAK,CAAC4M,kBAAvC,CAAlC,CAAlD,GAAkJ,IAAnK;AACA,QAAIC,WAAW,GAAG7B,eAAe,IAAI2B,UAAnB,IAAiC,IAAnD;AACA,QAAIG,aAAa,GAAG,CAApB;AACA,QAAIC,cAAc,GAAGhF,OAAO,CAACpF,GAAR,CAAY,UAAUqK,MAAV,EAAkBC,MAAlB,EAA0B;AACzD,UAAIC,cAAc,GAAGD,MAAM,GAAGhI,UAA9B;AACA,UAAIkI,WAAW,GAAGH,MAAlB;AACA,UAAII,IAAI,GAAGD,WAAW,CAACC,IAAvB;AAAA,UACI1I,oBAAoB,GAAGyI,WAAW,CAACzI,oBADvC;AAEA,UAAI1J,KAAK,GAAG+K,IAAI,GAAGA,IAAI,CAACqH,IAAD,CAAP,GAAgB,IAAhC;AACA,UAAIpL,QAAQ,GAAG2D,SAAf;;AAEA,UAAIvD,UAAU,IAAI2D,IAAd,IAAsBA,IAAI,CAACsH,kBAA/B,EAAmD;AACjDrS,QAAAA,KAAK,GAAG+K,IAAI,CAACsH,kBAAL,CAAwBD,IAAxB,CAAR;AACD;;AAED,UAAIhL,UAAU,IAAI2D,IAAd,IAAsBiH,MAAM,CAAC1F,WAAjC,EAA8C;AAC5CtM,QAAAA,KAAK,GAAG+K,IAAI,CAAC/K,KAAb;AACD;;AAED,UAAImS,WAAW,CAACG,eAAhB,EAAiC;AAC/BtS,QAAAA,KAAK,GAAG+K,IAAI,CAACzG,YAAL,GAAoBP,sBAAsB,CAACgH,IAAI,CAACzG,YAAN,EAAoB6N,WAAW,CAACG,eAAhC,CAA1C,GAA6FtS,KAArG;AACD;;AAED,UAAImS,WAAW,CAACI,uBAAhB,EAAyC,CAAE,CAA3C,MAAiD;AAC/C,YAAIJ,WAAW,CAACzN,gBAAhB,EAAkC;AAChC1E,UAAAA,KAAK,GAAG+K,IAAI,CAACzG,YAAL,GAAoBE,6BAA6B,CAACuG,IAAD,EAAO;AAC9DrG,YAAAA,gBAAgB,EAAEyN,WAAW,CAACzN,gBADgC;AAE9D6N,YAAAA,uBAAuB,EAAEJ,WAAW,CAACI;AAFyB,WAAP,CAAjD,GAGHvS,KAHL;AAID;AACF;;AAED,UAAIwS,QAAQ,GAAG,EAAf;;AAEA,UAAIjE,gBAAgB,KAAK/B,SAAzB,EAAoC;AAClCgG,QAAAA,QAAQ,CAACC,UAAT,GAAsBlE,gBAAtB;AACD;;AAED,UAAImE,cAAc,GAAG,CAACpG,WAAD,IAAgBlF,UAAhB,IAA8BA,UAAU,CAACkD,KAAX,GAAmB,CAAnB,IAAwBZ,oBAA3E;AACA,UAAIiJ,eAAe,GAAG,CAACrG,WAAD,IAAgBlF,UAAhB,IAA8BA,UAAU,CAACkD,KAAX,IAAoBZ,oBAAxE;AACA,UAAIkJ,MAAM,GAAGxL,UAAU,GAAGoI,gBAAgB,IAAI,CAAClD,WAArB,GAAmC5C,oBAAoB,GAAGtC,UAAU,CAACkD,KAAX,GAAmB,CAA7E,GAAiF,KAApF,GAA4F,KAAnH;;AAEA,UAAI6G,iBAAiB,IAAI,IAArB,IAA6BzH,oBAAoB,GAAGyH,iBAAxD,EAA2E;AACzEyB,QAAAA,MAAM,GAAG,IAAT;AACD;;AAED,UAAIrJ,SAAS,GAAGzG,aAAa,CAACA,aAAa,CAACA,aAAa,CAAC,EAAD,EAAK0P,QAAL,CAAd,EAA8BL,WAA9B,CAAd,EAA0D,EAA1D,EAA8D;AACzF/E,QAAAA,cAAc,EAAEA,cADyE;AAEzFyF,QAAAA,cAAc,EAAEX,cAFyE;AAGzF5H,QAAAA,KAAK,EAAEA,KAHkF;AAIzF6G,QAAAA,iBAAiB,EAAEA,iBAJsE;AAKzFzB,QAAAA,YAAY,EAAEyB,iBAAiB,KAAKzH,oBALqD;AAMzFyF,QAAAA,cAAc,EAAEA,cANyE;AAOzFD,QAAAA,WAAW,EAAEA,WAP4E;AAQzF4D,QAAAA,eAAe,EAAE7C,gBAAgB,GAAGA,gBAAgB,CAAC+B,MAAM,CAAClI,EAAR,CAAnB,GAAiC,CARuB;AASzFiJ,QAAAA,gBAAgB,EAAE/N,KAAK,CAAC+N,gBATiE;AAUzFC,QAAAA,eAAe,EAAEhO,KAAK,CAACgO,eAVkE;AAWzFjI,QAAAA,IAAI,EAAEA,IAXmF;AAYzFqE,QAAAA,gBAAgB,EAAEA,gBAZuE;AAazFtB,QAAAA,cAAc,EAAEA,cAbyE;AAczF6B,QAAAA,+BAA+B,EAAEA,+BAdwD;AAezFC,QAAAA,eAAe,EAAEA,eAfwE;AAgBzFC,QAAAA,WAAW,EAAEA,WAhB4E;AAiBzFjB,QAAAA,GAAG,EAAEA,GAjBoF;AAkBzF1B,QAAAA,aAAa,EAAEA,aAlB0E;AAmBzFmB,QAAAA,SAAS,EAAEA,SAnB8E;AAoBzFC,QAAAA,WAAW,EAAEA,WApB4E;AAqBzFG,QAAAA,SAAS,EAAEA,SArB8E;AAsBzFY,QAAAA,cAAc,EAAEA,cAtByE;AAuBzFc,QAAAA,kBAAkB,EAAEA,kBAvBqE;AAwBzF3B,QAAAA,WAAW,EAAEA,WAxB4E;AAyBzFX,QAAAA,UAAU,EAAEA,UAAU,KAAKrB,SAAf,GAA2BqB,UAAU,KAAKsE,WAAW,CAACrI,EAAtD,GAA2D,KAzBkB;AA0BzF4E,QAAAA,cAAc,EAAEA,cA1ByE;AA2BzFxD,QAAAA,cAAc,EAAEyD,wBAAwB,GAAGzD,cAAH,GAAoB,IA3B6B;AA4BzFR,QAAAA,eAAe,EAAEiE,wBAAwB,GAAGjE,eAAH,GAAqB,IA5B2B;AA6BzFE,QAAAA,gBAAgB,EAAE0E,mBAAmB,GAAG1E,gBAAH,GAAsB,IA7B8B;AA8BzFC,QAAAA,aAAa,EAAEyE,mBAAmB,GAAGzE,aAAH,GAAmB,IA9BoC;AA+BzFoI,QAAAA,SAAS,EAAEjO,KAAK,CAAC4B,MA/BwE;AAgCzFsM,QAAAA,WAAW,EAAElO,KAAK,CAACmO,QAhCsE;AAiCzF5D,QAAAA,WAAW,EAAEA,WAjC4E;AAkCzFvI,QAAAA,QAAQ,EAAEA,QAlC+E;AAmCzFmG,QAAAA,SAAS,EAAEA,SAnC8E;AAoCzFiG,QAAAA,kBAAkB,EAAE,CAAC,CAAC9G,WApCmE;AAqCzFmB,QAAAA,YAAY,EAAEA,YArC2E;AAsCzFrG,QAAAA,UAAU,EAAEA,UAtC6E;AAuCzF6G,QAAAA,YAAY,EAAEA,YAvC2E;AAwCzFL,QAAAA,KAAK,EAAEA,KAxCkF;AAyCzFI,QAAAA,eAAe,EAAEA,eAzCwE;AA0CzFkC,QAAAA,YAAY,EAAEA,YA1C2E;AA2CzFJ,QAAAA,iCAAiC,EAAEA,iCA3CsD;AA4CzFuD,QAAAA,cAAc,EAAE5B,WA5CyE;AA6CzF6B,QAAAA,WAAW,EAAE5J,oBA7C4E;AA8CzF6J,QAAAA,KAAK,EAAE7J,oBAAoB,IAAI,CA9C0D;AA+CzFoF,QAAAA,IAAI,EAAEpF,oBAAoB,IAAIwH,kBAAkB,GAAG,CA/CsC;AAgDzFlR,QAAAA,KAAK,EAAEA,KAhDkF;AAiDzFyK,QAAAA,iBAAiB,EAAEA,iBAjDsE;AAkDzFuC,QAAAA,cAAc,EAAEA,cAlDyE;AAmDzFwG,QAAAA,eAAe,EAAEtF,YAnDwE;AAoDzFuF,QAAAA,cAAc,EAAExL,WApDyE;AAqDzF2K,QAAAA,MAAM,EAAEA,MArDiF;AAsDzFF,QAAAA,cAAc,EAAEA,cAtDyE;AAuDzFC,QAAAA,eAAe,EAAEA,eAvDwE;AAwDzF3H,QAAAA,eAAe,EAAE2D,wBAAwB,GAAG3D,eAAH,GAAqB,IAxD2B;AAyDzF0I,QAAAA,cAAc,EAAEA,cAzDyE;AA0DzFC,QAAAA,cAAc,EAAEA,cA1DyE;AA2DzF1G,QAAAA,aAAa,EAAEA,aA3D0E;AA4DzFI,QAAAA,gBAAgB,EAAEkC,WAAW,GAAGlC,gBAAH,GAAsBF,SA5DsC;AA6DzFiD,QAAAA,KAAK,EAAEA,KA7DkF;AA8DzFhH,QAAAA,aAAa,EAAEA,aA9D0E;AA+DzFiH,QAAAA,cAAc,EAAEA,cA/DyE;AAgEzFC,QAAAA,sBAAsB,EAAEA,sBAhEiE;AAiEzFC,QAAAA,oBAAoB,EAAEA,oBAjEmE;AAkEzFC,QAAAA,qBAAqB,EAAEA,qBAlEkE;AAmEzFC,QAAAA,kBAAkB,EAAEA,kBAnEqE;AAoEzFC,QAAAA,kBAAkB,EAAEA,kBApEqE;AAqEzFC,QAAAA,kBAAkB,EAAEA,kBArEqE;AAsEzFC,QAAAA,yBAAyB,EAAEA,yBAtE8D;AAuEzFC,QAAAA,oBAAoB,EAAEA,oBAvEmE;AAwEzFE,QAAAA,0BAA0B,EAAEA,0BAxE6D;AAyEzFC,QAAAA,6BAA6B,EAAEA;AAzE0D,OAA9D,CAA7B;;AA4EA,UAAIjC,qBAAqB,IAAIgB,mBAA7B,EAAkD;AAChDxG,QAAAA,SAAS,CAACqK,YAAV,GAAyB7E,qBAAqB,CAACgB,mBAAmB,CAAC/I,QAAD,EAAW0C,oBAAX,CAApB,CAA9C;;AAEA,YAAIH,SAAS,CAACqK,YAAd,EAA4B;AAC1BrK,UAAAA,SAAS,CAACsK,uBAAV,GAAoCtK,SAAS,CAACuF,IAAV,GAAiB,KAAjB,GAAyBC,qBAAqB,CAACgB,mBAAmB,CAAC/I,QAAD,EAAW0C,oBAAoB,GAAG,CAAlC,CAApB,CAAlF;AACAH,UAAAA,SAAS,CAACuK,sBAAV,GAAmCvK,SAAS,CAACgK,KAAV,GAAkB,KAAlB,GAA0BxE,qBAAqB,CAACgB,mBAAmB,CAAC/I,QAAD,EAAW0C,oBAAoB,GAAG,CAAlC,CAApB,CAAlF;AACAH,UAAAA,SAAS,CAACwK,qBAAV,GAAkChF,qBAAqB,CAACgB,mBAAmB,CAAC/I,QAAQ,GAAG,CAAZ,EAAe0C,oBAAf,CAApB,CAAvD;AACAH,UAAAA,SAAS,CAACyK,wBAAV,GAAqCjF,qBAAqB,CAACgB,mBAAmB,CAAC/I,QAAQ,GAAG,CAAZ,EAAe0C,oBAAf,CAApB,CAA1D;AACD;AACF;;AAED,UAAIqG,mBAAmB,KAAK4B,UAAU,IAAIE,WAAnB,CAAvB,EAAwD;AACtD,YAAIoC,OAAO,GAAGlE,mBAAmB,CAAC/I,QAAD,EAAW0C,oBAAX,CAAjC;;AAEA,YAAIiI,UAAU,IAAIA,UAAU,KAAKsC,OAAjC,EAA0C;AACxC1K,UAAAA,SAAS,CAAC2K,UAAV,GAAuB,IAAvB;AACD;;AAED,YAAIrC,WAAW,IAAIA,WAAW,KAAKoC,OAAnC,EAA4C;AAC1C1K,UAAAA,SAAS,CAACsI,WAAV,GAAwB,IAAxB;AACD;AACF;;AAED,UAAItI,SAAS,CAAC4K,4BAAV,IAA0C5K,SAAS,CAAC6K,sBAApD,IAA8E7K,SAAS,CAAC8K,sBAA5F,EAAoH;AAClH9K,QAAAA,SAAS,CAAC+K,eAAV,GAA4BA,eAAe,CAAC/K,SAAD,EAAY4I,WAAZ,CAA3C;AACD;;AAED,UAAInN,KAAK,CAACkC,OAAN,IAAiBlC,KAAK,CAACkD,eAAN,KAA0BqB,SAAS,CAAC+J,WAAzD,EAAsE;AACpE/J,QAAAA,SAAS,CAACjB,MAAV,GAAmB,IAAnB;AACAiB,QAAAA,SAAS,CAACgL,SAAV,GAAsBvP,KAAK,CAACuP,SAA5B;AACD;;AAED,UAAI9J,iBAAiB,IAAI,CAAClB,SAAS,CAACjD,cAAhC,IAAkDwK,oBAAlD,IAA0E9L,KAAK,CAACwP,QAAhF,IAA4FjL,SAAS,CAACkL,gBAA1G,EAA4H;AAC1HlL,QAAAA,SAAS,CAACnE,OAAV,GAAoBA,OAAO,CAACR,OAA5B;AACA2E,QAAAA,SAAS,CAACmL,SAAV,GAAsBnN,aAAtB;AACD;;AAED,UAAIjB,cAAc,GAAGiD,SAAS,CAACjD,cAA/B;AAAA,UACIqO,OAAO,GAAGpL,SAAS,CAACoL,OADxB;AAEA,UAAIC,WAAW,GAAGtO,cAAc,KAAK,OAArC;AACA,UAAIuO,SAAS,GAAGvO,cAAc,KAAK,KAAnC;AACA,UAAIwO,QAAQ,GAAG,CAACxO,cAAhB;AACA,UAAI+D,eAAe,GAAG,CAAtB;;AAEA,UAAI,OAAOsK,OAAP,KAAmB,UAAvB,EAAmC;AACjCtK,QAAAA,eAAe,GAAGd,SAAS,CAACc,eAAV,GAA4B0K,IAAI,CAACC,GAAL,CAAS,CAAT,EAAYL,OAAO,CAAC;AAChEvH,UAAAA,cAAc,EAAEA,cADgD;AAEhEW,UAAAA,eAAe,EAAEA,eAF+C;AAGhEhD,UAAAA,IAAI,EAAExB,SAAS,CAACwB,IAHgD;AAIhE/K,UAAAA,KAAK,EAAEuJ,SAAS,CAACvJ,KAJ+C;AAKhEgH,UAAAA,QAAQ,EAAEuC,SAAS,CAACvC,QAL4C;AAMhEgL,UAAAA,MAAM,EAAEA,MANwD;AAOhEjF,UAAAA,OAAO,EAAEA,OAPuD;AAQhEa,UAAAA,KAAK,EAAEA;AARyD,SAAD,CAAnB,CAA9C;;AAWA,YAAIgH,WAAJ,EAAiB;AACfvK,UAAAA,eAAe,GAAG,CAAC,GAAG1J,MAAM,CAACV,OAAX,EAAoBoK,eAApB,EAAqC,CAArC,EAAwC0K,IAAI,CAACC,GAAL,CAAS1H,oBAAoB,GAAG5D,oBAAvB,GAA8C,CAAvD,EAA0D,CAA1D,CAAxC,CAAlB;AACD;;AAED,YAAImL,SAAJ,EAAe;AACbxK,UAAAA,eAAe,GAAG,CAAC,GAAG1J,MAAM,CAACV,OAAX,EAAoBoK,eAApB,EAAqC,CAArC,EAAwC0K,IAAI,CAACC,GAAL,CAASzH,kBAAkB,GAAG7D,oBAArB,GAA4C,CAArD,EAAwD,CAAxD,CAAxC,CAAlB;AACD;;AAED,YAAIoL,QAAJ,EAAc;AACZzK,UAAAA,eAAe,GAAG,CAAC,GAAG1J,MAAM,CAACV,OAAX,EAAoBoK,eAApB,EAAqC,CAArC,EAAwC0K,IAAI,CAACC,GAAL,CAASxH,iBAAiB,GAAG9D,oBAApB,GAA2C,CAApD,EAAuD,CAAvD,CAAxC,CAAlB;AACD;;AAED,YAAIW,eAAe,GAAG,CAAtB,EAAyB;AACvBd,UAAAA,SAAS,CAAC0L,aAAV,GAA0BlI,OAAO,CAACtD,KAAR,CAAcyI,cAAd,EAA8BA,cAAc,GAAG7H,eAA/C,EAAgEnG,MAAhE,CAAuE,UAAUgR,GAAV,EAAeC,GAAf,EAAoB;AACnH,gBAAIA,GAAG,CAACrL,EAAJ,KAAWkI,MAAM,CAAClI,EAAtB,EAA0B;AACxBwH,cAAAA,WAAW,CAAC6D,GAAG,CAACrL,EAAL,CAAX,GAAsB,IAAtB;;AAEA,kBAAIkI,MAAM,CAAC1L,cAAP,KAA0B6O,GAAG,CAAC7O,cAAlC,EAAkD;AAChDiL,gBAAAA,gBAAgB,CAAC4D,GAAG,CAACrL,EAAL,CAAhB,GAA2BkI,MAAM,CAAClI,EAAlC;AACA0H,gBAAAA,uBAAuB,CAAC2D,GAAG,CAACrL,EAAL,CAAvB,GAAkCqL,GAAG,CAACzL,oBAAJ,GAA2BsI,MAAM,CAACtI,oBAApE;AACD;AACF;;AAED,mBAAOwL,GAAG,GAAGC,GAAG,CAACF,aAAjB;AACD,WAXyB,EAWvB,CAXuB,CAA1B;AAYD;AACF;;AAED1L,MAAAA,SAAS,CAAC6L,aAAV,GAA0BR,WAAW,GAAGlL,oBAAoB,GAAGW,eAAvB,GAAyC,CAAzC,KAA+C8D,kBAAkB,GAAG,CAAvE,GAA2E0G,SAAS,GAAGnL,oBAAoB,GAAGW,eAAvB,GAAyC,CAAzC,KAA+C6G,kBAAkB,GAAG,CAAvE,GAA2ExH,oBAAoB,GAAGW,eAAvB,GAAyC,CAAzC,KAA+C+D,mBAAmB,GAAG,CAAzQ;AACA7E,MAAAA,SAAS,CAAC8L,cAAV,GAA2BT,WAAW,GAAGlL,oBAAoB,KAAK,CAA5B,GAAgCmL,SAAS,GAAGnL,oBAAoB,KAAK0E,mBAA5B,GAAkD1E,oBAAoB,KAAKyE,kBAA1J;;AAEA,UAAIH,eAAe,IAAI,CAAC1B,WAApB,IAAmC,CAAC,CAAC/C,SAAS,CAACe,KAAnD,EAA0D;AACxDf,QAAAA,SAAS,CAAC+L,YAAV,GAAyB5L,oBAAoB,GAAGH,SAAS,CAACe,KAA1D;AACD;;AAED,UAAIgH,WAAW,CAACU,MAAM,CAAClI,EAAR,CAAf,EAA4B;AAC1BP,QAAAA,SAAS,CAACqJ,MAAV,GAAmB,IAAnB;AACD;;AAED,UAAIrB,gBAAgB,CAACS,MAAM,CAAClI,EAAR,CAApB,EAAiC;AAC/BP,QAAAA,SAAS,CAACgM,mBAAV,GAAgChE,gBAAgB,CAACS,MAAM,CAAClI,EAAR,CAAhD;AACAP,QAAAA,SAAS,CAACiM,sBAAV,GAAmChE,uBAAuB,CAACQ,MAAM,CAAClI,EAAR,CAA1D;AACD;;AAED,UAAI1C,UAAU,IAAI,CAACkF,WAAf,IAA8B6E,iBAAiB,IAAI,IAAvD,EAA6D;AAC3D,SAAC,GAAGrQ,gBAAgB,CAACb,OAArB,EAA8BsJ,SAA9B,EAAyCvE,KAAzC;AACD;;AAED,UAAIuE,SAAS,CAACqJ,MAAd,EAAsB;AACpBrJ,QAAAA,SAAS,CAACuF,IAAV,GAAiB,KAAjB;AACAvF,QAAAA,SAAS,CAAC6L,aAAV,GAA0B,KAA1B;AACD,OAHD,MAGO;AACL7L,QAAAA,SAAS,CAACkM,cAAV,GAA2B9H,uBAAuB,IAAIjE,oBAAoB,GAAG,CAA7E;AACAH,QAAAA,SAAS,CAACmM,gBAAV,GAA6BhI,yBAA7B;;AAEA,YAAI,CAACC,uBAAD,IAA4BK,eAAhC,EAAiD;AAC/CzE,UAAAA,SAAS,CAACkM,cAAV,GAA2B/L,oBAAoB,GAAG,CAAvB,IAA4BA,oBAAoB,IAAIsE,eAAe,CAAC9K,MAA/F;AACD;;AAED,YAAI8K,eAAJ,EAAqB;AACnB,cAAI,CAACzE,SAAS,CAACnC,UAAf,EAA2B;AACzBmC,YAAAA,SAAS,CAACmM,gBAAV,GAA6BpJ,WAAW,GAAGoB,yBAAH,GAA+BhE,oBAAoB,IAAIsE,eAAe,CAAC9K,MAAxC,IAAkDwK,yBAAzH;AACA,gBAAIiI,aAAa,GAAGzH,YAAY,KAAK,CAAjB,IAAsB,CAAC5B,WAAvB,GAAqCyB,eAAe,CAAC/G,QAAQ,GAAGkH,YAAZ,CAApD,GAAgF,IAApG;;AAEA,gBAAIyH,aAAa,IAAIA,aAAa,CAACC,SAA/B,IAA4ClM,oBAAoB,IAAIsE,eAAe,CAAC9K,MAAxF,EAAgG;AAC9FqG,cAAAA,SAAS,CAACmM,gBAAV,GAA6B,KAA7B;AACD;AACF;;AAED,cAAI,CAAC9H,KAAL,EAAY;AACV,gBAAI,CAACtB,WAAD,KAAiB5C,oBAAoB,GAAGsE,eAAe,CAAC9K,MAAvC,IAAiDuO,WAAlE,CAAJ,EAAoF;AAClFlI,cAAAA,SAAS,CAACmM,gBAAV,GAA6BnG,WAA7B;AACD;;AAED,gBAAIhG,SAAS,CAACnC,UAAd,EAA0B;AACxBmC,cAAAA,SAAS,CAACmM,gBAAV,GAA6BnM,SAAS,CAACnC,UAAV,CAAqByO,SAArB,GAAiC,CAAC,CAACvJ,WAAnC,GAAiDA,WAAW,GAAG,IAAH,GAAU5C,oBAAoB,GAAGH,SAAS,CAACnC,UAAV,CAAqBkD,KAA5C,IAAqDf,SAAS,CAACnC,UAAV,CAAqBkD,KAArB,IAA8B0D,eAAe,CAAC9K,MAAtM;AACAqG,cAAAA,SAAS,CAACuM,aAAV,GAA0BpD,cAAc,IAAIC,eAAlB,IAAqC,CAACnD,gBAAD,IAAqB,CAAClD,WAArF;AACD,aAHD,MAGO,IAAI4B,YAAY,KAAK,CAAjB,IAAsB,CAAC5B,WAA3B,EAAwC;AAC7C/C,cAAAA,SAAS,CAACuM,aAAV,GAA0BpM,oBAAoB,IAAIsE,eAAe,CAAC9K,MAAlE;AACD;;AAED,gBAAI8L,YAAY,IAAI,CAACH,OAAjB,IAA4BnB,yBAAhC,EAA2D;AACzDnE,cAAAA,SAAS,CAACmM,gBAAV,GAA6BhM,oBAAoB,KAAKH,SAAS,CAACnC,UAAV,GAAuBmC,SAAS,CAACnC,UAAV,CAAqBkD,KAA5C,GAAoD0D,eAAe,CAAC9K,MAAzE,CAAjD;AACD;AACF,WAfD,MAeO,IAAI8D,QAAQ,GAAG,CAAX,IAAgB0G,yBAApB,EAA+C;AACpD,gBAAI1G,QAAQ,KAAK8G,cAAjB,EAAiC;AAC/BvE,cAAAA,SAAS,CAACmM,gBAAV,GAA6BhM,oBAAoB,IAAIsE,eAAe,CAAC9K,MAArE;AACD,aAFD,MAEO;AACLqG,cAAAA,SAAS,CAACmM,gBAAV,GAA6B1H,eAAe,GAAGtE,oBAAoB,IAAIsE,eAAe,CAAC9K,MAA3C,GAAoD,IAAhG;AACD;AACF;AACF;;AAED,YAAI2L,OAAJ,EAAa;AACXtF,UAAAA,SAAS,CAACmM,gBAAV,GAA6B1O,QAAQ,GAAGiI,cAAc,GAAG,CAA5B,IAAiCM,WAA9D;AACD;;AAED,YAAIqF,WAAW,IAAIrL,SAAS,CAAC6L,aAA7B,EAA4C;AAC1C7L,UAAAA,SAAS,CAACwM,eAAV,GAA4B,IAA5B;AACD;;AAED,YAAIlB,SAAS,IAAInL,oBAAoB,KAAK0E,mBAA1C,EAA+D;AAC7D7E,UAAAA,SAAS,CAACkM,cAAV,GAA2B,IAA3B;AACD;;AAED,YAAIlM,SAAS,CAACnC,UAAV,IAAwBsC,oBAAoB,IAAIH,SAAS,CAACnC,UAAV,CAAqBkD,KAArB,GAA6B,CAA7E,IAAkF,CAACgC,WAAnF,IAAkGtH,KAAK,CAACwK,gBAA5G,EAA8H;AAC5HjG,UAAAA,SAAS,CAACkM,cAAV,GAA2B,KAA3B;AACD;;AAED,YAAIlM,SAAS,CAAC0E,YAAd,EAA4B;AAC1B1E,UAAAA,SAAS,CAACmM,gBAAV,GAA6B7G,OAA7B;AACAtF,UAAAA,SAAS,CAACuM,aAAV,GAA0BpM,oBAAoB,GAAGH,SAAS,CAAC0E,YAAV,CAAuB3D,KAAxE;;AAEA,cAAIf,SAAS,CAAC0E,YAAV,CAAuB+H,QAAvB,IAAmC,OAAvC,EAAgD;AAC9CzM,YAAAA,SAAS,CAACuM,aAAV,GAA0BpM,oBAAoB,IAAIH,SAAS,CAAC0E,YAAV,CAAuB3D,KAAzE;AACAf,YAAAA,SAAS,CAACmM,gBAAV,GAA6B,KAA7B;AACD;;AAEDnM,UAAAA,SAAS,CAACkM,cAAV,GAA2B9H,uBAAuB,GAAG,IAAH,GAAUjE,oBAAoB,IAAIH,SAAS,CAAC0E,YAAV,CAAuB3D,KAA3G;;AAEA,cAAIZ,oBAAoB,GAAGH,SAAS,CAAC0E,YAAV,CAAuB3D,KAA9C,IAAuDZ,oBAAoB,IAAIsE,eAAe,CAAC9K,MAA/F,IAAyG,CAACoJ,WAA9G,EAA2H;AACzH/C,YAAAA,SAAS,CAACkM,cAAV,GAA2B,KAA3B;AACD;;AAED,cAAI/L,oBAAoB,KAAK,CAA7B,EAAgC;AAC9BH,YAAAA,SAAS,CAACkM,cAAV,GAA2B,KAA3B;AACD;;AAEDlM,UAAAA,SAAS,CAAC+L,YAAV,GAAyB,CAAChJ,WAA1B;AACD;;AAED,YAAI6B,kBAAkB,KAAKzE,oBAAvB,IAA+CsD,cAAnD,EAAmE;AACjEzD,UAAAA,SAAS,CAACkM,cAAV,GAA2B,KAA3B;AACD;;AAED,YAAIlM,SAAS,CAAC0M,iBAAV,IAA+B1G,WAAnC,EAAgD;AAC9ChG,UAAAA,SAAS,CAACmM,gBAAV,GAA6B,KAA7B;AACD;;AAED,YAAInM,SAAS,CAACuF,IAAd,EAAoB;AAClBvF,UAAAA,SAAS,CAACwM,eAAV,GAA4B,IAA5B;AACD;;AAED,YAAIG,UAAU,GAAGnJ,OAAO,CAACmF,cAAc,GAAG,CAAlB,CAAxB;AACA,YAAIiE,UAAU,GAAGpJ,OAAO,CAACmF,cAAc,GAAG,CAAlB,CAAxB;;AAEA,YAAIiE,UAAU,IAAIA,UAAU,CAACC,eAAX,KAA+B5J,SAA7C,IAA0D,EAAEoI,WAAW,IAAIrL,SAAS,CAAC6L,aAA3B,CAA9D,EAAyG;AACvG7L,UAAAA,SAAS,CAACwM,eAAV,GAA4BI,UAAU,CAACC,eAAvC;AACD;;AAED,YAAIF,UAAU,IAAIA,UAAU,CAACG,cAAX,KAA8B7J,SAAhD,EAA2D;AACzDjD,UAAAA,SAAS,CAACkM,cAAV,GAA2BS,UAAU,CAACG,cAAtC;AACD;;AAED,YAAIlE,WAAW,CAAC4D,eAAZ,KAAgCvJ,SAApC,EAA+C;AAC7CjD,UAAAA,SAAS,CAACwM,eAAV,GAA4B5D,WAAW,CAAC4D,eAAxC;AACD;;AAED,YAAI5D,WAAW,CAACsD,cAAZ,KAA+BjJ,SAAnC,EAA8C;AAC5CjD,UAAAA,SAAS,CAACkM,cAAV,GAA2BtD,WAAW,CAACsD,cAAvC;AACD;AACF;;AAED,UAAIlM,SAAS,CAACkL,gBAAd,EAAgC;AAC9BlL,QAAAA,SAAS,CAAC+M,gBAAV,GAA6BC,cAA7B;AACAhN,QAAAA,SAAS,CAACiN,iBAAV,GAA8BC,eAA9B;AACAlN,QAAAA,SAAS,CAACmN,kBAAV,GAA+BC,gBAA/B;AACApN,QAAAA,SAAS,CAACqN,uBAAV,GAAoCC,qBAApC;AACAtN,QAAAA,SAAS,CAACuN,oBAAV,GAAiCC,kBAAjC;AACD;;AAED1F,MAAAA,kBAAkB,GAAGA,kBAAkB,IAAI9H,SAAS,CAACmM,gBAArD;AACAtE,MAAAA,eAAe,GAAGA,eAAe,IAAI7H,SAAS,CAACuM,aAA/C;AACA,aAAOvM,SAAP;AACD,KA7VoB,CAArB;AA8VA9D,IAAAA,UAAU,CAACb,OAAX,GAAqBkN,aAArB;;AAEA,QAAI9M,KAAK,CAACgS,qBAAV,EAAiC;AAC/BhS,MAAAA,KAAK,CAACiS,UAAN,IAAoBjS,KAAK,CAACiS,UAAN,CAAiBxR,UAAU,CAACb,OAA5B,CAApB;AACD;;AAEDW,IAAAA,YAAY,CAACX,OAAb,GAAuBwM,eAAvB;AACA5L,IAAAA,eAAe,CAACZ,OAAhB,GAA0ByM,kBAA1B;AACA,WAAOU,cAAP;AACD,GA1cD;;AA4cA,MAAIwE,cAAc,GAAG,CAAC,GAAGlW,MAAM,CAAC0F,WAAX,EAAwB,UAAU/F,KAAV,EAAiBuJ,SAAjB,EAA4B;AACvE,QAAIvE,KAAK,CAACkS,UAAV,EAAsB;AACpBlS,MAAAA,KAAK,CAACkS,UAAN,CAAiB;AACflX,QAAAA,KAAK,EAAEA,KADQ;AAEf+K,QAAAA,IAAI,EAAExB,SAAS,CAACwB,IAFD;AAGfoM,QAAAA,KAAK,EAAEnS,KAAK,CAACoS,SAAN,CAAgB7N,SAAS,CAACwB,IAA1B,CAHQ;AAIfsM,QAAAA,QAAQ,EAAE9N,SAAS,CAACO,EAJL;AAKfwJ,QAAAA,WAAW,EAAE/J,SAAS,CAACG,oBALR;AAMf1C,QAAAA,QAAQ,EAAEuC,SAAS,CAACvC,QANL;AAOfuC,QAAAA,SAAS,EAAEA;AAPI,OAAjB;AASD;AACF,GAZoB,EAYlB,CAACvE,KAAK,CAACkS,UAAP,CAZkB,CAArB;AAaA,MAAIT,eAAe,GAAG,CAAC,GAAGpW,MAAM,CAAC0F,WAAX,EAAwB,UAAU/F,KAAV,EAAiBuJ,SAAjB,EAA4B;AACxE,QAAIvE,KAAK,CAACsS,WAAV,EAAuB;AACrBtS,MAAAA,KAAK,CAACsS,WAAN,CAAkB;AAChBvM,QAAAA,IAAI,EAAExB,SAAS,CAACwB,IADA;AAEhB/K,QAAAA,KAAK,EAAEA,KAFS;AAGhBmX,QAAAA,KAAK,EAAEnS,KAAK,CAACoS,SAAN,CAAgB7N,SAAS,CAACwB,IAA1B,CAHS;AAIhBsM,QAAAA,QAAQ,EAAE9N,SAAS,CAACO,EAJJ;AAKhBwJ,QAAAA,WAAW,EAAE/J,SAAS,CAACG,oBALP;AAMhB1C,QAAAA,QAAQ,EAAEuC,SAAS,CAACvC,QANJ;AAOhBuC,QAAAA,SAAS,EAAEA;AAPK,OAAlB;AASD;AACF,GAZqB,EAYnB,CAACvE,KAAK,CAACsS,WAAP,CAZmB,CAAtB;AAaA,MAAIX,gBAAgB,GAAG,CAAC,GAAGtW,MAAM,CAAC0F,WAAX,EAAwB,UAAUwD,SAAV,EAAqB;AAClE,QAAIvE,KAAK,CAACuS,YAAV,EAAwB;AACtBvS,MAAAA,KAAK,CAACuS,YAAN,CAAmB;AACjBxM,QAAAA,IAAI,EAAExB,SAAS,CAACwB,IADC;AAEjBoM,QAAAA,KAAK,EAAEnS,KAAK,CAACoS,SAAN,CAAgB7N,SAAS,CAACwB,IAA1B,CAFU;AAGjBuI,QAAAA,WAAW,EAAE/J,SAAS,CAACG,oBAHN;AAIjB2N,QAAAA,QAAQ,EAAE9N,SAAS,CAACO,EAJH;AAKjB9C,QAAAA,QAAQ,EAAEuC,SAAS,CAACvC,QALH;AAMjBuC,QAAAA,SAAS,EAAEA;AANM,OAAnB;AAQD;AACF,GAXsB,EAWpB,CAACvE,KAAK,CAACuS,YAAP,CAXoB,CAAvB;AAYA,MAAIV,qBAAqB,GAAG,CAAC,GAAGxW,MAAM,CAAC0F,WAAX,EAAwB,UAAU/F,KAAV,EAAiBuJ,SAAjB,EAA4B;AAC9E,QAAIvE,KAAK,CAACwS,iBAAV,EAA6B;AAC3BxS,MAAAA,KAAK,CAACwS,iBAAN,CAAwB;AACtBxX,QAAAA,KAAK,EAAEA,KADe;AAEtB+K,QAAAA,IAAI,EAAExB,SAAS,CAACwB,IAFM;AAGtBoM,QAAAA,KAAK,EAAEnS,KAAK,CAACoS,SAAN,CAAgB7N,SAAS,CAACwB,IAA1B,CAHe;AAItBsM,QAAAA,QAAQ,EAAE9N,SAAS,CAACO,EAJE;AAKtBwJ,QAAAA,WAAW,EAAE/J,SAAS,CAACG,oBALD;AAMtB1C,QAAAA,QAAQ,EAAEuC,SAAS,CAACvC,QANE;AAOtBuC,QAAAA,SAAS,EAAEA;AAPW,OAAxB;AASD;AACF,GAZ2B,EAYzB,CAACvE,KAAK,CAACwS,iBAAP,CAZyB,CAA5B;AAaA,MAAIT,kBAAkB,GAAG,CAAC,GAAG1W,MAAM,CAAC0F,WAAX,EAAwB,UAAU/F,KAAV,EAAiBuJ,SAAjB,EAA4B;AAC3E,QAAIvE,KAAK,CAACyS,cAAV,EAA0B;AACxBzS,MAAAA,KAAK,CAACyS,cAAN,CAAqB;AACnBzX,QAAAA,KAAK,EAAEA,KADY;AAEnB+K,QAAAA,IAAI,EAAExB,SAAS,CAACwB,IAFG;AAGnBoM,QAAAA,KAAK,EAAEnS,KAAK,CAACoS,SAAN,CAAgB7N,SAAS,CAACwB,IAA1B,CAHY;AAInBsM,QAAAA,QAAQ,EAAE9N,SAAS,CAACO,EAJD;AAKnBwJ,QAAAA,WAAW,EAAE/J,SAAS,CAACG,oBALJ;AAMnB1C,QAAAA,QAAQ,EAAEuC,SAAS,CAACvC,QAND;AAOnBuC,QAAAA,SAAS,EAAEA;AAPQ,OAArB;AASD;AACF,GAZwB,EAYtB,CAACvE,KAAK,CAACyS,cAAP,CAZsB,CAAzB;AAaA,MAAI/D,cAAc,GAAG,CAAC,GAAGrT,MAAM,CAAC0F,WAAX,EAAwB,UAAU2R,SAAV,EAAqB;AAChE,QAAIC,GAAG,GAAG1U,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBuJ,SAAzC,GAAqDvJ,SAAS,CAAC,CAAD,CAA9D,GAAoE,CAA9E;AACA,QAAI2U,iBAAiB,GAAG3U,SAAS,CAACC,MAAV,GAAmB,CAAnB,GAAuBD,SAAS,CAAC,CAAD,CAAhC,GAAsCuJ,SAA9D;AACA,QAAIqL,IAAI,GAAG7S,KAAK,CAAC+H,OAAjB;AACA,QAAIoI,GAAJ;AACA,QAAI2C,QAAJ;;AAEA,QAAI,CAACH,GAAL,EAAU;AACRA,MAAAA,GAAG,GAAG,CAAN;AACD;;AAEDA,IAAAA,GAAG,GAAGA,GAAG,IAAI,CAAP,GAAW,CAAX,GAAe,CAAC,CAAtB;AACA,QAAII,YAAY,GAAGJ,GAAG,IAAI,CAAP,GAAW,CAAX,GAAeE,IAAI,CAAC3U,MAAL,GAAc,CAAhD;AACA,QAAI8U,SAAS,GAAG,EAAhB;;AAEA,WAAOH,IAAI,CAACE,YAAD,CAAX,EAA2B;AACzB5C,MAAAA,GAAG,GAAG0C,IAAI,CAACE,YAAD,CAAV;;AAEA,UAAI5C,GAAG,CAACX,QAAJ,IAAgBxP,KAAK,CAACwP,QAAN,IAAkBW,GAAG,CAACX,QAAJ,KAAiB,KAAvD,EAA8D;AAC5DsD,QAAAA,QAAQ,GAAG3C,GAAG,CAACzL,oBAAf;;AAEA,YAAIoO,QAAQ,IAAIJ,SAAhB,EAA2B;AACzBM,UAAAA,SAAS,CAACpV,IAAV,CAAeuS,GAAf;AACD,SAFD,MAEO;AACL,cAAIwC,GAAG,GAAG,CAAV,EAAa;AACX,gBAAIG,QAAQ,GAAGJ,SAAf,EAA0B;AACxBM,cAAAA,SAAS,CAACpV,IAAV,CAAeuS,GAAf;AACD;AACF,WAJD,MAIO,IAAIwC,GAAG,GAAG,CAAV,EAAa;AAClB,gBAAIG,QAAQ,GAAGJ,SAAf,EAA0B;AACxBM,cAAAA,SAAS,CAACpV,IAAV,CAAeuS,GAAf;AACD;AACF;AACF;AACF;;AAED4C,MAAAA,YAAY,IAAIJ,GAAhB;AACD;;AAED,QAAI,CAACK,SAAS,CAAC9U,MAAf,EAAuB;AACrByQ,MAAAA,cAAc,CAACgE,GAAD,EAAMC,iBAAiB,GAAGF,SAAH,GAAeC,GAAG,GAAG,CAAN,GAAU,CAAV,GAAc3S,KAAK,CAAC+H,OAAN,CAAc7J,MAAd,GAAuB,CAA3E,CAAd;AACA,aAAO+U,OAAO,CAACC,MAAR,CAAe,IAAf,CAAP;AACD;;AAEDF,IAAAA,SAAS,CAACpQ,IAAV,CAAe,UAAUuQ,CAAV,EAAaC,CAAb,EAAgB;AAC7B,aAAOT,GAAG,GAAG,CAAN,GAAUQ,CAAC,GAAGC,CAAd,GAAkBA,CAAC,GAAGD,CAA7B;AACD,KAFD;AAGA,WAAO,IAAIF,OAAJ,CAAY,UAAUI,OAAV,EAAmBH,MAAnB,EAA2B;AAC5C,UAAII,SAAS,GAAG,SAASA,SAAT,CAAmBT,IAAnB,EAAyB;AACvC,YAAIxT,KAAK,GAAGpB,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBuJ,SAAzC,GAAqDvJ,SAAS,CAAC,CAAD,CAA9D,GAAoE,CAAhF;AACA+B,QAAAA,KAAK,CAACuT,0BAAN,CAAiC3T,OAAjC,CAAyC4T,IAAzC,CAA8C,YAAY;AACxD,cAAIC,OAAO,GAAG,SAASA,OAAT,GAAmB;AAC/Bb,YAAAA,iBAAiB,GAAGjE,cAAc,CAACgE,GAAD,EAAMD,SAAN,EAAiB,IAAjB,CAAjB,GAA0CY,SAAS,CAACT,IAAD,EAAOxT,KAAK,GAAG,CAAf,CAApE;AACD,WAFD;;AAIA,cAAI8Q,GAAG,GAAG0C,IAAI,CAACxT,KAAD,CAAd;;AAEA,cAAI,CAAC8Q,GAAL,EAAU;AACRxB,YAAAA,cAAc,CAACgE,GAAD,EAAMC,iBAAiB,GAAGF,SAAH,GAAeC,GAAG,GAAG,CAAN,GAAU,CAAV,GAAc3S,KAAK,CAAC+H,OAAN,CAAc7J,MAAd,GAAuB,CAA3E,CAAd;AACA,mBAAOgV,MAAM,CAAC,kBAAD,CAAb;AACD;;AAED,cAAI9R,IAAI,GAAGyD,WAAW,CAACsL,GAAG,CAACrL,EAAL,CAAtB;;AAEA,cAAI,CAAC1D,IAAL,EAAW;AACT,gBAAIpB,KAAK,CAAC0T,cAAV,EAA0B;AACxB1T,cAAAA,KAAK,CAAC0T,cAAN,CAAqBvD,GAAG,CAACrL,EAAzB,EAA6B0C,SAA7B,EAAwC,YAAY;AAClDmM,gBAAAA,UAAU,CAAC,YAAY;AACrBL,kBAAAA,SAAS,CAACT,IAAD,EAAOxT,KAAP,CAAT;AACD,iBAFS,EAEP,EAFO,CAAV;AAGD,eAJD;AAKD;;AAED;AACD;;AAEDsU,UAAAA,UAAU,CAAC,YAAY;AACrB,mBAAOvS,IAAI,CAACkS,SAAL,CAAe9L,SAAf,EAA0BiM,OAA1B,EAAmCD,IAAnC,CAAwCH,OAAxC,EAAiDO,KAAjD,CAAuDH,OAAvD,CAAP;AACD,WAFS,EAEP,CAFO,CAAV;AAGD,SA7BD,EA6BGG,KA7BH,CA6BS,UAAUC,KAAV,EAAiB;AACxB,iBAAOX,MAAM,CAACW,KAAD,CAAb;AACD,SA/BD;AAgCA;AACD,OAnCD;;AAqCAP,MAAAA,SAAS,CAACN,SAAD,EAAY,CAAZ,CAAT;AACD,KAvCM,CAAP;AAwCD,GAvFoB,EAuFlB,CAAChT,KAAK,CAAC+H,OAAP,EAAgB/H,KAAK,CAACwP,QAAtB,EAAgCxP,KAAK,CAACuT,0BAAtC,EAAkEvT,KAAK,CAACgC,QAAxE,EAAkFhC,KAAK,CAAC0T,cAAxF,CAvFkB,CAArB;AAwFA,MAAI/E,cAAc,GAAG,CAAC,GAAGtT,MAAM,CAAC0F,WAAX,EAAwB,UAAU4R,GAAV,EAAerE,WAAf,EAA4BsE,iBAA5B,EAA+C;AAC1F,QAAI5S,KAAK,CAAC8T,qBAAV,EAAiC;AAC/B9T,MAAAA,KAAK,CAAC8T,qBAAN,CAA4B9T,KAAK,CAACgC,QAAN,GAAiB,IAAI2Q,GAAjD,EAAsD;AACpDoB,QAAAA,SAAS,EAAEpB,GAAG,IAAI,CAAC,CAAR,GAAY,KAAZ,GAAoB;AADqB,OAAtD,EAEG,YAAY;AACb,YAAI3S,KAAK,CAAC2O,cAAV,EAA0B;AACxB3O,UAAAA,KAAK,CAAC2O,cAAN,CAAqB3O,KAAK,CAACgC,QAAN,GAAiB2Q,GAAtC,EAA2CA,GAA3C,EAAgDrE,WAAhD,EAA6DsE,iBAA7D;AACD;AACF,OAND;AAOD;AACF,GAVoB,EAUlB,CAAC5S,KAAK,CAACgC,QAAP,EAAiBhC,KAAK,CAAC8T,qBAAvB,EAA8C9T,KAAK,CAAC2O,cAApD,CAVkB,CAArB;AAWA,MAAIW,eAAe,GAAG,CAAC,GAAGjU,MAAM,CAAC0F,WAAX,EAAwB,UAAUwD,SAAV,EAAqB4I,WAArB,EAAkC6G,CAAlC,EAAqC;AACjFA,IAAAA,CAAC,CAACC,eAAF;;AAEA,QAAI9G,WAAW,CAACmC,eAAhB,EAAiC;AAC/BnC,MAAAA,WAAW,CAACmC,eAAZ,CAA4B0E,CAA5B;AACD;;AAED,QAAIhU,KAAK,CAACsP,eAAV,EAA2B;AACzBtP,MAAAA,KAAK,CAACsP,eAAN,CAAsB0E,CAAtB,EAAyBzP,SAAzB;AACD;AACF,GAVqB,EAUnB,CAACvE,KAAK,CAACsP,eAAP,CAVmB,CAAtB;AAWA,MAAI3I,oBAAoB,GAAG,CAAC,GAAGtL,MAAM,CAAC0F,WAAX,EAAwB,UAAUwD,SAAV,EAAqB;AACtE,QAAIkB,iBAAiB,GAAGD,oBAAoB,EAA5C;;AAEA,QAAI,CAACC,iBAAL,EAAwB;AACtB,aAAO,IAAP;AACD;;AAED,QAAIyO,aAAa,GAAGlU,KAAK,CAACmU,kBAAN,CAAyBjW,MAAzB,GAAkC8B,KAAK,CAACmU,kBAAN,CAAyBjW,MAA3D,GAAoE8B,KAAK,CAACoC,UAAN,IAAoB,CAACpC,KAAK,CAACsH,WAA3B,GAAyCtH,KAAK,CAACoC,UAAN,CAAiBkD,KAAjB,GAAyB,CAAlE,GAAsE,CAA9J;AACA,QAAI8O,WAAW,GAAGpU,KAAK,CAAC+H,OAAN,CAAc7J,MAAd,GAAuB8B,KAAK,CAACqU,gBAAN,CAAuBnW,MAA9C,GAAuD,CAAzE;AACA,QAAIqI,gBAAgB,GAAGjG,sBAAsB,CAACV,OAAvB,IAAkC,IAAlC,GAAyCI,KAAK,CAACM,sBAAN,IAAgC,CAAzE,GAA6EA,sBAAsB,CAACV,OAA3H;AACA2G,IAAAA,gBAAgB,GAAGwJ,IAAI,CAACC,GAAL,CAASzJ,gBAAT,EAA2B2N,aAA3B,CAAnB;;AAEA,QAAII,uBAAuB,GAAG,SAASA,uBAAT,GAAmC;AAC/D,UAAI/P,SAAJ,EAAe;AACb,eAAOA,SAAS,CAACgC,gBAAD,CAAT,CAA4BgK,mBAAnC,EAAwD;AACtDhK,UAAAA,gBAAgB;AACjB;AACF;AACF,KAND;;AAQA,QAAIvG,KAAK,CAACmB,iBAAN,IAA2B,IAA/B,EAAqC;AACnC,UAAIoT,oBAAoB,GAAGhO,gBAAgB,GAAGvG,KAAK,CAACmB,iBAApD;AACAoT,MAAAA,oBAAoB,GAAGxE,IAAI,CAACyE,GAAL,CAASD,oBAAT,EAA+BH,WAA/B,CAAvB;;AAEA,UAAIG,oBAAoB,GAAGvU,KAAK,CAACmB,iBAA7B,IAAkDoF,gBAAtD,EAAwE;AACtEA,QAAAA,gBAAgB,GAAGwJ,IAAI,CAACC,GAAL,CAASuE,oBAAoB,GAAGvU,KAAK,CAACmB,iBAAtC,EAAyD+S,aAAzD,CAAnB;AACD;;AAED,UAAIK,oBAAoB,GAAG,CAA3B,EAA8B;AAC5B,eAAO;AACLzN,UAAAA,KAAK,EAAE,CADF;AAELC,UAAAA,GAAG,EAAE;AAFA,SAAP;AAID;;AAEDuN,MAAAA,uBAAuB;AACvB,aAAO;AACLxN,QAAAA,KAAK,EAAEP,gBADF;AAELQ,QAAAA,GAAG,EAAEwN;AAFA,OAAP;AAID;;AAED,WAAO,IAAP;AACD,GA3C0B,EA2CxB,CAACvU,KAAK,CAACyF,iBAAP,EAA0BzF,KAAK,CAACmB,iBAAhC,EAAmDnB,KAAK,CAACmU,kBAAzD,EAA6EnU,KAAK,CAACqU,gBAAnF,EAAqGrU,KAAK,CAACsH,WAA3G,EAAwHtH,KAAK,CAACoC,UAA9H,EAA0IpC,KAAK,CAACM,sBAAhJ,EAAwKN,KAAK,CAAC+H,OAA9K,CA3CwB,CAA3B;AA4CA,MAAI0M,sBAAsB,GAAG,CAAC,GAAGpZ,MAAM,CAAC0F,WAAX,EAAwB,UAAU2T,KAAV,EAAiBnQ,SAAjB,EAA4B;AAC/E,QAAIoQ,kBAAkB,GAAGpQ,SAAS,CAACrF,MAAV,CAAiB,UAAU0V,KAAV,EAAiBrQ,SAAjB,EAA4B;AACpE,aAAOqQ,KAAK,IAAIrQ,SAAS,CAACc,eAAV,GAA4B,CAA5B,GAAgCd,SAAS,CAACc,eAAV,GAA4B,CAA5D,GAAgE,CAApE,CAAZ;AACD,KAFwB,EAEtB,CAFsB,CAAzB;;AAIA,QAAI,CAACsP,kBAAL,EAAyB;AACvB,aAAOD,KAAP;AACD;;AAED,QAAIA,KAAK,CAAC5N,KAAN,GAAc9G,KAAK,CAACmJ,kBAAxB,EAA4C;AAC1CuL,MAAAA,KAAK,CAAC5N,KAAN,GAAc9G,KAAK,CAACmJ,kBAApB;AACD;;AAED,QAAIuL,KAAK,CAAC5N,KAAN,GAAc6N,kBAAlB,EAAsC;AACpCD,MAAAA,KAAK,CAAC5N,KAAN,IAAe6N,kBAAf;AACA,aAAOD,KAAP;AACD;;AAEDC,IAAAA,kBAAkB,IAAID,KAAK,CAAC5N,KAA5B;AACA4N,IAAAA,KAAK,CAAC5N,KAAN,GAAc,CAAd;;AAEA,QAAI6N,kBAAJ,EAAwB;AACtBD,MAAAA,KAAK,CAAC3N,GAAN,IAAa4N,kBAAb;AACD;;AAED,WAAOD,KAAP;AACD,GA1B4B,EA0B1B,EA1B0B,CAA7B;;AA4BA,MAAIG,iBAAiB,GAAG,SAASA,iBAAT,CAA2BzO,CAA3B,EAA8B0O,EAA9B,EAAkCC,KAAlC,EAAyC;AAC/D,QAAIC,UAAU,GAAGhV,KAAK,CAACgV,UAAvB;AAAA,QACIhN,cAAc,GAAGhI,KAAK,CAACgI,cAD3B;AAAA,QAEIiN,YAAY,GAAGjV,KAAK,CAACiV,YAFzB;AAAA,QAGId,kBAAkB,GAAGnU,KAAK,CAACmU,kBAH/B;AAAA,QAIIE,gBAAgB,GAAGrU,KAAK,CAACqU,gBAJ7B;AAAA,QAKI9Q,kBAAkB,GAAGvD,KAAK,CAACuD,kBAL/B;AAAA,QAMInB,UAAU,GAAGpC,KAAK,CAACoC,UANvB;AAAA,QAOI2F,OAAO,GAAG/H,KAAK,CAAC+H,OAPpB;AAQA,QAAItC,iBAAiB,GAAGD,oBAAoB,EAA5C;AACA,QAAIjB,SAAJ;;AAEA,QAAI,CAACkB,iBAAL,EAAwB;AACtBlB,MAAAA,SAAS,GAAGC,gBAAgB,EAA5B;AACD,KAFD,MAEO;AACL,UAAI0Q,oBAAoB,GAAG,EAA3B;AACA,UAAIC,kBAAkB,GAAG,EAAzB;AACA,UAAIC,cAAc,GAAG,EAArB;AACA,UAAI3O,WAAJ;;AAEA,UAAIlD,kBAAJ,EAAwB;AACtBgB,QAAAA,SAAS,GAAGC,gBAAgB,EAA5B;;AAEA,YAAIwD,cAAJ,EAAoB;AAClBkN,UAAAA,oBAAoB,GAAG3Q,SAAS,CAACE,KAAV,CAAgB,CAAhB,EAAmB0P,kBAAkB,CAACjW,MAAtC,CAAvB;AACD,SAFD,MAEO,IAAIkE,UAAJ,EAAgB;AACrBgT,UAAAA,cAAc,GAAG7Q,SAAS,CAACE,KAAV,CAAgB,CAAhB,EAAmBrC,UAAU,CAACkD,KAAX,GAAmB,CAAtC,CAAjB;AACD;;AAED,YAAI2P,YAAJ,EAAkB;AAChBE,UAAAA,kBAAkB,GAAG5Q,SAAS,CAACE,KAAV,CAAgBsD,OAAO,CAAC7J,MAAR,GAAiBmW,gBAAgB,CAACnW,MAAlD,EAA0D6J,OAAO,CAAC7J,MAAlE,CAArB;AACD;;AAEDuI,QAAAA,WAAW,GAAGE,oBAAoB,CAACpC,SAAD,CAAlC;;AAEA,YAAIkC,WAAJ,EAAiB;AACfA,UAAAA,WAAW,GAAGgO,sBAAsB,CAAChO,WAAD,EAAclC,SAAd,CAApC;AACAA,UAAAA,SAAS,GAAGA,SAAS,CAACE,KAAV,CAAgBgC,WAAW,CAACK,KAA5B,EAAmCL,WAAW,CAACM,GAAZ,GAAkB,CAArD,CAAZ;AACD;AACF,OAnBD,MAmBO;AACL,YAAIsO,aAAJ,EAAmBC,aAAnB;;AAEA7O,QAAAA,WAAW,GAAGE,oBAAoB,EAAlC;AACApC,QAAAA,SAAS,GAAGC,gBAAgB,CAAC,CAAC6Q,aAAa,GAAG5O,WAAjB,MAAkC,IAAlC,IAA0C4O,aAAa,KAAK,KAAK,CAAjE,GAAqE,KAAK,CAA1E,GAA8EA,aAAa,CAACvO,KAA7F,EAAoG,CAAC,CAACwO,aAAa,GAAG7O,WAAjB,MAAkC,IAAlC,IAA0C6O,aAAa,KAAK,KAAK,CAAjE,GAAqE,KAAK,CAA1E,GAA8EA,aAAa,CAACvO,GAA7F,KAAqG,CAAzM,CAA5B;;AAEA,YAAIiB,cAAJ,EAAoB;AAClBkN,UAAAA,oBAAoB,GAAG1Q,gBAAgB,CAAC,CAAD,EAAI2P,kBAAkB,CAACjW,MAAnB,GAA4B,CAAhC,CAAvC;AACD,SAFD,MAEO,IAAIkE,UAAJ,EAAgB;AACrBgT,UAAAA,cAAc,GAAG5Q,gBAAgB,CAAC,CAAD,EAAIpC,UAAU,CAACkD,KAAX,GAAmB,CAAnB,GAAuB,CAA3B,CAAjC;AACD;;AAED,YAAI2P,YAAJ,EAAkB;AAChBE,UAAAA,kBAAkB,GAAG3Q,gBAAgB,CAAC6P,gBAAgB,CAAC,CAAD,CAAhB,CAAoB3P,oBAArB,EAA2CqD,OAAO,CAAC7J,MAAR,GAAiB,CAA5D,CAArC;AACD;AACF;;AAED,UAAI8J,cAAJ,EAAoB;AAClBzD,QAAAA,SAAS,GAAG,GAAGV,MAAH,CAAU,CAAC,GAAG1I,mBAAmB,CAACF,OAAxB,EAAiCia,oBAAjC,CAAV,EAAkE,CAAC,GAAG/Z,mBAAmB,CAACF,OAAxB,EAAiCsJ,SAAjC,CAAlE,CAAZ;AACD,OAFD,MAEO,IAAInC,UAAJ,EAAgB;AACrBmC,QAAAA,SAAS,GAAG,GAAGV,MAAH,CAAU,CAAC,GAAG1I,mBAAmB,CAACF,OAAxB,EAAiCma,cAAjC,CAAV,EAA4D,CAAC,GAAGja,mBAAmB,CAACF,OAAxB,EAAiCsJ,SAAjC,CAA5D,CAAZ;AACD;;AAED,UAAI0Q,YAAJ,EAAkB;AAChB,YAAIM,WAAJ;;AAEA,SAACA,WAAW,GAAGhR,SAAf,EAA0B3G,IAA1B,CAA+BC,KAA/B,CAAqC0X,WAArC,EAAkD,CAAC,GAAGpa,mBAAmB,CAACF,OAAxB,EAAiCka,kBAAjC,CAAlD;AACD;AACF;;AAED,QAAIzW,MAAM,GAAG6F,SAAS,CAAC5B,GAAV,CAAc,UAAU6S,MAAV,EAAkBnW,KAAlB,EAAyB;AAClD,UAAI+B,IAAJ;AACA,UAAIvE,GAAG,GAAGwC,KAAV;;AAEA,UAAI,CAACoG,iBAAL,EAAwB;AACtB5I,QAAAA,GAAG,GAAG2Y,MAAM,CAAC1Q,EAAP,IAAazF,KAAnB;AACD;;AAED,UAAIW,KAAK,CAACyV,WAAV,EAAuB;AACrBrU,QAAAA,IAAI,GAAGpB,KAAK,CAACyV,WAAN,CAAkBD,MAAlB,CAAP;AACD;;AAED,UAAIpU,IAAI,KAAKoG,SAAb,EAAwB;AACtBpG,QAAAA,IAAI,GAAG/F,MAAM,CAACJ,OAAP,CAAeya,aAAf,CAA6B9Z,KAAK,CAACX,OAAnC,EAA4C6C,aAAa,CAACA,aAAa,CAAC,EAAD,EAAK0X,MAAL,CAAd,EAA4B,EAA5B,EAAgC;AAC9FvV,UAAAA,GAAG,EAAEuV,MAAM,CAACpV,OAAP,GAAiBoV,MAAM,CAACpV,OAAxB,GAAkC,IADuD;AAE9FvD,UAAAA,GAAG,EAAEA;AAFyF,SAAhC,CAAzD,CAAP;AAID;;AAED,aAAOuE,IAAP;AACD,KApBY,CAAb;AAqBA,WAAO,CAAC,GAAGvF,uBAAuB,CAACZ,OAA5B,EAAqCyD,MAArC,EAA6CsB,KAA7C,EAAoDgV,UAApD,EAAgExN,SAAhE,EAA2EuN,KAA3E,CAAP;AACD,GA3FD;;AA6FA,MAAIY,OAAO,GAAG,CAAC,GAAGta,MAAM,CAAC0F,WAAX,EAAwB,UAAUlC,KAAV,EAAiB;AACrD,QAAImB,KAAK,CAACsK,mBAAN,IAA6BtK,KAAK,CAAC4V,iBAAvC,EAA0D;AACxDhQ,MAAAA,gBAAgB,CAAC5F,KAAK,CAACgC,QAAP,CAAhB;AACD;;AAED,QAAIhC,KAAK,CAAC2V,OAAV,EAAmB;AACjB3V,MAAAA,KAAK,CAAC2V,OAAN,CAAc9W,KAAd,EAAqBmB,KAArB;AACD;;AAED,QAAIA,KAAK,CAACqE,WAAN,IAAqBrE,KAAK,CAACqE,WAAN,CAAkBsR,OAA3C,EAAoD;AAClD3V,MAAAA,KAAK,CAACqE,WAAN,CAAkBsR,OAAlB,CAA0B9W,KAA1B,EAAiCmB,KAAjC;AACD;AACF,GAZa,EAYX,CAACA,KAAK,CAACqE,WAAP,EAAoBrE,KAAK,CAACsK,mBAA1B,EAA+CtK,KAAK,CAACgC,QAArD,EAA+DhC,KAAK,CAAC4V,iBAArE,EAAwF5V,KAAK,CAAC2V,OAA9F,CAZW,CAAd;AAaA,MAAIE,WAAW,GAAG,CAAC,GAAGxa,MAAM,CAAC0F,WAAX,EAAwB,UAAUlC,KAAV,EAAiB;AACzD,QAAImB,KAAK,CAAC6V,WAAV,EAAuB;AACrB7V,MAAAA,KAAK,CAAC6V,WAAN,CAAkBhX,KAAlB,EAAyBmB,KAAzB;AACD;AACF,GAJiB,EAIf,CAACA,KAAK,CAAC6V,WAAP,CAJe,CAAlB;AAKA,GAAC,GAAGxa,MAAM,CAACya,mBAAX,EAAgC7V,GAAhC,EAAqC,YAAY;AAC/C,WAAO;AACLsC,MAAAA,aAAa,EAAEA,aADV;AAELzB,MAAAA,YAAY,EAAEA,YAFT;AAGLU,MAAAA,UAAU,EAAEA,UAHP;AAILiB,MAAAA,UAAU,EAAEA,UAJP;AAKLH,MAAAA,cAAc,EAAEA,cALX;AAMLD,MAAAA,aAAa,EAAEA,aANV;AAOLmB,MAAAA,YAAY,EAAEA,YAPT;AAQLS,MAAAA,gBAAgB,EAAEA,gBARb;AASLG,MAAAA,aAAa,EAAEA,aATV;AAULf,MAAAA,YAAY,EAAEA,YAVT;AAWLD,MAAAA,YAAY,EAAEA,YAXT;AAYLuB,MAAAA,SAAS,EAAEA,SAZN;AAaLC,MAAAA,SAAS,EAAEA,SAbN;AAcLC,MAAAA,WAAW,EAAEA,WAdR;AAeL5D,MAAAA,QAAQ,EAAEA,QAfL;AAgBL8D,MAAAA,cAAc,EAAEA,cAhBX;AAiBLC,MAAAA,OAAO,EAAEA,OAjBJ;AAkBLQ,MAAAA,oBAAoB,EAAEA,oBAlBjB;AAmBLE,MAAAA,eAAe,EAAEA,eAnBZ;AAoBLE,MAAAA,gBAAgB,EAAEA,gBApBb;AAqBLC,MAAAA,aAAa,EAAEA,aArBV;AAsBLG,MAAAA,eAAe,EAAEA,eAtBZ;AAuBLE,MAAAA,cAAc,EAAEA,cAvBX;AAwBLpE,MAAAA,yBAAyB,EAAEA,yBAxBtB;AAyBL0C,MAAAA,gBAAgB,EAAEA,gBAzBb;AA0BL+M,MAAAA,cAAc,EAAEA,cA1BX;AA2BLE,MAAAA,eAAe,EAAEA,eA3BZ;AA4BLE,MAAAA,gBAAgB,EAAEA,gBA5Bb;AA6BLE,MAAAA,qBAAqB,EAAEA,qBA7BlB;AA8BLE,MAAAA,kBAAkB,EAAEA,kBA9Bf;AA+BLrD,MAAAA,cAAc,EAAEA,cA/BX;AAgCLC,MAAAA,cAAc,EAAEA,cAhCX;AAiCLW,MAAAA,eAAe,EAAEA,eAjCZ;AAkCL3I,MAAAA,oBAAoB,EAAEA,oBAlCjB;AAmCL8N,MAAAA,sBAAsB,EAAEA,sBAnCnB;AAoCLsB,MAAAA,SAAS,EAAEA,SApCN;AAqCLJ,MAAAA,OAAO,EAAEA,OArCJ;AAsCLE,MAAAA,WAAW,EAAEA,WAtCR;AAuCLvP,MAAAA,cAAc,EAAEA,cAvCX;AAwCL0P,MAAAA,QAAQ,EAAEA,QAxCL;AAyCL3V,MAAAA,MAAM,EAAEA,MAzCH;AA0CLL,MAAAA,KAAK,EAAEA;AA1CF,KAAP;AA4CD,GA7CD;AA8CA,MAAImI,SAAS,GAAGnI,KAAK,CAACmI,SAAtB;AAAA,MACIE,gBAAgB,GAAGrI,KAAK,CAACqI,gBAD7B;AAAA,MAEI4N,YAAY,GAAGjW,KAAK,CAACiW,YAFzB;AAAA,MAGIlI,gBAAgB,GAAG/N,KAAK,CAAC+N,gBAH7B;AAAA,MAII9E,YAAY,GAAGjJ,KAAK,CAACiJ,YAJzB;AAAA,MAKIlD,IAAI,GAAG/F,KAAK,CAAC+F,IALjB;AAAA,MAMIjB,EAAE,GAAG9E,KAAK,CAAC8E,EANf;AAAA,MAOIiD,OAAO,GAAG/H,KAAK,CAAC+H,OAPpB;AAAA,MAQImO,QAAQ,GAAGlW,KAAK,CAACkW,QARrB;AAAA,MASIC,QAAQ,GAAGnW,KAAK,CAACmW,QATrB;AAAA,MAUIC,QAAQ,GAAGpW,KAAK,CAACoW,QAVrB;AAAA,MAWIC,UAAU,GAAGrW,KAAK,CAACqW,UAXvB;AAAA,MAYIN,SAAS,GAAG/V,KAAK,CAAC+V,SAZtB;AAAA,MAaIpM,wBAAwB,GAAG3J,KAAK,CAAC2J,wBAbrC;AAAA,MAcI2M,IAAI,GAAGtW,KAAK,CAACsW,IAdjB;AAAA,MAeIC,GAAG,GAAGvW,KAAK,CAACuW,GAfhB;AAAA,MAgBI3U,MAAM,GAAG5B,KAAK,CAAC4B,MAhBnB;AAAA,MAiBIuM,QAAQ,GAAGnO,KAAK,CAACmO,QAjBrB;AAAA,MAkBIhI,QAAQ,GAAGnG,KAAK,CAACmG,QAlBrB;AAAA,MAmBI9B,WAAW,GAAGrE,KAAK,CAACqE,WAnBxB;AAAA,MAoBIsB,SAAS,GAAG3F,KAAK,CAAC2F,SApBtB;AAAA,MAqBIyC,cAAc,GAAGpI,KAAK,CAACoI,cArB3B;AAAA,MAsBI8C,YAAY,GAAGlL,KAAK,CAACkL,YAtBzB;AAAA,MAuBIhC,YAAY,GAAGlJ,KAAK,CAACkJ,YAvBzB;AAAA,MAwBIkB,gBAAgB,GAAGpK,KAAK,CAACoK,gBAxB7B;AAAA,MAyBIoM,eAAe,GAAGxW,KAAK,CAACwW,eAzB5B;AAAA,MA0BIC,iBAAiB,GAAGzW,KAAK,CAACyW,iBA1B9B;AAAA,MA2BI3M,IAAI,GAAG9J,KAAK,CAAC8J,IA3BjB;AAAA,MA4BIlB,KAAK,GAAG5I,KAAK,CAAC4I,KA5BlB;AAAA,MA6BIV,aAAa,GAAGlI,KAAK,CAACkI,aA7B1B;AAAA,MA8BIwO,qBAAqB,GAAG1W,KAAK,CAAC0W,qBA9BlC;AAAA,MA+BIC,eAAe,GAAG3W,KAAK,CAAC2W,eA/B5B;AAAA,MAgCIC,cAAc,GAAG5W,KAAK,CAAC4W,cAhC3B;AAAA,MAiCIxU,UAAU,GAAGpC,KAAK,CAACoC,UAjCvB;AAAA,MAkCIkF,WAAW,GAAGtH,KAAK,CAACsH,WAlCxB;AAAA,MAmCIyB,eAAe,GAAG/I,KAAK,CAAC+I,eAnC5B;AAAA,MAoCI8N,WAAW,GAAG7W,KAAK,CAAC6W,WApCxB;AAAA,MAqCIC,+BAA+B,GAAG9W,KAAK,CAAC8W,+BArC5C;AAAA,MAsCI5U,OAAO,GAAGlC,KAAK,CAACkC,OAtCpB;AAAA,MAuCI0H,GAAG,GAAG5J,KAAK,CAAC4J,GAvChB;AAAA,MAwCImN,MAAM,GAAG/W,KAAK,CAAC+W,MAxCnB;AAAA,MAyCI9B,YAAY,GAAGjV,KAAK,CAACiV,YAzCzB;AAAA,MA0CIjN,cAAc,GAAGhI,KAAK,CAACgI,cA1C3B;AAAA,MA2CIU,yBAAyB,GAAG1I,KAAK,CAAC0I,yBA3CtC;AA4CA,MAAIsO,YAAY,GAAGhX,KAAK,CAACgX,YAAzB;AACA,MAAIvR,iBAAiB,GAAGD,oBAAoB,EAA5C;AACA,MAAIiH,WAAW,GAAGvD,YAAY,IAAIlJ,KAAK,CAAC0M,UAAN,GAAmB,CAArD;AACA,MAAIuK,UAAU,GAAGjX,KAAK,CAACiL,gBAAN,IAA0BpQ,MAAM,CAACyC,IAAP,CAAY0C,KAAK,CAACiL,gBAAlB,EAAoCtI,GAApC,CAAwC,UAAUyK,IAAV,EAAgB;AACjG,QAAI8J,OAAO,GAAGlX,KAAK,CAACiL,gBAAN,CAAuBmC,IAAvB,CAAd;AACA,WAAO8J,OAAO,GAAG,CAAjB;AACD,GAH0C,EAGxCC,IAHwC,CAGnC,UAAUC,OAAV,EAAmB;AACzB,WAAOA,OAAO,KAAK,IAAnB;AACD,GAL0C,CAA3C;AAMA,MAAIC,SAAS,GAAG,CAAC,GAAG3b,KAAK,CAACT,OAAV,EAAmB+E,KAAK,CAACqX,SAAzB,EAAoC9Y,UAApC,EAAgDmC,mBAAmB,CAACd,OAApB,IAA+B,GAAGiE,MAAH,CAAUtF,UAAV,EAAsB,aAAtB,CAA/E,EAAqHqK,KAAK,IAAI,GAAG/E,MAAH,CAAUtF,UAAV,EAAsB,SAAtB,CAA9H,EAAgK2D,OAAO,IAAI,GAAG2B,MAAH,CAAUtF,UAAV,EAAsB,WAAtB,CAA3K,EAA+M,GAAGsF,MAAH,CAAUtF,UAAV,EAAsB,cAAtB,EAAsCsF,MAAtC,CAA6C+F,GAAG,GAAG,KAAH,GAAW,KAA3D,CAA/M,EAAkR8M,qBAAqB,IAAIJ,IAAzB,KAAkC,CAAClU,UAAD,IAAe8F,aAAjD,KAAmE,GAAGrE,MAAH,CAAUtF,UAAV,EAAsB,QAAtB,CAArV,EAAsXmY,qBAAqB,IAAIH,GAAzB,KAAiC,CAACnU,UAAD,IAAe8F,aAAhD,KAAkE,GAAGrE,MAAH,CAAUtF,UAAV,EAAsB,OAAtB,CAAxb,EAAwd,CAACmY,qBAAD,IAA0B,CAACtU,UAA3B,IAAyC,GAAGyB,MAAH,CAAUtF,UAAV,EAAsB,YAAtB,CAAjgB,EAAsiB6D,UAAU,IAAI,GAAGyB,MAAH,CAAUtF,UAAV,EAAsB,aAAtB,CAApjB,EAA0lB0K,YAAY,IAAI,GAAGpF,MAAH,CAAUtF,UAAV,EAAsB,eAAtB,CAA1mB,EAAkpB0K,YAAY,IAAI,GAAGpF,MAAH,CAAUtF,UAAV,EAAsB,qBAAtB,EAA6CsF,MAA7C,CAAoDoF,YAAY,CAAC+H,QAAjE,CAAlqB,EAA8uB5O,UAAU,IAAIA,UAAU,CAACyO,SAAzB,IAAsC,GAAGhN,MAAH,CAAUtF,UAAV,EAAsB,aAAtB,CAApxB,EAA0zB4P,QAAQ,IAAI,GAAGtK,MAAH,CAAUtF,UAAV,EAAsB,YAAtB,CAAt0B,EAA22B4H,QAAQ,IAAI,GAAGtC,MAAH,CAAUtF,UAAV,EAAsB,YAAtB,CAAv3B,EAA45ByJ,cAAc,GAAG,GAAGnE,MAAH,CAAUtF,UAAV,EAAsB,oBAAtB,CAAH,GAAiD,GAAGsF,MAAH,CAAUtF,UAAV,EAAsB,mBAAtB,CAA39B,EAAugC0W,YAAY,GAAG,GAAGpR,MAAH,CAAUtF,UAAV,EAAsB,kBAAtB,CAAH,GAA+C,GAAGsF,MAAH,CAAUtF,UAAV,EAAsB,iBAAtB,CAAlkC,EAA4mCmK,yBAAyB,IAAI,GAAG7E,MAAH,CAAUtF,UAAV,EAAsB,2BAAtB,CAAzoC,EAA6rCqD,MAAM,IAAI,GAAGiC,MAAH,CAAUtF,UAAV,EAAsB,UAAtB,CAAvsC,EAA0uCkH,iBAAiB,IAAI,GAAG5B,MAAH,CAAUtF,UAAV,EAAsB,sBAAtB,CAA/vC,EAA8yC4J,SAAS,IAAI,GAAGtE,MAAH,CAAUtF,UAAV,EAAsB,aAAtB,CAA3zC,EAAi2C6L,gBAAgB,IAAI,GAAGvG,MAAH,CAAUtF,UAAV,EAAsB,qBAAtB,CAAr3C,EAAm6CoH,SAAS,IAAI,CAAb,IAAkB,GAAG9B,MAAH,CAAUtF,UAAV,EAAsB,SAAtB,CAAr7C,EAAu9CuL,IAAI,IAAI,GAAGjG,MAAH,CAAUtF,UAAV,EAAsB,QAAtB,CAA/9C,EAAggD2K,YAAY,IAAI,CAAhB,IAAqB,GAAGrF,MAAH,CAAUtF,UAAV,EAAsB,kBAAtB,CAArhD,EAAgkDkO,WAAW,IAAI,GAAG5I,MAAH,CAAUtF,UAAV,EAAsB,iBAAtB,CAA/kD,EAAynD0Y,UAAU,GAAG,GAAGpT,MAAH,CAAUtF,UAAV,EAAsB,eAAtB,CAAH,GAA4C,EAA/qD,CAAhB;;AAEA,MAAI8F,WAAJ,EAAiB;AACfgT,IAAAA,SAAS,GAAG,CAAC,GAAG3b,KAAK,CAACT,OAAV,EAAmBoc,SAAnB,EAA8BlJ,QAAQ,IAAI9J,WAAW,CAACiT,iBAAtD,CAAZ;AACD;;AAED,MAAIvC,KAAK,GAAGjX,aAAa,CAACA,aAAa,CAAC,EAAD,EAAKkC,KAAK,CAAC+U,KAAX,CAAd,EAAiC,EAAjC,EAAqC;AAC5DwC,IAAAA,MAAM,EAAEnN,gBAAgB,GAAG,IAAH,GAAUjC,SAD0B;AAE5DqP,IAAAA,KAAK,EAAExX,KAAK,CAACwX,KAF+C;AAG5DtB,IAAAA,QAAQ,EAAEA,QAHkD;AAI5DnC,IAAAA,SAAS,EAAE;AAJiD,GAArC,CAAzB;;AAOA,MAAIoC,QAAQ,IAAI,IAAhB,EAAsB;AACpBpB,IAAAA,KAAK,CAACoB,QAAN,GAAiBA,QAAjB;AACD;;AAED,MAAIF,YAAY,IAAI,IAApB,EAA0B;AACxBlB,IAAAA,KAAK,CAAC0C,SAAN,GAAkBxB,YAAlB;AACD;;AAED,MAAIG,QAAJ,EAAc;AACZ,QAAI,OAAOA,QAAP,KAAoB,UAAxB,EAAoC;AAClC,UAAIsB,cAAc,GAAGtB,QAAQ,CAAC;AAC5BrQ,QAAAA,IAAI,EAAEA,IADsB;AAE5B/F,QAAAA,KAAK,EAAEA,KAFqB;AAG5B+U,QAAAA,KAAK,EAAEA;AAHqB,OAAD,CAA7B;;AAMA,UAAI2C,cAAc,KAAKlQ,SAAvB,EAAkC;AAChCuN,QAAAA,KAAK,GAAGjX,aAAa,CAACA,aAAa,CAAC,EAAD,EAAKiX,KAAL,CAAd,EAA2B2C,cAA3B,CAArB;AACD;AACF,KAVD,MAUO;AACL3C,MAAAA,KAAK,GAAGjX,aAAa,CAACA,aAAa,CAAC,EAAD,EAAKiX,KAAL,CAAd,EAA2BqB,QAA3B,CAArB;AACD;AACF;;AAED,MAAIY,YAAJ,EAAkB;AAChB,QAAI,OAAOA,YAAP,KAAwB,UAA5B,EAAwC;AACtCA,MAAAA,YAAY,GAAGA,YAAY,CAAC;AAC1BjR,QAAAA,IAAI,EAAEA,IADoB;AAE1B/F,QAAAA,KAAK,EAAEA,KAFmB;AAG1BqX,QAAAA,SAAS,EAAEA;AAHe,OAAD,CAA3B;AAKD;;AAED,QAAIL,YAAY,IAAI,OAAOA,YAAP,IAAuB,QAA3C,EAAqD;AACnDK,MAAAA,SAAS,GAAG,CAAC,GAAG3b,KAAK,CAACT,OAAV,EAAmBoc,SAAnB,EAA8BL,YAA9B,CAAZ;AACD;AACF;;AAED,MAAIhB,QAAQ,GAAGlY,aAAa,CAACA,aAAa,CAACA,aAAa,CAAC,EAAD,EAAKkC,KAAL,CAAd,EAA2B,EAA3B,EAA+B;AACvEqX,IAAAA,SAAS,EAAEA,SAD4D;AAEvEtC,IAAAA,KAAK,EAAEA,KAFgE;AAGvE9U,IAAAA,GAAG,EAAEI;AAHkE,GAA/B,EAIvCgE,WAJuC,CAAd,EAIX,EAJW,EAIP;AACnBsR,IAAAA,OAAO,EAAEA,OADU;AAEnBvR,IAAAA,aAAa,EAAEA;AAFI,GAJO,CAA5B;;AASA4R,EAAAA,QAAQ,CAAC2B,QAAT,GAAoB,CAACtc,MAAM,CAACJ,OAAP,CAAeya,aAAf,CAA6B,KAA7B,EAAoC;AACvD7Y,IAAAA,GAAG,EAAE,UADkD;AAEvDwa,IAAAA,SAAS,EAAE,0EAF4C;AAGvDtC,IAAAA,KAAK,EAAE;AACLyC,MAAAA,KAAK,EAAExX,KAAK,CAACwX,KADR;AAELD,MAAAA,MAAM,EAAEnN,gBAAgB,GAAG,IAAH,GAAUjC,SAF7B;AAGL6I,MAAAA,QAAQ,EAAE,UAHL;AAIL4G,MAAAA,GAAG,EAAE,CAJA;AAKLC,MAAAA,IAAI,EAAEjO,GAAG,GAAG,EAAE5J,KAAK,CAAC8X,iBAAN,IAA2B,CAA7B,CAAH,GAAqC;AALzC;AAHgD,GAApC,EAUlBjD,iBAAiB,CAAC9O,IAAD,EAAOgC,OAAP,EAAgBgN,KAAhB,CAVC,CAAD,CAApB;AAWA,MAAIgD,UAAU,GAAGzQ,WAAW,GAAG,CAAH,GAAOvB,IAAI,IAAIA,IAAI,CAACiS,OAAb,GAAuBjS,IAAI,CAACT,KAAL,GAAa,CAApC,GAAwCS,IAAI,IAAIA,IAAI,CAAC6K,SAAb,GAAyBoF,QAAQ,CAAC/M,YAAT,CAAsB3D,KAA/C,GAAuDtF,KAAK,CAACsF,KAAN,IAAe,CAAjJ;AACA,MAAI2S,gBAAgB,GAAGlB,MAAM,GAAG1b,MAAM,CAACJ,OAAP,CAAeya,aAAf,CAA6B,KAA7B,EAAoC;AAClE7Y,IAAAA,GAAG,EAAE,oBAD6D;AAElEwa,IAAAA,SAAS,EAAE,CAAC,GAAG3b,KAAK,CAACT,OAAV,EAAmB,GAAG4I,MAAH,CAAUtF,UAAV,EAAsB,iBAAtB,CAAnB,EAA6DgC,YAAY,CAACX,OAAb,IAAwB,GAAGiE,MAAH,CAAUtF,UAAV,EAAsB,iCAAtB,CAArF,EAA+IiC,eAAe,CAACZ,OAAhB,IAA2B,GAAGiE,MAAH,CAAUtF,UAAV,EAAsB,qCAAtB,CAA1K;AAFuD,GAApC,CAAH,GAGxB,IAHL;AAIA,MAAI2Z,YAAY,GAAG/R,QAAQ,IAAI2Q,+BAA/B;;AAEA,MAAInN,wBAAwB,IAAIuO,YAA5B,IAA4C,CAACnS,IAAI,CAACiS,OAAtD,EAA+D;AAC7D,QAAI9T,cAAc,GAAG;AACnB6B,MAAAA,IAAI,EAAEA,IADa;AAEnB6D,MAAAA,GAAG,EAAEA,GAFc;AAGnB5D,MAAAA,eAAe,EAAEA,eAHE;AAInBhE,MAAAA,QAAQ,EAAE2D,SAJS;AAKnByC,MAAAA,cAAc,EAAEA,cALG;AAMnB+J,MAAAA,KAAK,EAAEnS,KAAK,CAACoS,SAAN,CAAgBrM,IAAhB,CANY;AAOnBwE,MAAAA,WAAW,EAAEpE,QAPM;AAQnBrB,MAAAA,EAAE,EAAEA,EARe;AASnBoJ,MAAAA,WAAW,EAAEC,QATM;AAUnBF,MAAAA,SAAS,EAAErM,MAVQ;AAWnB8D,MAAAA,eAAe,EAAEA,eAXE;AAYnBQ,MAAAA,cAAc,EAAEA,cAZG;AAanBiS,MAAAA,UAAU,EAAEpP;AAbO,KAArB;AAeA,QAAIqP,YAAY,GAAG;AACjBpH,MAAAA,QAAQ,EAAE,UADO;AAEjBuG,MAAAA,MAAM,EAAEpP,SAAS,GAAGE,gBAFH;AAGjBgQ,MAAAA,QAAQ,EAAE5B,iBAAiB,GAAG,SAAH,GAAe,MAHzB;AAIjBmB,MAAAA,GAAG,EAAEvP;AAJY,KAAnB;;AAOA,QAAIuB,GAAJ,EAAS;AACPwO,MAAAA,YAAY,CAACrE,SAAb,GAAyB,KAAzB;AACD;;AAED,QAAI4C,eAAe,IAAI,oBAAvB,EAA6C;AAC3CyB,MAAAA,YAAY,CAACZ,KAAb,GAAqBzH,IAAI,CAACyE,GAAL,CAASoC,cAAT,EAAyB5W,KAAK,CAACwX,KAAN,IAAerB,QAAxC,CAArB;AACD;;AAED,QAAIQ,eAAe,KAAK,oBAAxB,EAA8C;AAC5CyB,MAAAA,YAAY,CAACZ,KAAb,GAAqBzH,IAAI,CAACC,GAAL,CAAS4G,cAAT,EAAyB5W,KAAK,CAACwX,KAAN,IAAerB,QAAxC,CAArB;AACD;;AAED,QAAIQ,eAAe,KAAK,gBAAxB,EAA0C;AACxCyB,MAAAA,YAAY,CAACZ,KAAb,GAAqBZ,cAArB;AACD;;AAED,QAAImB,UAAJ,EAAgB;AACdK,MAAAA,YAAY,CAACxO,GAAG,GAAG,cAAH,GAAoB,aAAxB,CAAZ,GAAqD,CAACmE,gBAAgB,IAAI,CAArB,IAA0BgK,UAA/E;AACD;;AAEDK,IAAAA,YAAY,CAACxO,GAAG,GAAG,OAAH,GAAa,MAAjB,CAAZ,GAAuC,CAAvC;;AAEA,QAAI0O,KAAK,CAACF,YAAY,CAACZ,KAAd,CAAT,EAA+B;AAC7B,aAAOY,YAAY,CAACZ,KAApB;AACD;;AAED,QAAI,CAACrR,QAAL,EAAe;AACbiS,MAAAA,YAAY,CAACG,OAAb,GAAuB,MAAvB;AACD;;AAED,QAAI/B,eAAJ,EAAqB;AACnB,UAAI,OAAOA,eAAP,KAA2B,UAA/B,EAA2C;AACzC,YAAIgC,WAAW,GAAGhC,eAAe,CAAC4B,YAAD,EAAelU,cAAf,CAAjC;;AAEA,YAAIsU,WAAW,KAAKhR,SAApB,EAA+B;AAC7B4Q,UAAAA,YAAY,GAAGI,WAAf;AACD;AACF,OAND,MAMO;AACLJ,QAAAA,YAAY,GAAGta,aAAa,CAACA,aAAa,CAAC,EAAD,EAAKsa,YAAL,CAAd,EAAkC5B,eAAlC,CAA5B;AACD;AACF;;AAED,QAAI9F,gBAAgB,GAAG,CAACjE,WAAD,IAAgB3C,IAAvC;;AAEA,QAAIoB,YAAY,IAAIpB,IAAhB,IAAwB3D,QAA5B,EAAsC;AACpCuK,MAAAA,gBAAgB,GAAG,KAAnB;AACD;;AAEDsF,IAAAA,QAAQ,CAAC2B,QAAT,CAAkB/Z,IAAlB,CAAuBvC,MAAM,CAACJ,OAAP,CAAeya,aAAf,CAA6B,KAA7B,EAAoC;AACzD7Y,MAAAA,GAAG,EAAE,YADoD;AAEzDkY,MAAAA,KAAK,EAAEqD,YAFkD;AAGzDzC,MAAAA,OAAO,EAAE/W,UAHgD;AAIzDyY,MAAAA,SAAS,EAAE,CAAC,GAAG3b,KAAK,CAACT,OAAV,EAAmB,GAAG4I,MAAH,CAAUtF,UAAV,EAAsB,UAAtB,CAAnB,EAAsD,GAAGsF,MAAH,CAAUtF,UAAV,EAAsB,YAAtB,EAAoCsF,MAApC,CAA2C8S,eAA3C,CAAtD,EAAmHF,iBAAiB,GAAG,GAAG5S,MAAH,CAAUtF,UAAV,EAAsB,wBAAtB,CAAH,GAAqD,IAAzL,EAA+L,CAAC2M,YAAD,IAAiBA,YAAY,IAAImL,UAAhB,IAA8B,CAACA,UAAU,CAACoC,QAA3D,IAAuE7B,cAAc,GAAGV,QAAxF,GAAmG,GAAGrS,MAAH,CAAUtF,UAAV,EAAsB,6BAAtB,CAAnG,GAA0J,IAAzV,EAA+VmS,gBAAgB,GAAG,GAAG7M,MAAH,CAAUtF,UAAV,EAAsB,8BAAtB,CAAH,GAA2D,EAA1a;AAJ8C,KAApC,EAKpB0F,gBAAgB,CAACC,cAAD,CALI,CAAvB,EAKsC7I,MAAM,CAACJ,OAAP,CAAeya,aAAf,CAA6B,KAA7B,EAAoC;AACxE2B,MAAAA,SAAS,EAAE,GAAGxT,MAAH,CAAUtF,UAAV,EAAsB,gCAAtB,CAD6D;AAExE1B,MAAAA,GAAG,EAAE,mCAFmE;AAGxEkY,MAAAA,KAAK,EAAE,CAAC,GAAG3Z,gBAAgB,CAACH,OAArB,EAA8B,EAA9B,EAAkC2O,GAAG,GAAG,OAAH,GAAa,MAAlD,EAA0D,CAACmO,UAAU,IAAI,CAAf,IAAoBhK,gBAA9E;AAHiE,KAApC,CALtC,EASIgK,UAAU,GAAG,CAAC,GAAG5c,mBAAmB,CAACF,OAAxB,EAAiC,IAAIyd,KAAJ,CAAUX,UAAV,CAAjC,EAAwDpV,GAAxD,CAA4D,UAAUyD,CAAV,EAAa/G,KAAb,EAAoB;AAC/F,UAAIsZ,OAAJ;;AAEA,aAAOtd,MAAM,CAACJ,OAAP,CAAeya,aAAf,CAA6B,KAA7B,EAAoC;AACzC7Y,QAAAA,GAAG,EAAEwC,KADoC;AAEzCgY,QAAAA,SAAS,EAAE,GAAGxT,MAAH,CAAUtF,UAAV,EAAsB,iBAAtB,CAF8B;AAGzCwW,QAAAA,KAAK,GAAG4D,OAAO,GAAG;AAChBpB,UAAAA,MAAM,EAAE,MADQ;AAEhBvG,UAAAA,QAAQ,EAAE;AAFM,SAAV,EAGL,CAAC,GAAG5V,gBAAgB,CAACH,OAArB,EAA8B0d,OAA9B,EAAuC/O,GAAG,GAAG,OAAH,GAAa,MAAvD,EAA+D,CAACvK,KAAK,GAAG,CAAT,IAAc0O,gBAA7E,CAHK,EAG2F,CAAC,GAAG3S,gBAAgB,CAACH,OAArB,EAA8B0d,OAA9B,EAAuC,KAAvC,EAA8C,CAA9C,CAH3F,EAG6IA,OAHhJ;AAHoC,OAApC,CAAP;AAQD,KAXgB,CAAH,GAWT,IApBL,EAoBWhC,eAAe,IAAI,oBAAnB,GAA0Ctb,MAAM,CAACJ,OAAP,CAAeya,aAAf,CAA6B,KAA7B,EAAoC;AACvF7Y,MAAAA,GAAG,EAAE,kBADkF;AAEvFkY,MAAAA,KAAK,EAAE,CAAC,GAAG3Z,gBAAgB,CAACH,OAArB,EAA8B;AACnC2c,QAAAA,GAAG,EAAEvP,gBAAgB,GAAG,CADW;AAEnCmP,QAAAA,KAAK,EAAEZ;AAF4B,OAA9B,EAGJhN,GAAG,GAAG,OAAH,GAAa,MAHZ,EAGoB,CAACmO,UAAU,IAAI,CAAf,IAAoBhK,gBAHxC,CAFgF;AAMvFsJ,MAAAA,SAAS,EAAE,GAAGxT,MAAH,CAAUtF,UAAV,EAAsB,6BAAtB;AAN4E,KAApC,CAA1C,GAON,IA3BL;AA4BD;;AAED,MAAIwY,MAAJ,EAAY;AACV,QAAIkB,gBAAJ,EAAsB;AACpB,UAAIW,OAAJ;;AAEA5C,MAAAA,QAAQ,CAAC2B,QAAT,CAAkB/Z,IAAlB,CAAuBvC,MAAM,CAACJ,OAAP,CAAeya,aAAf,CAA6B,KAA7B,EAAoC;AACzD7Y,QAAAA,GAAG,EAAE,oBADoD;AAEzDwa,QAAAA,SAAS,EAAE,iDAF8C;AAGzDtC,QAAAA,KAAK,GAAG6D,OAAO,GAAG;AAChBrB,UAAAA,MAAM,EAAE,MADQ;AAEhBvG,UAAAA,QAAQ,EAAE,UAFM;AAGhB4G,UAAAA,GAAG,EAAE;AAHW,SAAV,EAIL,CAAC,GAAGxc,gBAAgB,CAACH,OAArB,EAA8B2d,OAA9B,EAAuChP,GAAG,GAAG,OAAH,GAAa,MAAvD,EAA+D,CAACmE,gBAAgB,IAAI,CAArB,IAA0BgK,UAAzF,CAJK,EAIiG,CAAC,GAAG3c,gBAAgB,CAACH,OAArB,EAA8B2d,OAA9B,EAAuC,OAAvC,EAAgDhC,cAAc,GAAG,CAAC7I,gBAAgB,IAAI,CAArB,IAA0BgK,UAA3F,CAJjG,EAIyM,CAAC,GAAG3c,gBAAgB,CAACH,OAArB,EAA8B2d,OAA9B,EAAuC,eAAvC,EAAwD,MAAxD,CAJzM,EAI0QA,OAJ7Q;AAHoD,OAApC,EAQpBX,gBARoB,CAAvB;AASD;AACF;;AAED,MAAIY,GAAJ;;AAEA,MAAI9C,SAAJ,EAAe;AACb8C,IAAAA,GAAG,GAAG9C,SAAS,CAACC,QAAD,CAAf;AACD;;AAED,MAAIa,WAAJ,EAAiB;AACfA,IAAAA,WAAW,CAACb,QAAD,CAAX;AACD;;AAED,MAAI6C,GAAG,KAAKrR,SAAZ,EAAuB;AACrBqR,IAAAA,GAAG,GAAGxd,MAAM,CAACJ,OAAP,CAAeya,aAAf,CAA6B,KAA7B,EAAoC5X,aAAa,CAACA,aAAa,CAAC,EAAD,EAAK,CAAC,GAAGtC,gBAAgB,CAACP,OAArB,EAA8B+a,QAA9B,EAAwClW,WAAW,CAACgZ,SAApD,CAAL,CAAd,EAAoF,EAApF,EAAwF;AAC7IhU,MAAAA,EAAE,EAAE,IADyI;AAE7IiB,MAAAA,IAAI,EAAE,IAFuI;AAG7I/K,MAAAA,KAAK,EAAE;AAHsI,KAAxF,CAAjD,CAAN;AAKD;;AAED,SAAO6d,GAAP;AACD,CA/9CiB,CAAlB;;AAi+CA,IAAIE,OAAO,GAAG,SAASA,OAAT,GAAmB,CAAE,CAAnC;;AAEAjZ,WAAW,CAACkZ,YAAZ,GAA2B;AACzBrD,EAAAA,OAAO,EAAEoD,OADgB;AAEzBE,EAAAA,YAAY,EAAEF,OAFW;AAGzBG,EAAAA,YAAY,EAAEH,OAHW;AAIzBlD,EAAAA,WAAW,EAAEkD,OAJY;AAKzBzY,EAAAA,sBAAsB,EAAE,CALC;AAMzB6Y,EAAAA,iBAAiB,EAAE;AANM,CAA3B;AAQArZ,WAAW,CAACgZ,SAAZ,GAAwB;AACtB7K,EAAAA,SAAS,EAAE1S,UAAU,CAACN,OAAX,CAAmBme,IADR;AAEtBlL,EAAAA,WAAW,EAAE3S,UAAU,CAACN,OAAX,CAAmBme,IAFV;AAGtBxC,EAAAA,cAAc,EAAErb,UAAU,CAACN,OAAX,CAAmBoe,MAHb;AAItBrQ,EAAAA,eAAe,EAAEzN,UAAU,CAACN,OAAX,CAAmBqe,KAJd;AAKtB9O,EAAAA,gBAAgB,EAAEjP,UAAU,CAACN,OAAX,CAAmBme,IALf;AAMtB1O,EAAAA,YAAY,EAAEnP,UAAU,CAACN,OAAX,CAAmBse,GANX;AAOtBxO,EAAAA,mBAAmB,EAAExP,UAAU,CAACN,OAAX,CAAmBue,IAPlB;AAQtBlU,EAAAA,KAAK,EAAE/J,UAAU,CAACN,OAAX,CAAmBoe,MARJ;AAStBtR,EAAAA,OAAO,EAAExM,UAAU,CAACN,OAAX,CAAmBqe,KATN;AAUtBG,EAAAA,UAAU,EAAEle,UAAU,CAACN,OAAX,CAAmBye,KAAnB,CAAyB,EAAzB,CAVU;AAWtB9X,EAAAA,MAAM,EAAErG,UAAU,CAACN,OAAX,CAAmBme,IAXL;AAYtBxM,EAAAA,kBAAkB,EAAErR,UAAU,CAACN,OAAX,CAAmBse,GAZjB;AAatB9D,EAAAA,WAAW,EAAEla,UAAU,CAACN,OAAX,CAAmBue,IAbV;AActB1O,EAAAA,iCAAiC,EAAEvP,UAAU,CAACN,OAAX,CAAmBme,IAdhC;AAetBrP,EAAAA,qBAAqB,EAAExO,UAAU,CAACN,OAAX,CAAmB0e,SAAnB,CAA6B,CAACpe,UAAU,CAACN,OAAX,CAAmBmC,MAApB,EAA4B7B,UAAU,CAACN,OAAX,CAAmBqe,KAA/C,CAA7B,CAfD;AAgBtBnY,EAAAA,iBAAiB,EAAE5F,UAAU,CAACN,OAAX,CAAmBoe,MAhBhB;AAiBtB/Y,EAAAA,sBAAsB,EAAE/E,UAAU,CAACN,OAAX,CAAmBoe,MAjBrB;AAkBtB9P,EAAAA,gBAAgB,EAAEhO,UAAU,CAACN,OAAX,CAAmBme,IAlBf;AAmBtB9P,EAAAA,WAAW,EAAE/N,UAAU,CAACN,OAAX,CAAmBue,IAnBV;AAoBtB5Q,EAAAA,KAAK,EAAErN,UAAU,CAACN,OAAX,CAAmBme,IApBJ;AAqBtB9C,EAAAA,IAAI,EAAE/a,UAAU,CAACN,OAAX,CAAmBme,IArBH;AAsBtBhQ,EAAAA,mBAAmB,EAAE7N,UAAU,CAACN,OAAX,CAAmBoe,MAtBlB;AAuBtBO,EAAAA,qBAAqB,EAAEre,UAAU,CAACN,OAAX,CAAmBoe,MAvBpB;AAwBtBlQ,EAAAA,kBAAkB,EAAE5N,UAAU,CAACN,OAAX,CAAmBoe,MAxBjB;AAyBtBQ,EAAAA,IAAI,EAAEte,UAAU,CAACN,OAAX,CAAmBoe,MAzBH;AA0BtB3M,EAAAA,UAAU,EAAEnR,UAAU,CAACN,OAAX,CAAmBoe,MA1BT;AA2BtBtL,EAAAA,gBAAgB,EAAExS,UAAU,CAACN,OAAX,CAAmBoe,MA3Bf;AA4BtBrL,EAAAA,eAAe,EAAEzS,UAAU,CAACN,OAAX,CAAmBoe,MA5Bd;AA6BtBjX,EAAAA,UAAU,EAAE7G,UAAU,CAACN,OAAX,CAAmBmC,MA7BT;AA8BtB6L,EAAAA,YAAY,EAAE1N,UAAU,CAACN,OAAX,CAAmBmC,MA9BX;AA+BtB6X,EAAAA,YAAY,EAAE1Z,UAAU,CAACN,OAAX,CAAmBme,IA/BX;AAgCtBpR,EAAAA,cAAc,EAAEzM,UAAU,CAACN,OAAX,CAAmBme,IAhCb;AAiCtBlQ,EAAAA,YAAY,EAAE3N,UAAU,CAACN,OAAX,CAAmBoe,MAjCX;AAkCtBvP,EAAAA,IAAI,EAAEvO,UAAU,CAACN,OAAX,CAAmBme,IAlCH;AAmCtBpO,EAAAA,eAAe,EAAEzP,UAAU,CAACN,OAAX,CAAmBse,GAnCd;AAoCtBvP,EAAAA,YAAY,EAAEzO,UAAU,CAACN,OAAX,CAAmBme,IApCX;AAqCtB/K,EAAAA,cAAc,EAAE9S,UAAU,CAACN,OAAX,CAAmBme,IArCb;AAsCtB/E,EAAAA,gBAAgB,EAAE9Y,UAAU,CAACN,OAAX,CAAmBqe,KAtCf;AAuCtBnF,EAAAA,kBAAkB,EAAE5Y,UAAU,CAACN,OAAX,CAAmBqe,KAvCjB;AAwCtBrD,EAAAA,YAAY,EAAE1a,UAAU,CAACN,OAAX,CAAmBoe,MAxCX;AAyCtB5Q,EAAAA,YAAY,EAAElN,UAAU,CAACN,OAAX,CAAmBoe,MAzCX;AA0CtBpP,EAAAA,cAAc,EAAE1O,UAAU,CAACN,OAAX,CAAmBoe,MA1Cb;AA2CtBnD,EAAAA,QAAQ,EAAE3a,UAAU,CAACN,OAAX,CAAmBoe,MA3CP;AA4CtB7P,EAAAA,WAAW,EAAEjO,UAAU,CAACN,OAAX,CAAmBme,IA5CV;AA6CtB7C,EAAAA,GAAG,EAAEhb,UAAU,CAACN,OAAX,CAAmBme,IA7CF;AA8CtBU,EAAAA,WAAW,EAAEve,UAAU,CAACN,OAAX,CAAmBue,IA9CV;AA+CtBO,EAAAA,SAAS,EAAExe,UAAU,CAACN,OAAX,CAAmBue,IA/CR;AAgDtBtP,EAAAA,WAAW,EAAE3O,UAAU,CAACN,OAAX,CAAmBue,IAhDV;AAiDtB3O,EAAAA,WAAW,EAAEtP,UAAU,CAACN,OAAX,CAAmBue,IAjDV;AAkDtB5O,EAAAA,eAAe,EAAErP,UAAU,CAACN,OAAX,CAAmBue,IAlDd;AAmDtB7O,EAAAA,+BAA+B,EAAEpP,UAAU,CAACN,OAAX,CAAmBue,IAnD9B;AAoDtBlV,EAAAA,gBAAgB,EAAE/I,UAAU,CAACN,OAAX,CAAmBue,IApDf;AAqDtBnV,EAAAA,WAAW,EAAE9I,UAAU,CAACN,OAAX,CAAmBmC,MArDV;AAsDtBuI,EAAAA,SAAS,EAAEpK,UAAU,CAACN,OAAX,CAAmBoe,MAtDR;AAuDtBpW,EAAAA,WAAW,EAAE1H,UAAU,CAACN,OAAX,CAAmBoe,MAvDV;AAwDtBtD,EAAAA,SAAS,EAAExa,UAAU,CAACN,OAAX,CAAmBue,IAxDR;AAyDtB3C,EAAAA,WAAW,EAAEtb,UAAU,CAACN,OAAX,CAAmBue,IAzDV;AA0DtBrR,EAAAA,SAAS,EAAE5M,UAAU,CAACN,OAAX,CAAmBoe,MA1DR;AA2DtBW,EAAAA,eAAe,EAAEze,UAAU,CAACN,OAAX,CAAmB0e,SAAnB,CAA6B,CAACpe,UAAU,CAACN,OAAX,CAAmBoe,MAApB,EAA4B9d,UAAU,CAACN,OAAX,CAAmBue,IAA/C,CAA7B,CA3DK;AA4DtBnR,EAAAA,gBAAgB,EAAE9M,UAAU,CAACN,OAAX,CAAmBoe,MA5Df;AA6DtBY,EAAAA,gBAAgB,EAAE1e,UAAU,CAACN,OAAX,CAAmBoe,MA7Df;AA8DtBvB,EAAAA,iBAAiB,EAAEvc,UAAU,CAACN,OAAX,CAAmBoe,MA9DhB;AA+DtBrX,EAAAA,QAAQ,EAAEzG,UAAU,CAACN,OAAX,CAAmBoe,MA/DP;AAgEtBjR,EAAAA,cAAc,EAAE7M,UAAU,CAACN,OAAX,CAAmBoe,MAhEb;AAiEtB7K,EAAAA,eAAe,EAAEjT,UAAU,CAACN,OAAX,CAAmBme,IAjEd;AAkEtBhD,EAAAA,QAAQ,EAAE7a,UAAU,CAACN,OAAX,CAAmB0e,SAAnB,CAA6B,CAACpe,UAAU,CAACN,OAAX,CAAmBmC,MAApB,EAA4B7B,UAAU,CAACN,OAAX,CAAmBue,IAA/C,CAA7B,CAlEY;AAmEtBxC,EAAAA,YAAY,EAAEzb,UAAU,CAACN,OAAX,CAAmB0e,SAAnB,CAA6B,CAACpe,UAAU,CAACN,OAAX,CAAmBif,MAApB,EAA4B3e,UAAU,CAACN,OAAX,CAAmBue,IAA/C,CAA7B,CAnEQ;AAoEtBxE,EAAAA,UAAU,EAAEzZ,UAAU,CAACN,OAAX,CAAmBoe,MApET;AAqEtBhQ,EAAAA,SAAS,EAAE9N,UAAU,CAACN,OAAX,CAAmBue,IArER;AAsEtBrL,EAAAA,QAAQ,EAAE5S,UAAU,CAACN,OAAX,CAAmBme,IAtEP;AAuEtBjT,EAAAA,QAAQ,EAAE5K,UAAU,CAACN,OAAX,CAAmBme,IAvEP;AAwEtB3P,EAAAA,SAAS,EAAElO,UAAU,CAACN,OAAX,CAAmBse,GAxER;AAyEtB5P,EAAAA,wBAAwB,EAAEpO,UAAU,CAACN,OAAX,CAAmBme,IAzEvB;AA0EtB9O,EAAAA,mBAAmB,EAAE/O,UAAU,CAACN,OAAX,CAAmBme,IA1ElB;AA2EtBjV,EAAAA,wBAAwB,EAAE5I,UAAU,CAACN,OAAX,CAAmBue,IA3EvB;AA4EtBvT,EAAAA,iBAAiB,EAAE1K,UAAU,CAACN,OAAX,CAAmBue,IA5EhB;AA6EtB9P,EAAAA,cAAc,EAAEnO,UAAU,CAACN,OAAX,CAAmBue,IA7Eb;AA8EtBtT,EAAAA,cAAc,EAAE3K,UAAU,CAACN,OAAX,CAAmBue,IA9Eb;AA+EtB9T,EAAAA,eAAe,EAAEnK,UAAU,CAACN,OAAX,CAAmBue,IA/Ed;AAgFtB5T,EAAAA,gBAAgB,EAAErK,UAAU,CAACN,OAAX,CAAmBue,IAhFf;AAiFtB5D,EAAAA,iBAAiB,EAAEra,UAAU,CAACN,OAAX,CAAmBme,IAjFhB;AAkFtBvT,EAAAA,aAAa,EAAEtK,UAAU,CAACN,OAAX,CAAmBue,IAlFZ;AAmFtBL,EAAAA,iBAAiB,EAAE5d,UAAU,CAACN,OAAX,CAAmBme,IAnFhB;AAoFtBe,EAAAA,uBAAuB,EAAE5e,UAAU,CAACN,OAAX,CAAmB0e,SAAnB,CAA6B,CAACpe,UAAU,CAACN,OAAX,CAAmBif,MAApB,EAA4B3e,UAAU,CAACN,OAAX,CAAmBme,IAA/C,CAA7B,CApFH;AAqFtB1Q,EAAAA,yBAAyB,EAAEnN,UAAU,CAACN,OAAX,CAAmBme,IArFxB;AAsFtBzQ,EAAAA,uBAAuB,EAAEpN,UAAU,CAACN,OAAX,CAAmBme,IAtFtB;AAuFtBgB,EAAAA,gBAAgB,EAAE7e,UAAU,CAACN,OAAX,CAAmBoe,MAvFf;AAwFtBgB,EAAAA,kBAAkB,EAAE9e,UAAU,CAACN,OAAX,CAAmBoe,MAxFjB;AAyFtBvQ,EAAAA,cAAc,EAAEvN,UAAU,CAACN,OAAX,CAAmBoe,MAzFb;AA0FtBiB,EAAAA,mBAAmB,EAAE/e,UAAU,CAACN,OAAX,CAAmBoe,MA1FlB;AA2FtBkB,EAAAA,qBAAqB,EAAEhf,UAAU,CAACN,OAAX,CAAmBoe,MA3FpB;AA4FtBmB,EAAAA,kBAAkB,EAAEjf,UAAU,CAACN,OAAX,CAAmBoe,MA5FjB;AA6FtBoB,EAAAA,eAAe,EAAElf,UAAU,CAACN,OAAX,CAAmBqe,KA7Fd;AA8FtB7T,EAAAA,iBAAiB,EAAElK,UAAU,CAACN,OAAX,CAAmBme,IA9FhB;AA+FtBlO,EAAAA,YAAY,EAAE3P,UAAU,CAACN,OAAX,CAAmBme,IA/FX;AAgGtBtC,EAAAA,+BAA+B,EAAEvb,UAAU,CAACN,OAAX,CAAmBme,IAhG9B;AAiGtB5C,EAAAA,eAAe,EAAEjb,UAAU,CAACN,OAAX,CAAmB0e,SAAnB,CAA6B,CAACpe,UAAU,CAACN,OAAX,CAAmBue,IAApB,EAA0Bje,UAAU,CAACN,OAAX,CAAmBmC,MAA7C,CAA7B,CAjGK;AAkGtB2L,EAAAA,eAAe,EAAExN,UAAU,CAACN,OAAX,CAAmBqe,KAlGd;AAmGtBlH,EAAAA,SAAS,EAAE7W,UAAU,CAACN,OAAX,CAAmBue,IAAnB,CAAwBkB,UAnGb;AAoGtBlL,EAAAA,QAAQ,EAAEjU,UAAU,CAACN,OAAX,CAAmBme,IApGP;AAqGtBlX,EAAAA,OAAO,EAAE3G,UAAU,CAACN,OAAX,CAAmBme,IArGN;AAsGtB7J,EAAAA,SAAS,EAAEhU,UAAU,CAACN,OAAX,CAAmBse,GAtGR;AAuGtBoB,EAAAA,YAAY,EAAEpf,UAAU,CAACN,OAAX,CAAmBoe,MAvGX;AAwGtBnW,EAAAA,eAAe,EAAE3H,UAAU,CAACN,OAAX,CAAmBoe,MAxGd;AAyGtBuB,EAAAA,YAAY,EAAErf,UAAU,CAACN,OAAX,CAAmBse,GAzGX;AA0GtBnP,EAAAA,gBAAgB,EAAE7O,UAAU,CAACN,OAAX,CAAmBme,IA1Gf;AA2GtB3C,EAAAA,iBAAiB,EAAElb,UAAU,CAACN,OAAX,CAAmBue,IA3GhB;AA4GtB9F,EAAAA,cAAc,EAAEnY,UAAU,CAACN,OAAX,CAAmBue,IA5Gb;AA6GtB1F,EAAAA,qBAAqB,EAAEvY,UAAU,CAACN,OAAX,CAAmBue,IA7GpB;AA8GtBnP,EAAAA,cAAc,EAAE9O,UAAU,CAACN,OAAX,CAAmBue,IA9Gb;AA+GtBxH,EAAAA,qBAAqB,EAAEzW,UAAU,CAACN,OAAX,CAAmBme,IA/GpB;AAgHtBnH,EAAAA,UAAU,EAAE1W,UAAU,CAACN,OAAX,CAAmBue,IAhHT;AAiHtB3Q,EAAAA,UAAU,EAAEtN,UAAU,CAACN,OAAX,CAAmBif,MAjHT;AAkHtB7D,EAAAA,UAAU,EAAE9a,UAAU,CAACN,OAAX,CAAmBye,KAAnB,CAAyB;AACnCmB,IAAAA,UAAU,EAAEtf,UAAU,CAACN,OAAX,CAAmBme,IADI;AAEnCX,IAAAA,QAAQ,EAAEld,UAAU,CAACN,OAAX,CAAmBme;AAFM,GAAzB,CAlHU;AAsHtBxP,EAAAA,GAAG,EAAErO,UAAU,CAACN,OAAX,CAAmBme,IAtHF;AAuHtBlR,EAAAA,aAAa,EAAE3M,UAAU,CAACN,OAAX,CAAmBqe,KAvHZ;AAwHtBwB,EAAAA,oBAAoB,EAAEvf,UAAU,CAACN,OAAX,CAAmBse,GAxHnB;AAyHtBwB,EAAAA,YAAY,EAAExf,UAAU,CAACN,OAAX,CAAmBse,GAzHX;AA0HtBjS,EAAAA,WAAW,EAAE/L,UAAU,CAACN,OAAX,CAAmBse,GA1HV;AA2HtB/Q,EAAAA,iBAAiB,EAAEjN,UAAU,CAACN,OAAX,CAAmBoe,MA3HhB;AA4HtB9Q,EAAAA,kBAAkB,EAAEhN,UAAU,CAACN,OAAX,CAAmBoe,MA5HjB;AA6HtB/Q,EAAAA,oBAAoB,EAAE/M,UAAU,CAACN,OAAX,CAAmBoe,MA7HnB;AA8HtB3C,EAAAA,qBAAqB,EAAEnb,UAAU,CAACN,OAAX,CAAmBme,IA9HpB;AA+HtBnO,EAAAA,gBAAgB,EAAE1P,UAAU,CAACN,OAAX,CAAmBse,GA/Hf;AAgItBpP,EAAAA,cAAc,EAAE5O,UAAU,CAACN,OAAX,CAAmBif,MAhIb;AAiItBjS,EAAAA,aAAa,EAAE1M,UAAU,CAACN,OAAX,CAAmBue,IAjIZ;AAkItBtH,EAAAA,UAAU,EAAE3W,UAAU,CAACN,OAAX,CAAmBue,IAlIT;AAmItBlH,EAAAA,WAAW,EAAE/W,UAAU,CAACN,OAAX,CAAmBue,IAnIV;AAoItBjH,EAAAA,YAAY,EAAEhX,UAAU,CAACN,OAAX,CAAmBue,IApIX;AAqItBhH,EAAAA,iBAAiB,EAAEjX,UAAU,CAACN,OAAX,CAAmBue,IArIhB;AAsItB/G,EAAAA,cAAc,EAAElX,UAAU,CAACN,OAAX,CAAmBue,IAtIb;AAuItBwB,EAAAA,mBAAmB,EAAEzf,UAAU,CAACN,OAAX,CAAmBue,IAvIlB;AAwItB7K,EAAAA,cAAc,EAAEpT,UAAU,CAACN,OAAX,CAAmBue,IAxIb;AAyItByB,EAAAA,gBAAgB,EAAE1f,UAAU,CAACN,OAAX,CAAmBue,IAzIf;AA0ItB7a,EAAAA,YAAY,EAAEpD,UAAU,CAACN,OAAX,CAAmBse,GA1IX;AA2ItBxC,EAAAA,MAAM,EAAExb,UAAU,CAACN,OAAX,CAAmBme,IA3IL;AA4ItB8B,EAAAA,OAAO,EAAE3f,UAAU,CAACN,OAAX,CAAmBif,MA5IN;AA6ItBiB,EAAAA,oBAAoB,EAAE5f,UAAU,CAACN,OAAX,CAAmBme,IA7InB;AA8ItBgC,EAAAA,oBAAoB,EAAE7f,UAAU,CAACN,OAAX,CAAmBse,GA9InB;AA+ItB5C,EAAAA,eAAe,EAAEpb,UAAU,CAACN,OAAX,CAAmBogB,KAAnB,CAAyB,CAAC,oBAAD,EAAuB,oBAAvB,EAA6C,gBAA7C,CAAzB,CA/IK;AAgJtB9X,EAAAA,kBAAkB,EAAEhI,UAAU,CAACN,OAAX,CAAmBme,IAhJjB;AAiJtBkC,EAAAA,YAAY,EAAE/f,UAAU,CAACN,OAAX,CAAmB0e,SAAnB,CAA6B,CAACpe,UAAU,CAACN,OAAX,CAAmBue,IAApB,EAA0Bje,UAAU,CAACN,OAAX,CAAmBme,IAA7C,CAA7B,CAjJQ;AAkJtBjO,EAAAA,kBAAkB,EAAE5P,UAAU,CAACN,OAAX,CAAmBue,IAlJjB;AAmJtB+B,EAAAA,sBAAsB,EAAEhgB,UAAU,CAACN,OAAX,CAAmBue,IAnJrB;AAoJtBgC,EAAAA,oBAAoB,EAAEjgB,UAAU,CAACN,OAAX,CAAmBue,IApJnB;AAqJtBnO,EAAAA,cAAc,EAAE9P,UAAU,CAACN,OAAX,CAAmBue,IArJb;AAsJtBlO,EAAAA,sBAAsB,EAAE/P,UAAU,CAACN,OAAX,CAAmBue,IAtJrB;AAuJtBjO,EAAAA,oBAAoB,EAAEhQ,UAAU,CAACN,OAAX,CAAmBue,IAvJnB;AAwJtBhO,EAAAA,qBAAqB,EAAEjQ,UAAU,CAACN,OAAX,CAAmBue,IAxJpB;AAyJtBjG,EAAAA,0BAA0B,EAAEhY,UAAU,CAACN,OAAX,CAAmBse,GAzJzB;AA0JtBzN,EAAAA,oBAAoB,EAAEvQ,UAAU,CAACN,OAAX,CAAmBme,IA1JnB;AA2JtBvN,EAAAA,oBAAoB,EAAEtQ,UAAU,CAACN,OAAX,CAAmBif,MA3JnB;AA4JtBtO,EAAAA,yBAAyB,EAAErQ,UAAU,CAACN,OAAX,CAAmBme,IA5JxB;AA6JtB3N,EAAAA,kBAAkB,EAAElQ,UAAU,CAACN,OAAX,CAAmBue,IA7JjB;AA8JtB9N,EAAAA,kBAAkB,EAAEnQ,UAAU,CAACN,OAAX,CAAmBue,IA9JjB;AA+JtB7N,EAAAA,kBAAkB,EAAEpQ,UAAU,CAACN,OAAX,CAAmBoe,MA/JjB;AAgKtBtN,EAAAA,0BAA0B,EAAExQ,UAAU,CAACN,OAAX,CAAmBue,IAhKzB;AAiKtBxN,EAAAA,6BAA6B,EAAEzQ,UAAU,CAACN,OAAX,CAAmBue;AAjK5B,CAAxB;;AAoKA,IAAIiC,QAAQ,GAAGpgB,MAAM,CAACJ,OAAP,CAAeygB,IAAf,CAAoB5b,WAApB,EAAiC,UAAU6b,SAAV,EAAqBC,SAArB,EAAgC;AAC9E,MAAIC,QAAQ,GAAG,CAAC,GAAGpgB,aAAa,CAACqgB,cAAlB,EAAkCH,SAAlC,EAA6CC,SAA7C,EAAwD;AACrEhP,IAAAA,kBAAkB,EAAE,CADiD;AAErEmP,IAAAA,mBAAmB,EAAE,CAFgD;AAGrEzb,IAAAA,sBAAsB,EAAE,CAH6C;AAIrE3B,IAAAA,YAAY,EAAE,CAJuD;AAKrEiD,IAAAA,MAAM,EAAE,CAL6D;AAMrEoa,IAAAA,SAAS,EAAE,CAN0D;AAOrEC,IAAAA,OAAO,EAAE,CAP4D;AAQrEhK,IAAAA,UAAU,EAAE,CARyD;AASrE5N,IAAAA,WAAW,EAAE,CATwD;AAUrE4G,IAAAA,gBAAgB,EAAE,CAVmD;AAWrEkJ,IAAAA,kBAAkB,EAAE,CAXiD;AAYrE1K,IAAAA,SAAS,EAAE,CAZ0D;AAarE4K,IAAAA,gBAAgB,EAAE,CAbmD;AAcrEoG,IAAAA,eAAe,EAAE,CAdoD;AAerExQ,IAAAA,cAAc,EAAE,CAfqD;AAgBrE0L,IAAAA,OAAO,EAAE,CAhB4D;AAiBrEZ,IAAAA,KAAK,EAAE,CAjB8D;AAkBrElP,IAAAA,aAAa,EAAE,CAlBsD;AAmBrEiO,IAAAA,qBAAqB,EAAE,CAnB8C;AAoBrErI,IAAAA,kBAAkB,EAAE,CApBiD;AAqBrEC,IAAAA,kBAAkB,EAAE,CArBiD;AAsBrE3B,IAAAA,qBAAqB,EAAE,CAtB8C;AAuBrEgB,IAAAA,mBAAmB,EAAE;AAvBgD,GAAxD,CAAf;;AA0BA,MAAI8Q,QAAQ,CAACnd,MAAb,EAAqB;AACnB,QAAIid,SAAS,CAAC/O,kBAAV,IAAgCgP,SAAS,CAAChP,kBAA9C,EAAkE;AAChE,UAAIsP,KAAK,GAAGP,SAAS,CAAC/O,kBAAV,IAAgC,EAA5C;AAAA,UACIuP,KAAK,GAAG,CAAC,GAAGjhB,eAAe,CAACD,OAApB,EAA6BihB,KAA7B,EAAoC,CAApC,CADZ;AAAA,UAEIE,WAAW,GAAGD,KAAK,CAAC,CAAD,CAFvB;;AAIA,UAAIE,KAAK,GAAGT,SAAS,CAAChP,kBAAV,IAAgC,EAA5C;AAAA,UACI0P,KAAK,GAAG,CAAC,GAAGphB,eAAe,CAACD,OAApB,EAA6BohB,KAA7B,EAAoC,CAApC,CADZ;AAAA,UAEIE,WAAW,GAAGD,KAAK,CAAC,CAAD,CAFvB;;AAIA,UAAIF,WAAW,KAAKR,SAAS,CAAC5Z,QAA1B,IAAsCua,WAAW,KAAKX,SAAS,CAAC5Z,QAApE,EAA8E;AAC5E,eAAO,KAAP;AACD;AACF;AACF;;AAED,MAAI,CAAC6Z,QAAQ,CAACnd,MAAd,EAAsB;AACpB,WAAO,KAAP;AACD;;AAED,MAAIid,SAAS,CAAC/Z,MAAV,KAAqBga,SAAS,CAACha,MAAnC,EAA2C;AACzC,WAAO,KAAP;AACD;;AAED,MAAI4a,IAAI,CAACC,SAAL,CAAed,SAAS,CAAC5G,KAAzB,MAAoCyH,IAAI,CAACC,SAAL,CAAeb,SAAS,CAAC7G,KAAzB,CAAxC,EAAyE;AACvE,WAAO,KAAP;AACD;;AAED,MAAI2H,iBAAJ,EAAuBC,gBAAvB;AACA,MAAIC,aAAJ,EAAmBC,YAAnB;;AAEA,MAAIlB,SAAS,CAAC/O,kBAAd,EAAkC;AAChC,QAAIkQ,qBAAqB,GAAG,CAAC,GAAG5hB,eAAe,CAACD,OAApB,EAA6B0gB,SAAS,CAAC/O,kBAAvC,EAA2D,CAA3D,CAA5B;;AAEA8P,IAAAA,iBAAiB,GAAGI,qBAAqB,CAAC,CAAD,CAAzC;AACAH,IAAAA,gBAAgB,GAAGG,qBAAqB,CAAC,CAAD,CAAxC;AACD;;AAED,MAAIlB,SAAS,CAAChP,kBAAd,EAAkC;AAChC,QAAImQ,qBAAqB,GAAG,CAAC,GAAG7hB,eAAe,CAACD,OAApB,EAA6B2gB,SAAS,CAAChP,kBAAvC,EAA2D,CAA3D,CAA5B;;AAEAgQ,IAAAA,aAAa,GAAGG,qBAAqB,CAAC,CAAD,CAArC;AACAF,IAAAA,YAAY,GAAGE,qBAAqB,CAAC,CAAD,CAApC;AACD;;AAED,MAAIH,aAAa,KAAKF,iBAAtB,EAAyC;AACvC,QAAId,SAAS,CAAC5Z,QAAV,KAAuB4a,aAAvB,IAAwChB,SAAS,CAAC5Z,QAAV,KAAuB0a,iBAAnE,EAAsF;AACpF,aAAO,KAAP;AACD;AACF,GAJD,MAIO;AACL,QAAId,SAAS,CAAC5Z,QAAV,KAAuB4a,aAAvB,IAAwCC,YAAY,KAAKF,gBAA7D,EAA+E;AAC7E,aAAO,KAAP;AACD;AACF;;AAED,SAAO,IAAP;AACD,CAnFc,CAAf;;AAqFA5hB,OAAO,CAACE,OAAR,GAAkBwgB,QAAlB","sourcesContent":["/** \n * Copyright Â© INOVUA TRADING.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _reactCleanProps = _interopRequireDefault(require(\"../../../packages/react-clean-props\"));\n\nvar _shallowequal = require(\"../../../packages/shallowequal\");\n\nvar _join = _interopRequireDefault(require(\"../../../packages/join\"));\n\nvar _clamp = _interopRequireDefault(require(\"../../../utils/clamp\"));\n\nvar _Cell = _interopRequireDefault(require(\"../Cell\"));\n\nvar _renderCellsMaybeLocked = _interopRequireDefault(require(\"./renderCellsMaybeLocked\"));\n\nvar _adjustCellProps = _interopRequireDefault(require(\"./adjustCellProps\"));\n\nvar _usePrevious = _interopRequireDefault(require(\"../../../hooks/usePrevious\"));\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nvar CLASS_NAME = 'InovuaReactDataGrid__row';\n\nvar rowClean = function rowClean(p) {\n  var result = _objectSpread({}, p);\n\n  delete result.activeRowRef;\n  return result;\n};\n\nvar skipSelect = function skipSelect(event) {\n  event.nativeEvent.skipSelect = true;\n};\n\nvar getValueForPivotColumn = function getValueForPivotColumn(item, path) {\n  return path.reduce(function (acc, field, index) {\n    if (!acc || acc[field] == null) {\n      return null;\n    }\n\n    if (index === path.length - 1) {\n      return acc[field];\n    }\n\n    return acc[field].pivotSummary || acc[field].values;\n  }, item);\n};\n\nvar getValueForPivotColumnSummary = function getValueForPivotColumnSummary(item, _ref) {\n  var path = _ref.pivotSummaryPath;\n  var i = 0;\n  var root = item;\n  var current;\n\n  while ((current = path[i]) && root) {\n    if (!root.pivotSummary) {\n      return null;\n    }\n\n    root = root.pivotSummary[current.value];\n    i++;\n  }\n\n  if (root && root.pivotColumnSummary) {\n    return root.pivotColumnSummary[path[path.length - 1].field];\n  }\n\n  return null;\n};\n\nvar DataGridRow = _react.default.forwardRef(function (props, ref) {\n  var cells = (0, _react.useRef)([]);\n  var cellRef = (0, _react.useRef)();\n  var domRef = (0, _react.useRef)(null);\n  var columnRenderStartIndex = (0, _react.useRef)(0);\n  var hasBorderTop = (0, _react.useRef)(false);\n  var hasBorderBottom = (0, _react.useRef)(false);\n  var maxRowspan = (0, _react.useRef)(1);\n  var scrollingInProgress = (0, _react.useRef)(false);\n  var scrollingDirection = (0, _react.useRef)('vertical');\n\n  var initCells = function initCells() {\n    cellRef.current = function (c) {\n      if (!c) return;\n      cells.current.push(c);\n    };\n  };\n\n  var cleanupCells = (0, _react.useCallback)(function () {\n    cells.current = cells.current.filter(Boolean);\n    return cells.current;\n  }, []);\n  var getCells = (0, _react.useCallback)(function () {\n    return cells.current;\n  }, []);\n  var prevColumnRenderCount = (0, _usePrevious.default)(props.columnRenderCount, props.columnRenderCount);\n\n  if (props.columnRenderCount < prevColumnRenderCount) {\n    cleanupCells();\n    getCells().forEach(function (cell) {\n      if (cell.getProps().computedLocked) {\n        return;\n      }\n\n      cell.setStateProps(null);\n    });\n  }\n\n  var getDOMNode = (0, _react.useCallback)(function () {\n    return domRef.current;\n  }, []);\n\n  var setActiveRowRef = function setActiveRowRef() {\n    props.activeRowRef.current = {\n      instance: {\n        hasBorderBottom: hasBorderBottom.current,\n        hasBorderTop: hasBorderTop.current,\n        props: props\n      },\n      node: getDOMNode()\n    };\n  };\n\n  if (props.active) {\n    setActiveRowRef();\n  }\n\n  (0, _react.useEffect)(function () {\n    initCells();\n\n    if (props.columnRenderStartIndex) {\n      setColumnRenderStartIndex(props.columnRenderStartIndex);\n    }\n\n    return function () {\n      cells.current = [];\n    };\n  }, []);\n  var prevRowIndex = (0, _usePrevious.default)(props.rowIndex, props.rowIndex);\n  var prevEditing = (0, _usePrevious.default)(props.editing, props.editing);\n  var prevActive = (0, _usePrevious.default)(props.active, props.active);\n  (0, _react.useEffect)(function () {\n    if (props.groupProps && props.rowIndex !== prevRowIndex) {\n      fixForColspan();\n    }\n\n    if (props.editing !== prevEditing) {\n      updateEditCell();\n    }\n\n    if (!prevActive && props.active) {\n      setActiveRowRef();\n    }\n  });\n  var onCellUnmount = (0, _react.useCallback)(function (_cellProps, cell) {\n    if (cells.current) {\n      cells.current = cells.current.filter(function (c) {\n        return c !== cell;\n      });\n    }\n  }, []);\n  var orderCells = (0, _react.useCallback)(function () {\n    var cells = cleanupCells();\n    var sortedProps = cells.map(function (c) {\n      return c.getProps();\n    }).sort(function (p1, p2) {\n      return p1.index - p2.index;\n    });\n    cells.sort(function (cell1, cell2) {\n      return cell1.props.renderIndex - cell2.props.renderIndex;\n    });\n    cells.forEach(function (c, i) {\n      c.setStateProps(sortedProps[i]);\n    });\n  }, [cleanupCells]);\n  var updateEditCell = (0, _react.useCallback)(function () {\n    var cells = getCells();\n    var editColumnIndex = props.editColumnIndex;\n\n    for (var i = 0, len = cells.length, cell; i < len; i++) {\n      cell = cells[i];\n\n      if (getCellIndex(cell) === editColumnIndex) {\n        setCellIndex(cell, editColumnIndex);\n      }\n\n      if (cell.getProps().inEdit) {\n        setCellIndex(cell, getCellIndex(cell));\n      }\n    }\n  }, [props.editColumnIndex]);\n  var fixForColspan = (0, _react.useCallback)(function () {\n    if (props.computedHasColSpan) {\n      setColumnRenderStartIndex(columnRenderStartIndex.current);\n    }\n  }, [props.computedHasColSpan]);\n  var setScrolling = (0, _react.useCallback)(function (scrolling) {\n    var node = getDOMNode() || domRef.current;\n    var scrollingDir = scrollingDirection.current;\n\n    if (scrolling !== false) {\n      scrollingDirection.current = scrolling;\n    }\n\n    var oldScrollingInProgress = scrollingInProgress.current;\n    scrollingDirection.current = scrollingDir;\n    scrollingInProgress.current = scrolling ? true : false;\n\n    if (!node) {\n      return;\n    }\n\n    if (oldScrollingInProgress !== scrollingInProgress.current) {\n      var _className = \"\".concat(CLASS_NAME, \"--scrolling\");\n\n      if (scrollingInProgress.current) {\n        node.classList.add(_className);\n      } else {\n        node.classList.remove(_className);\n      }\n    }\n\n    return;\n  }, []);\n  var renderRowDetails = (0, _react.useCallback)(function (rowDetailsInfo) {\n    if (props.computedRenderRowDetails) {\n      return props.computedRenderRowDetails(rowDetailsInfo);\n    }\n\n    return 'Please specify `renderRowDetails`';\n  }, []);\n  var onContextMenu = (0, _react.useCallback)(function (event) {\n    var passedProps = props.passedProps,\n        onRowContextMenu = props.onRowContextMenu;\n\n    if (onRowContextMenu) {\n      onRowContextMenu(props, event);\n    }\n\n    if (passedProps && passedProps.onContextMenu) {\n      passedProps.onContextMenu(event, props);\n    }\n  }, [props.passedProps, props.passedProps.onContextMenu, props.onRowContextMenu]);\n  var setCellIndex = (0, _react.useCallback)(function (cell, index, cellProps) {\n    cellProps = cellProps || (props.computedHasColSpan ? getPropsForCells().slice(index, index + 1)[0] : getPropsForCells(index, index)[0]);\n    cell.setStateProps(cellProps);\n  }, [props.computedHasColSpan]);\n  var getCellIndex = (0, _react.useCallback)(function (cell) {\n    return cell.getProps().computedVisibleIndex;\n  }, []);\n  var sortCells = (0, _react.useCallback)(function (cells) {\n    return cells.sort(function (cell1, cell2) {\n      return getCellIndex(cell1) - getCellIndex(cell2);\n    });\n  }, []);\n  var getCellAt = (0, _react.useCallback)(function (index) {\n    return getCells().filter(function (c) {\n      return c.getProps().computedVisibleIndex === index;\n    })[0];\n  }, []);\n  var getCellById = (0, _react.useCallback)(function (id) {\n    return getCells().filter(function (c) {\n      return c.getProps().id === id;\n    })[0];\n  }, []);\n  var getSortedCells = (0, _react.useCallback)(function () {\n    return sortCells(getCells().slice());\n  }, []);\n  var getGaps = (0, _react.useCallback)(function (startIndex, endIndex) {\n    var visibleCellPositions = {};\n    var sortedCells = getSortedCells();\n    sortedCells.forEach(function (cell) {\n      var cellProps = cell.getProps();\n\n      if (cellProps.computedLocked) {\n        return;\n      }\n\n      var computedVisibleIndex = cellProps.computedVisibleIndex,\n          computedColspan = cellProps.computedColspan,\n          groupProps = cellProps.groupProps;\n\n      if (groupProps && computedVisibleIndex <= groupProps.depth + 1) {\n        return;\n      }\n\n      visibleCellPositions[computedVisibleIndex] = true;\n\n      if (computedColspan) {\n        for (var i = 0; i < computedColspan; i++) {\n          visibleCellPositions[computedVisibleIndex + i] = true;\n        }\n      }\n    });\n    var gaps = [];\n\n    for (; startIndex <= endIndex; startIndex++) {\n      if (!visibleCellPositions[startIndex]) {\n        gaps.push(startIndex);\n      }\n    }\n\n    return gaps;\n  }, []);\n  var getVirtualizeColumns = (0, _react.useCallback)(function () {\n    return props.virtualizeColumns;\n    return scrollingDirection.current !== 'horizontal' ? props.virtualizeColumns : false;\n  }, [props.virtualizeColumns]);\n  var toggleRowExpand = (0, _react.useCallback)(function (rowIndex) {\n    if (typeof rowIndex !== 'number') {\n      rowIndex = props.realIndex;\n    }\n\n    props.toggleRowExpand(rowIndex);\n  }, [props.realIndex, props.toggleRowExpand]);\n  var toggleNodeExpand = (0, _react.useCallback)(function (rowIndex) {\n    if (typeof rowIndex !== 'number') {\n      rowIndex = props.realIndex;\n    }\n\n    props.toggleNodeExpand(rowIndex);\n  }, [props.realIndex, props.toggleNodeExpand]);\n  var loadNodeAsync = (0, _react.useCallback)(function () {\n    var _props$loadNodeAsync;\n\n    (_props$loadNodeAsync = props.loadNodeAsync) === null || _props$loadNodeAsync === void 0 ? void 0 : _props$loadNodeAsync.call(props, props.data);\n  }, [props.loadNodeAsync, props.data]);\n  var isRowExpandable = (0, _react.useCallback)(function (rowIndex) {\n    if (typeof rowIndex !== 'number') {\n      rowIndex = props.realIndex;\n    }\n\n    return props.isRowExpandableAt(rowIndex);\n  }, [props.realIndex, props.isRowExpandableAt]);\n  var setRowExpanded = (0, _react.useCallback)(function (expanded, _) {\n    var rowIndex = props.realIndex;\n    var _expanded = expanded;\n\n    if (typeof expanded === 'number') {\n      rowIndex = expanded;\n      _expanded = _;\n    }\n\n    props.setRowExpanded(rowIndex, _expanded);\n  }, [props.realIndex, props.setRowExpanded]);\n\n  var getCurrentGaps = function getCurrentGaps() {};\n\n  var setColumnRenderStartIndex = (0, _react.useCallback)(function (columnStartIndex) {\n    if (columnRenderStartIndex.current === columnStartIndex) {\n      return;\n    }\n\n    columnRenderStartIndex.current = columnStartIndex;\n\n    if (getVirtualizeColumns() === false) {\n      return;\n    }\n\n    var newCellProps;\n    var renderRange;\n    var cellPropsAt;\n\n    if (props.computedHasColSpan) {\n      newCellProps = getPropsForCells();\n      renderRange = getColumnRenderRange(newCellProps);\n\n      cellPropsAt = function cellPropsAt(index) {\n        return newCellProps[index];\n      };\n    } else {\n      var _renderRange, _renderRange2;\n\n      renderRange = getColumnRenderRange();\n      newCellProps = getPropsForCells((_renderRange = renderRange) === null || _renderRange === void 0 ? void 0 : _renderRange.start, (((_renderRange2 = renderRange) === null || _renderRange2 === void 0 ? void 0 : _renderRange2.end) || 0) + 1);\n\n      cellPropsAt = function cellPropsAt(index) {\n        return newCellProps.filter(function (cellProps) {\n          return cellProps.computedVisibleIndex === index;\n        })[0];\n      };\n    }\n\n    if (!renderRange) {\n      return;\n    }\n\n    var _renderRange3 = renderRange,\n        start = _renderRange3.start,\n        end = _renderRange3.end;\n    var gaps = getGaps(start, end);\n\n    if (!gaps.length) {\n      return;\n    }\n\n    var gapsMap = gaps.reduce(function (acc, gapIndex) {\n      acc[gapIndex] = true;\n      return acc;\n    }, {});\n    var tempCellMap = {};\n    var calls = [];\n    getCells().forEach(function (cell) {\n      var cellProps = cell.getProps();\n      var groupProps = cellProps.groupProps,\n          cellIndex = cellProps.computedVisibleIndex,\n          computedColspan = cellProps.computedColspan,\n          computedLocked = cellProps.computedLocked;\n\n      if (computedLocked) {\n        return;\n      }\n\n      if (!props.groupColumn && groupProps && cellIndex <= groupProps.depth + 1) {\n        return;\n      }\n\n      var outside = cellIndex < start || cellIndex > end || cellIndex === undefined;\n\n      if (outside && computedColspan) {\n        var endCellIndex = cellIndex + (computedColspan - 1);\n        outside = cellIndex < start && endCellIndex < start || cellIndex > end;\n      }\n\n      var outOfView = outside || tempCellMap[cellIndex] || gapsMap[cellIndex];\n      tempCellMap[cellIndex] = true;\n      var newIndex;\n\n      if (outOfView && gaps.length) {\n        newIndex = gaps[gaps.length - 1];\n        calls.push([cell, newIndex]);\n        gaps.length -= 1;\n      }\n    });\n    calls.forEach(function (call) {\n      var cell = call[0];\n      var newIndex = call[1];\n      setCellIndex(cell, newIndex, cellPropsAt(newIndex));\n    });\n  }, [props.columnRenderStartIndex, props.computedHasColSpan, props.columnRenderCount, props.virtualizeColumns]);\n  var propsRef = (0, _react.useRef)(props);\n  propsRef.current = props;\n\n  var getPropsForCells = function getPropsForCells(startIndex, endIndex) {\n    var _columns$filter$;\n\n    var props = propsRef.current;\n    var initialColumns = props.columns;\n    var columns = initialColumns;\n    var hasLockedStart = props.hasLockedStart,\n        data = props.data,\n        onGroupToggle = props.onGroupToggle,\n        computedPivot = props.computedPivot,\n        rowHeight = props.rowHeight,\n        remoteRowIndex = props.remoteRowIndex,\n        initialRowHeight = props.initialRowHeight,\n        lastLockedStartIndex = props.lastLockedStartIndex,\n        lastLockedEndIndex = props.lastLockedEndIndex,\n        lastUnlockedIndex = props.lastUnlockedIndex,\n        minRowHeight = props.minRowHeight,\n        realIndex = props.realIndex,\n        showHorizontalCellBorders = props.showHorizontalCellBorders,\n        showVerticalCellBorders = props.showVerticalCellBorders,\n        empty = props.empty,\n        treeColumn = props.treeColumn,\n        groupColumn = props.groupColumn,\n        totalDataCount = props.totalDataCount,\n        depth = props.depth,\n        dataSourceArray = props.dataSourceArray,\n        computedGroupBy = props.computedGroupBy,\n        groupProps = props.groupProps,\n        summaryProps = props.summaryProps,\n        indexInGroup = props.indexInGroup,\n        firstUnlockedIndex = props.firstUnlockedIndex,\n        firstLockedEndIndex = props.firstLockedEndIndex,\n        selectAll = props.selectAll,\n        deselectAll = props.deselectAll,\n        columnUserSelect = props.columnUserSelect,\n        multiSelect = props.multiSelect,\n        selection = props.selection,\n        setRowSelected = props.setRowSelected,\n        computedRowExpandEnabled = props.computedRowExpandEnabled,\n        rtl = props.rtl,\n        lastRow = props.last,\n        computedCellSelection = props.computedCellSelection,\n        lastNonEmpty = props.lastNonEmpty,\n        maxVisibleRows = props.maxVisibleRows,\n        onCellClick = props.onCellClick,\n        editStartEvent = props.editStartEvent,\n        naturalRowHeight = props.naturalRowHeight,\n        renderNodeTool = props.renderNodeTool,\n        computedTreeEnabled = props.computedTreeEnabled,\n        rowExpanded = props.expanded,\n        expandGroupTitle = props.expandGroupTitle,\n        expandColumnFn = props.expandColumn,\n        onCellSelectionDraggerMouseDown = props.onCellSelectionDraggerMouseDown,\n        onCellMouseDown = props.onCellMouseDown,\n        onCellEnter = props.onCellEnter,\n        computedCellMultiSelectionEnabled = props.computedCellMultiSelectionEnabled,\n        getCellSelectionKey = props.getCellSelectionKey,\n        lastCellInRange = props.lastCellInRange,\n        computedRowspans = props.computedRowspans,\n        renderIndex = props.renderIndex,\n        nativeScroll = props.nativeScroll,\n        onDragRowMouseDown = props.onDragRowMouseDown,\n        theme = props.theme,\n        onContextMenu = props.onContextMenu,\n        setActiveIndex = props.setActiveIndex,\n        renderTreeCollapseTool = props.renderTreeCollapseTool,\n        renderTreeExpandTool = props.renderTreeExpandTool,\n        renderTreeLoadingTool = props.renderTreeLoadingTool,\n        onColumnMouseEnter = props.onColumnMouseEnter,\n        onColumnMouseLeave = props.onColumnMouseLeave,\n        columnIndexHovered = props.columnIndexHovered,\n        computedEnableColumnHover = props.computedEnableColumnHover,\n        columnHoverClassName = props.columnHoverClassName,\n        enableColumnAutosize = props.enableColumnAutosize,\n        renderRowDetailsExpandIcon = props.renderRowDetailsExpandIcon,\n        renderRowDetailsCollapsedIcon = props.renderRowDetailsCollapsedIcon;\n    var expandColumnId = expandColumnFn ? expandColumnFn({\n      data: data\n    }) : undefined;\n    var virtualizeColumns = getVirtualizeColumns();\n    var visibleColumnCount = columns.length;\n    var expandColumnIndex = expandColumnId ? (_columns$filter$ = columns.filter(function (c) {\n      return c.id === expandColumnId;\n    })[0]) === null || _columns$filter$ === void 0 ? void 0 : _columns$filter$.computedVisibleIndex : undefined;\n\n    if (startIndex !== undefined) {\n      columns = columns.slice(startIndex, endIndex ? endIndex + 1 : startIndex + 1);\n    }\n\n    startIndex = startIndex || 0;\n    var hasBorderTopVar = false;\n    var hasBorderBottomVar = false;\n    var hiddenCells = {};\n    var belongsToColspan = {};\n    var columnsTillColspanStart = {};\n    var lastInGroup = indexInGroup == props.groupCount - 1;\n    var activeCell = props.computedActiveCell && getCellSelectionKey ? getCellSelectionKey.apply(void 0, (0, _toConsumableArray2.default)(props.computedActiveCell)) : null;\n    var lastInRange = lastCellInRange || activeCell || null;\n    var maxRowspanVar = 1;\n    var cellPropsArray = columns.map(function (column, xindex) {\n      var theColumnIndex = xindex + startIndex;\n      var columnProps = column;\n      var name = columnProps.name,\n          computedVisibleIndex = columnProps.computedVisibleIndex;\n      var value = data ? data[name] : null;\n      var rowIndex = realIndex;\n\n      if (groupProps && data && data.groupColumnSummary) {\n        value = data.groupColumnSummary[name];\n      }\n\n      if (groupProps && data && column.groupColumn) {\n        value = data.value;\n      }\n\n      if (columnProps.pivotColumnPath) {\n        value = data.pivotSummary ? getValueForPivotColumn(data.pivotSummary, columnProps.pivotColumnPath) : value;\n      }\n\n      if (columnProps.pivotGrandSummaryColumn) {} else {\n        if (columnProps.pivotSummaryPath) {\n          value = data.pivotSummary ? getValueForPivotColumnSummary(data, {\n            pivotSummaryPath: columnProps.pivotSummaryPath,\n            pivotGrandSummaryColumn: columnProps.pivotGrandSummaryColumn\n          }) : value;\n        }\n      }\n\n      var defaults = {};\n\n      if (columnUserSelect !== undefined) {\n        defaults.userSelect = columnUserSelect;\n      }\n\n      var groupTitleCell = !groupColumn && groupProps && groupProps.depth + 1 == computedVisibleIndex;\n      var groupExpandCell = !groupColumn && groupProps && groupProps.depth == computedVisibleIndex;\n      var hidden = groupProps ? expandGroupTitle && !groupColumn ? computedVisibleIndex > groupProps.depth + 1 : false : false;\n\n      if (expandColumnIndex != null && computedVisibleIndex > expandColumnIndex) {\n        hidden = true;\n      }\n\n      var cellProps = _objectSpread(_objectSpread(_objectSpread({}, defaults), columnProps), {}, {\n        remoteRowIndex: remoteRowIndex,\n        indexInColumns: theColumnIndex,\n        depth: depth,\n        expandColumnIndex: expandColumnIndex,\n        expandColumn: expandColumnIndex === computedVisibleIndex,\n        editStartEvent: editStartEvent,\n        onCellClick: onCellClick,\n        computedRowspan: computedRowspans ? computedRowspans[column.id] : 1,\n        groupNestingSize: props.groupNestingSize,\n        treeNestingSize: props.treeNestingSize,\n        data: data,\n        naturalRowHeight: naturalRowHeight,\n        totalDataCount: totalDataCount,\n        onCellSelectionDraggerMouseDown: onCellSelectionDraggerMouseDown,\n        onCellMouseDown: onCellMouseDown,\n        onCellEnter: onCellEnter,\n        rtl: rtl,\n        computedPivot: computedPivot,\n        selectAll: selectAll,\n        deselectAll: deselectAll,\n        selection: selection,\n        renderNodeTool: renderNodeTool,\n        onDragRowMouseDown: onDragRowMouseDown,\n        multiSelect: multiSelect,\n        treeColumn: treeColumn !== undefined ? treeColumn === columnProps.id : false,\n        setRowSelected: setRowSelected,\n        setRowExpanded: computedRowExpandEnabled ? setRowExpanded : null,\n        toggleRowExpand: computedRowExpandEnabled ? toggleRowExpand : null,\n        toggleNodeExpand: computedTreeEnabled ? toggleNodeExpand : null,\n        loadNodeAsync: computedTreeEnabled ? loadNodeAsync : null,\n        rowActive: props.active,\n        rowSelected: props.selected,\n        rowExpanded: rowExpanded,\n        rowIndex: rowIndex,\n        rowHeight: rowHeight,\n        groupColumnVisible: !!groupColumn,\n        minRowHeight: minRowHeight,\n        groupProps: groupProps,\n        summaryProps: summaryProps,\n        empty: empty,\n        computedGroupBy: computedGroupBy,\n        nativeScroll: nativeScroll,\n        computedCellMultiSelectionEnabled: computedCellMultiSelectionEnabled,\n        lastRowInGroup: lastInGroup,\n        columnIndex: computedVisibleIndex,\n        first: computedVisibleIndex == 0,\n        last: computedVisibleIndex == visibleColumnCount - 1,\n        value: value,\n        virtualizeColumns: virtualizeColumns,\n        hasLockedStart: hasLockedStart,\n        rowIndexInGroup: indexInGroup,\n        rowRenderIndex: renderIndex,\n        hidden: hidden,\n        groupTitleCell: groupTitleCell,\n        groupExpandCell: groupExpandCell,\n        isRowExpandable: computedRowExpandEnabled ? isRowExpandable : null,\n        tryRowCellEdit: tryRowCellEdit,\n        tryNextRowEdit: tryNextRowEdit,\n        onGroupToggle: onGroupToggle,\n        initialRowHeight: rowExpanded ? initialRowHeight : rowHeight,\n        theme: theme,\n        onContextMenu: onContextMenu,\n        setActiveIndex: setActiveIndex,\n        renderTreeCollapseTool: renderTreeCollapseTool,\n        renderTreeExpandTool: renderTreeExpandTool,\n        renderTreeLoadingTool: renderTreeLoadingTool,\n        onColumnMouseEnter: onColumnMouseEnter,\n        onColumnMouseLeave: onColumnMouseLeave,\n        columnIndexHovered: columnIndexHovered,\n        computedEnableColumnHover: computedEnableColumnHover,\n        columnHoverClassName: columnHoverClassName,\n        renderRowDetailsExpandIcon: renderRowDetailsExpandIcon,\n        renderRowDetailsCollapsedIcon: renderRowDetailsCollapsedIcon\n      });\n\n      if (computedCellSelection && getCellSelectionKey) {\n        cellProps.cellSelected = computedCellSelection[getCellSelectionKey(rowIndex, computedVisibleIndex)];\n\n        if (cellProps.cellSelected) {\n          cellProps.hasRightSelectedSibling = cellProps.last ? false : computedCellSelection[getCellSelectionKey(rowIndex, computedVisibleIndex + 1)];\n          cellProps.hasLeftSelectedSibling = cellProps.first ? false : computedCellSelection[getCellSelectionKey(rowIndex, computedVisibleIndex - 1)];\n          cellProps.hasTopSelectedSibling = computedCellSelection[getCellSelectionKey(rowIndex - 1, computedVisibleIndex)];\n          cellProps.hasBottomSelectedSibling = computedCellSelection[getCellSelectionKey(rowIndex + 1, computedVisibleIndex)];\n        }\n      }\n\n      if (getCellSelectionKey && (activeCell || lastInRange)) {\n        var cellKey = getCellSelectionKey(rowIndex, computedVisibleIndex);\n\n        if (activeCell && activeCell === cellKey) {\n          cellProps.cellActive = true;\n        }\n\n        if (lastInRange && lastInRange === cellKey) {\n          cellProps.lastInRange = true;\n        }\n      }\n\n      if (cellProps.visibilityTransitionDuration || cellProps.showTransitionDuration || cellProps.hideTransitionDuration) {\n        cellProps.onTransitionEnd = onTransitionEnd(cellProps, columnProps);\n      }\n\n      if (props.editing && props.editColumnIndex === cellProps.columnIndex) {\n        cellProps.inEdit = true;\n        cellProps.editValue = props.editValue;\n      }\n\n      if (virtualizeColumns && !cellProps.computedLocked || enableColumnAutosize || props.editable || cellProps.computedEditable) {\n        cellProps.cellRef = cellRef.current;\n        cellProps.onUnmount = onCellUnmount;\n      }\n\n      var computedLocked = cellProps.computedLocked,\n          colspan = cellProps.colspan;\n      var lockedStart = computedLocked === 'start';\n      var lockedEnd = computedLocked === 'end';\n      var unlocked = !computedLocked;\n      var computedColspan = 1;\n\n      if (typeof colspan === 'function') {\n        computedColspan = cellProps.computedColspan = Math.max(1, colspan({\n          remoteRowIndex: remoteRowIndex,\n          dataSourceArray: dataSourceArray,\n          data: cellProps.data,\n          value: cellProps.value,\n          rowIndex: cellProps.rowIndex,\n          column: column,\n          columns: columns,\n          empty: empty\n        }));\n\n        if (lockedStart) {\n          computedColspan = (0, _clamp.default)(computedColspan, 1, Math.max(lastLockedStartIndex - computedVisibleIndex + 1, 1));\n        }\n\n        if (lockedEnd) {\n          computedColspan = (0, _clamp.default)(computedColspan, 1, Math.max(lastLockedEndIndex - computedVisibleIndex + 1, 1));\n        }\n\n        if (unlocked) {\n          computedColspan = (0, _clamp.default)(computedColspan, 1, Math.max(lastUnlockedIndex - computedVisibleIndex + 1, 1));\n        }\n\n        if (computedColspan > 1) {\n          cellProps.computedWidth = columns.slice(theColumnIndex, theColumnIndex + computedColspan).reduce(function (sum, col) {\n            if (col.id !== column.id) {\n              hiddenCells[col.id] = true;\n\n              if (column.computedLocked === col.computedLocked) {\n                belongsToColspan[col.id] = column.id;\n                columnsTillColspanStart[col.id] = col.computedVisibleIndex - column.computedVisibleIndex;\n              }\n            }\n\n            return sum + col.computedWidth;\n          }, 0);\n        }\n      }\n\n      cellProps.lastInSection = lockedStart ? computedVisibleIndex + computedColspan - 1 === firstUnlockedIndex - 1 : lockedEnd ? computedVisibleIndex + computedColspan - 1 === visibleColumnCount - 1 : computedVisibleIndex + computedColspan - 1 === firstLockedEndIndex - 1;\n      cellProps.firstInSection = lockedStart ? computedVisibleIndex === 0 : lockedEnd ? computedVisibleIndex === firstLockedEndIndex : computedVisibleIndex === firstUnlockedIndex;\n\n      if (computedGroupBy && !groupColumn && !!cellProps.depth) {\n        cellProps.noBackground = computedVisibleIndex < cellProps.depth;\n      }\n\n      if (hiddenCells[column.id]) {\n        cellProps.hidden = true;\n      }\n\n      if (belongsToColspan[column.id]) {\n        cellProps.computedColspanedBy = belongsToColspan[column.id];\n        cellProps.computedColspanToStart = columnsTillColspanStart[column.id];\n      }\n\n      if (groupProps && !groupColumn || expandColumnIndex != null) {\n        (0, _adjustCellProps.default)(cellProps, props);\n      }\n\n      if (cellProps.hidden) {\n        cellProps.last = false;\n        cellProps.lastInSection = false;\n      } else {\n        cellProps.showBorderLeft = showVerticalCellBorders && computedVisibleIndex > 0;\n        cellProps.showBorderBottom = showHorizontalCellBorders;\n\n        if (!showVerticalCellBorders && computedGroupBy) {\n          cellProps.showBorderLeft = computedVisibleIndex > 0 && computedVisibleIndex <= computedGroupBy.length;\n        }\n\n        if (computedGroupBy) {\n          if (!cellProps.groupProps) {\n            cellProps.showBorderBottom = groupColumn ? showHorizontalCellBorders : computedVisibleIndex >= computedGroupBy.length && showHorizontalCellBorders;\n            var summaryBefore = indexInGroup === 0 && !groupColumn ? dataSourceArray[rowIndex - indexInGroup] : null;\n\n            if (summaryBefore && summaryBefore.__summary && computedVisibleIndex >= computedGroupBy.length) {\n              cellProps.showBorderBottom = false;\n            }\n          }\n\n          if (!empty) {\n            if (!groupColumn && (computedVisibleIndex < computedGroupBy.length || lastInGroup)) {\n              cellProps.showBorderBottom = rowExpanded;\n            }\n\n            if (cellProps.groupProps) {\n              cellProps.showBorderBottom = cellProps.groupProps.collapsed ? !!groupColumn : groupColumn ? true : computedVisibleIndex > cellProps.groupProps.depth && cellProps.groupProps.depth >= computedGroupBy.length;\n              cellProps.showBorderTop = groupTitleCell || groupExpandCell || !expandGroupTitle && !groupColumn;\n            } else if (indexInGroup === 0 && !groupColumn) {\n              cellProps.showBorderTop = computedVisibleIndex >= computedGroupBy.length;\n            }\n\n            if (lastNonEmpty && !lastRow && showHorizontalCellBorders) {\n              cellProps.showBorderBottom = computedVisibleIndex >= (cellProps.groupProps ? cellProps.groupProps.depth : computedGroupBy.length);\n            }\n          } else if (rowIndex > 0 && showHorizontalCellBorders) {\n            if (rowIndex === totalDataCount) {\n              cellProps.showBorderBottom = computedVisibleIndex >= computedGroupBy.length;\n            } else {\n              cellProps.showBorderBottom = computedGroupBy ? computedVisibleIndex >= computedGroupBy.length : true;\n            }\n          }\n        }\n\n        if (lastRow) {\n          cellProps.showBorderBottom = rowIndex < maxVisibleRows - 1 || rowExpanded;\n        }\n\n        if (lockedStart && cellProps.lastInSection) {\n          cellProps.showBorderRight = true;\n        }\n\n        if (lockedEnd && computedVisibleIndex === firstLockedEndIndex) {\n          cellProps.showBorderLeft = true;\n        }\n\n        if (cellProps.groupProps && computedVisibleIndex >= cellProps.groupProps.depth + 1 && !groupColumn && props.expandGroupTitle) {\n          cellProps.showBorderLeft = false;\n        }\n\n        if (cellProps.summaryProps) {\n          cellProps.showBorderBottom = lastRow;\n          cellProps.showBorderTop = computedVisibleIndex > cellProps.summaryProps.depth;\n\n          if (cellProps.summaryProps.position == 'start') {\n            cellProps.showBorderTop = computedVisibleIndex >= cellProps.summaryProps.depth;\n            cellProps.showBorderBottom = false;\n          }\n\n          cellProps.showBorderLeft = showVerticalCellBorders ? true : computedVisibleIndex <= cellProps.summaryProps.depth;\n\n          if (computedVisibleIndex > cellProps.summaryProps.depth && computedVisibleIndex <= computedGroupBy.length && !groupColumn) {\n            cellProps.showBorderLeft = false;\n          }\n\n          if (computedVisibleIndex === 0) {\n            cellProps.showBorderLeft = false;\n          }\n\n          cellProps.noBackground = !groupColumn;\n        }\n\n        if (firstUnlockedIndex === computedVisibleIndex && hasLockedStart) {\n          cellProps.showBorderLeft = false;\n        }\n\n        if (cellProps.groupSpacerColumn && rowExpanded) {\n          cellProps.showBorderBottom = false;\n        }\n\n        if (cellProps.last) {\n          cellProps.showBorderRight = true;\n        }\n\n        var prevColumn = columns[theColumnIndex - 1];\n        var nextColumn = columns[theColumnIndex + 1];\n\n        if (nextColumn && nextColumn.prevBorderRight !== undefined && !(lockedStart && cellProps.lastInSection)) {\n          cellProps.showBorderRight = nextColumn.prevBorderRight;\n        }\n\n        if (prevColumn && prevColumn.nextBorderLeft !== undefined) {\n          cellProps.showBorderLeft = prevColumn.nextBorderLeft;\n        }\n\n        if (columnProps.showBorderRight !== undefined) {\n          cellProps.showBorderRight = columnProps.showBorderRight;\n        }\n\n        if (columnProps.showBorderLeft !== undefined) {\n          cellProps.showBorderLeft = columnProps.showBorderLeft;\n        }\n      }\n\n      if (cellProps.computedEditable) {\n        cellProps.onEditStopForRow = onCellStopEdit;\n        cellProps.onEditStartForRow = onCellStartEdit;\n        cellProps.onEditCancelForRow = onCellEditCancel;\n        cellProps.onEditValueChangeForRow = onCellEditValueChange;\n        cellProps.onEditCompleteForRow = onCellEditComplete;\n      }\n\n      hasBorderBottomVar = hasBorderBottomVar || cellProps.showBorderBottom;\n      hasBorderTopVar = hasBorderTopVar || cellProps.showBorderTop;\n      return cellProps;\n    });\n    maxRowspan.current = maxRowspanVar;\n\n    if (props.computedEnableRowspan) {\n      props.setRowSpan && props.setRowSpan(maxRowspan.current);\n    }\n\n    hasBorderTop.current = hasBorderTopVar;\n    hasBorderBottom.current = hasBorderBottomVar;\n    return cellPropsArray;\n  };\n\n  var onCellStopEdit = (0, _react.useCallback)(function (value, cellProps) {\n    if (props.onEditStop) {\n      props.onEditStop({\n        value: value,\n        data: cellProps.data,\n        rowId: props.getItemId(cellProps.data),\n        columnId: cellProps.id,\n        columnIndex: cellProps.computedVisibleIndex,\n        rowIndex: cellProps.rowIndex,\n        cellProps: cellProps\n      });\n    }\n  }, [props.onEditStop]);\n  var onCellStartEdit = (0, _react.useCallback)(function (value, cellProps) {\n    if (props.onEditStart) {\n      props.onEditStart({\n        data: cellProps.data,\n        value: value,\n        rowId: props.getItemId(cellProps.data),\n        columnId: cellProps.id,\n        columnIndex: cellProps.computedVisibleIndex,\n        rowIndex: cellProps.rowIndex,\n        cellProps: cellProps\n      });\n    }\n  }, [props.onEditStart]);\n  var onCellEditCancel = (0, _react.useCallback)(function (cellProps) {\n    if (props.onEditCancel) {\n      props.onEditCancel({\n        data: cellProps.data,\n        rowId: props.getItemId(cellProps.data),\n        columnIndex: cellProps.computedVisibleIndex,\n        columnId: cellProps.id,\n        rowIndex: cellProps.rowIndex,\n        cellProps: cellProps\n      });\n    }\n  }, [props.onEditCancel]);\n  var onCellEditValueChange = (0, _react.useCallback)(function (value, cellProps) {\n    if (props.onEditValueChange) {\n      props.onEditValueChange({\n        value: value,\n        data: cellProps.data,\n        rowId: props.getItemId(cellProps.data),\n        columnId: cellProps.id,\n        columnIndex: cellProps.computedVisibleIndex,\n        rowIndex: cellProps.rowIndex,\n        cellProps: cellProps\n      });\n    }\n  }, [props.onEditValueChange]);\n  var onCellEditComplete = (0, _react.useCallback)(function (value, cellProps) {\n    if (props.onEditComplete) {\n      props.onEditComplete({\n        value: value,\n        data: cellProps.data,\n        rowId: props.getItemId(cellProps.data),\n        columnId: cellProps.id,\n        columnIndex: cellProps.computedVisibleIndex,\n        rowIndex: cellProps.rowIndex,\n        cellProps: cellProps\n      });\n    }\n  }, [props.onEditComplete]);\n  var tryRowCellEdit = (0, _react.useCallback)(function (editIndex) {\n    var dir = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    var isEnterNavigation = arguments.length > 2 ? arguments[2] : undefined;\n    var cols = props.columns;\n    var col;\n    var colIndex;\n\n    if (!dir) {\n      dir = 1;\n    }\n\n    dir = dir == 1 ? 1 : -1;\n    var currentIndex = dir == 1 ? 0 : cols.length - 1;\n    var foundCols = [];\n\n    while (cols[currentIndex]) {\n      col = cols[currentIndex];\n\n      if (col.editable || props.editable && col.editable !== false) {\n        colIndex = col.computedVisibleIndex;\n\n        if (colIndex == editIndex) {\n          foundCols.push(col);\n        } else {\n          if (dir < 0) {\n            if (colIndex < editIndex) {\n              foundCols.push(col);\n            }\n          } else if (dir > 0) {\n            if (colIndex > editIndex) {\n              foundCols.push(col);\n            }\n          }\n        }\n      }\n\n      currentIndex += dir;\n    }\n\n    if (!foundCols.length) {\n      tryNextRowEdit(dir, isEnterNavigation ? editIndex : dir > 0 ? 0 : props.columns.length - 1);\n      return Promise.reject(null);\n    }\n\n    foundCols.sort(function (a, b) {\n      return dir > 0 ? a - b : b - a;\n    });\n    return new Promise(function (resolve, reject) {\n      var startEdit = function startEdit(cols) {\n        var index = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n        props.currentEditCompletePromise.current.then(function () {\n          var errBack = function errBack() {\n            isEnterNavigation ? tryNextRowEdit(dir, editIndex, true) : startEdit(cols, index + 1);\n          };\n\n          var col = cols[index];\n\n          if (!col) {\n            tryNextRowEdit(dir, isEnterNavigation ? editIndex : dir > 0 ? 0 : props.columns.length - 1);\n            return reject('column not found');\n          }\n\n          var cell = getCellById(col.id);\n\n          if (!cell) {\n            if (props.scrollToColumn) {\n              props.scrollToColumn(col.id, undefined, function () {\n                setTimeout(function () {\n                  startEdit(cols, index);\n                }, 20);\n              });\n            }\n\n            return;\n          }\n\n          setTimeout(function () {\n            return cell.startEdit(undefined, errBack).then(resolve).catch(errBack);\n          }, 0);\n        }).catch(function (error) {\n          return reject(error);\n        });\n        return;\n      };\n\n      startEdit(foundCols, 0);\n    });\n  }, [props.columns, props.editable, props.currentEditCompletePromise, props.rowIndex, props.scrollToColumn]);\n  var tryNextRowEdit = (0, _react.useCallback)(function (dir, columnIndex, isEnterNavigation) {\n    if (props.scrollToIndexIfNeeded) {\n      props.scrollToIndexIfNeeded(props.rowIndex + 2 * dir, {\n        direction: dir == -1 ? 'top' : 'bottom'\n      }, function () {\n        if (props.tryNextRowEdit) {\n          props.tryNextRowEdit(props.rowIndex + dir, dir, columnIndex, isEnterNavigation);\n        }\n      });\n    }\n  }, [props.rowIndex, props.scrollToIndexIfNeeded, props.tryNextRowEdit]);\n  var onTransitionEnd = (0, _react.useCallback)(function (cellProps, columnProps, e) {\n    e.stopPropagation();\n\n    if (columnProps.onTransitionEnd) {\n      columnProps.onTransitionEnd(e);\n    }\n\n    if (props.onTransitionEnd) {\n      props.onTransitionEnd(e, cellProps);\n    }\n  }, [props.onTransitionEnd]);\n  var getColumnRenderRange = (0, _react.useCallback)(function (cellProps) {\n    var virtualizeColumns = getVirtualizeColumns();\n\n    if (!virtualizeColumns) {\n      return null;\n    }\n\n    var minStartIndex = props.lockedStartColumns.length ? props.lockedStartColumns.length : props.groupProps && !props.groupColumn ? props.groupProps.depth + 2 : 0;\n    var maxEndIndex = props.columns.length - props.lockedEndColumns.length - 1;\n    var columnStartIndex = columnRenderStartIndex.current == null ? props.columnRenderStartIndex || 0 : columnRenderStartIndex.current;\n    columnStartIndex = Math.max(columnStartIndex, minStartIndex);\n\n    var fixStartIndexForColspan = function fixStartIndexForColspan() {\n      if (cellProps) {\n        while (cellProps[columnStartIndex].computedColspanedBy) {\n          columnStartIndex--;\n        }\n      }\n    };\n\n    if (props.columnRenderCount != null) {\n      var columnRenderEndIndex = columnStartIndex + props.columnRenderCount;\n      columnRenderEndIndex = Math.min(columnRenderEndIndex, maxEndIndex);\n\n      if (columnRenderEndIndex - props.columnRenderCount != columnStartIndex) {\n        columnStartIndex = Math.max(columnRenderEndIndex - props.columnRenderCount, minStartIndex);\n      }\n\n      if (columnRenderEndIndex < 0) {\n        return {\n          start: 0,\n          end: 0\n        };\n      }\n\n      fixStartIndexForColspan();\n      return {\n        start: columnStartIndex,\n        end: columnRenderEndIndex\n      };\n    }\n\n    return null;\n  }, [props.virtualizeColumns, props.columnRenderCount, props.lockedStartColumns, props.lockedEndColumns, props.groupColumn, props.groupProps, props.columnRenderStartIndex, props.columns]);\n  var expandRangeWithColspan = (0, _react.useCallback)(function (range, cellProps) {\n    var extraNeededColumns = cellProps.reduce(function (total, cellProps) {\n      return total + (cellProps.computedColspan > 1 ? cellProps.computedColspan - 1 : 0);\n    }, 0);\n\n    if (!extraNeededColumns) {\n      return range;\n    }\n\n    if (range.start < props.firstUnlockedIndex) {\n      range.start = props.firstUnlockedIndex;\n    }\n\n    if (range.start > extraNeededColumns) {\n      range.start -= extraNeededColumns;\n      return range;\n    }\n\n    extraNeededColumns -= range.start;\n    range.start = 0;\n\n    if (extraNeededColumns) {\n      range.end += extraNeededColumns;\n    }\n\n    return range;\n  }, []);\n\n  var renderRowInstance = function renderRowInstance(_, __, style) {\n    var scrollLeft = props.scrollLeft,\n        hasLockedStart = props.hasLockedStart,\n        hasLockedEnd = props.hasLockedEnd,\n        lockedStartColumns = props.lockedStartColumns,\n        lockedEndColumns = props.lockedEndColumns,\n        computedHasColSpan = props.computedHasColSpan,\n        groupProps = props.groupProps,\n        columns = props.columns;\n    var virtualizeColumns = getVirtualizeColumns();\n    var cellProps;\n\n    if (!virtualizeColumns) {\n      cellProps = getPropsForCells();\n    } else {\n      var lockedStartCellProps = [];\n      var lockedEndCellProps = [];\n      var groupCellProps = [];\n      var renderRange;\n\n      if (computedHasColSpan) {\n        cellProps = getPropsForCells();\n\n        if (hasLockedStart) {\n          lockedStartCellProps = cellProps.slice(0, lockedStartColumns.length);\n        } else if (groupProps) {\n          groupCellProps = cellProps.slice(0, groupProps.depth + 2);\n        }\n\n        if (hasLockedEnd) {\n          lockedEndCellProps = cellProps.slice(columns.length - lockedEndColumns.length, columns.length);\n        }\n\n        renderRange = getColumnRenderRange(cellProps);\n\n        if (renderRange) {\n          renderRange = expandRangeWithColspan(renderRange, cellProps);\n          cellProps = cellProps.slice(renderRange.start, renderRange.end + 1);\n        }\n      } else {\n        var _renderRange4, _renderRange5;\n\n        renderRange = getColumnRenderRange();\n        cellProps = getPropsForCells((_renderRange4 = renderRange) === null || _renderRange4 === void 0 ? void 0 : _renderRange4.start, ((_renderRange5 = renderRange) === null || _renderRange5 === void 0 ? void 0 : _renderRange5.end) || 0);\n\n        if (hasLockedStart) {\n          lockedStartCellProps = getPropsForCells(0, lockedStartColumns.length - 1);\n        } else if (groupProps) {\n          groupCellProps = getPropsForCells(0, groupProps.depth + 2 - 1);\n        }\n\n        if (hasLockedEnd) {\n          lockedEndCellProps = getPropsForCells(lockedEndColumns[0].computedVisibleIndex, columns.length - 1);\n        }\n      }\n\n      if (hasLockedStart) {\n        cellProps = [].concat((0, _toConsumableArray2.default)(lockedStartCellProps), (0, _toConsumableArray2.default)(cellProps));\n      } else if (groupProps) {\n        cellProps = [].concat((0, _toConsumableArray2.default)(groupCellProps), (0, _toConsumableArray2.default)(cellProps));\n      }\n\n      if (hasLockedEnd) {\n        var _cellProps2;\n\n        (_cellProps2 = cellProps).push.apply(_cellProps2, (0, _toConsumableArray2.default)(lockedEndCellProps));\n      }\n    }\n\n    var result = cellProps.map(function (cProps, index) {\n      var cell;\n      var key = index;\n\n      if (!virtualizeColumns) {\n        key = cProps.id || index;\n      }\n\n      if (props.cellFactory) {\n        cell = props.cellFactory(cProps);\n      }\n\n      if (cell === undefined) {\n        cell = _react.default.createElement(_Cell.default, _objectSpread(_objectSpread({}, cProps), {}, {\n          ref: cProps.cellRef ? cProps.cellRef : null,\n          key: key\n        }));\n      }\n\n      return cell;\n    });\n    return (0, _renderCellsMaybeLocked.default)(result, props, scrollLeft, undefined, style);\n  };\n\n  var onClick = (0, _react.useCallback)(function (event) {\n    if (props.computedTreeEnabled && props.expandOnMouseDown) {\n      toggleNodeExpand(props.rowIndex);\n    }\n\n    if (props.onClick) {\n      props.onClick(event, props);\n    }\n\n    if (props.passedProps && props.passedProps.onClick) {\n      props.passedProps.onClick(event, props);\n    }\n  }, [props.passedProps, props.computedTreeEnabled, props.rowIndex, props.expandOnMouseDown, props.onClick]);\n  var onMouseDown = (0, _react.useCallback)(function (event) {\n    if (props.onMouseDown) {\n      props.onMouseDown(event, props);\n    }\n  }, [props.onMouseDown]);\n  (0, _react.useImperativeHandle)(ref, function () {\n    return {\n      onCellUnmount: onCellUnmount,\n      cleanupCells: cleanupCells,\n      getDOMNode: getDOMNode,\n      orderCells: orderCells,\n      updateEditCell: updateEditCell,\n      fixForColspan: fixForColspan,\n      setScrolling: setScrolling,\n      renderRowDetails: renderRowDetails,\n      onContextMenu: onContextMenu,\n      setCellIndex: setCellIndex,\n      getCellIndex: getCellIndex,\n      sortCells: sortCells,\n      getCellAt: getCellAt,\n      getCellById: getCellById,\n      getCells: getCells,\n      getSortedCells: getSortedCells,\n      getGaps: getGaps,\n      getVirtualizeColumns: getVirtualizeColumns,\n      toggleRowExpand: toggleRowExpand,\n      toggleNodeExpand: toggleNodeExpand,\n      loadNodeAsync: loadNodeAsync,\n      isRowExpandable: isRowExpandable,\n      setRowExpanded: setRowExpanded,\n      setColumnRenderStartIndex: setColumnRenderStartIndex,\n      getPropsForCells: getPropsForCells,\n      onCellStopEdit: onCellStopEdit,\n      onCellStartEdit: onCellStartEdit,\n      onCellEditCancel: onCellEditCancel,\n      onCellEditValueChange: onCellEditValueChange,\n      onCellEditComplete: onCellEditComplete,\n      tryRowCellEdit: tryRowCellEdit,\n      tryNextRowEdit: tryNextRowEdit,\n      onTransitionEnd: onTransitionEnd,\n      getColumnRenderRange: getColumnRenderRange,\n      expandRangeWithColspan: expandRangeWithColspan,\n      renderRow: renderRow,\n      onClick: onClick,\n      onMouseDown: onMouseDown,\n      getCurrentGaps: getCurrentGaps,\n      rowProps: rowProps,\n      domRef: domRef,\n      props: props\n    };\n  });\n  var rowHeight = props.rowHeight,\n      initialRowHeight = props.initialRowHeight,\n      maxRowHeight = props.maxRowHeight,\n      groupNestingSize = props.groupNestingSize,\n      summaryProps = props.summaryProps,\n      data = props.data,\n      id = props.id,\n      columns = props.columns,\n      minWidth = props.minWidth,\n      maxWidth = props.maxWidth,\n      rowStyle = props.rowStyle,\n      scrollbars = props.scrollbars,\n      renderRow = props.renderRow,\n      computedRowExpandEnabled = props.computedRowExpandEnabled,\n      even = props.even,\n      odd = props.odd,\n      active = props.active,\n      selected = props.selected,\n      expanded = props.expanded,\n      passedProps = props.passedProps,\n      realIndex = props.realIndex,\n      remoteRowIndex = props.remoteRowIndex,\n      nativeScroll = props.nativeScroll,\n      indexInGroup = props.indexInGroup,\n      naturalRowHeight = props.naturalRowHeight,\n      rowDetailsStyle = props.rowDetailsStyle,\n      renderDetailsGrid = props.renderDetailsGrid,\n      last = props.last,\n      empty = props.empty,\n      computedPivot = props.computedPivot,\n      computedShowZebraRows = props.computedShowZebraRows,\n      rowDetailsWidth = props.rowDetailsWidth,\n      availableWidth = props.availableWidth,\n      groupProps = props.groupProps,\n      groupColumn = props.groupColumn,\n      dataSourceArray = props.dataSourceArray,\n      onRenderRow = props.onRenderRow,\n      shouldRenderCollapsedRowDetails = props.shouldRenderCollapsedRowDetails,\n      editing = props.editing,\n      rtl = props.rtl,\n      sticky = props.sticky,\n      hasLockedEnd = props.hasLockedEnd,\n      hasLockedStart = props.hasLockedStart,\n      showHorizontalCellBorders = props.showHorizontalCellBorders;\n  var rowClassName = props.rowClassName;\n  var virtualizeColumns = getVirtualizeColumns();\n  var lastInGroup = indexInGroup == props.groupCount - 1;\n  var hasRowSpan = props.computedRowspans && Object.keys(props.computedRowspans).map(function (name) {\n    var rowspan = props.computedRowspans[name];\n    return rowspan > 1;\n  }).find(function (rowSpan) {\n    return rowSpan === true;\n  });\n  var className = (0, _join.default)(props.className, CLASS_NAME, scrollingInProgress.current && \"\".concat(CLASS_NAME, \"--scrolling\"), empty && \"\".concat(CLASS_NAME, \"--empty\"), editing && \"\".concat(CLASS_NAME, \"--editing\"), \"\".concat(CLASS_NAME, \"--direction-\").concat(rtl ? 'rtl' : 'ltr'), computedShowZebraRows && even && (!groupProps || computedPivot) && \"\".concat(CLASS_NAME, \"--even\"), computedShowZebraRows && odd && (!groupProps || computedPivot) && \"\".concat(CLASS_NAME, \"--odd\"), !computedShowZebraRows && !groupProps && \"\".concat(CLASS_NAME, \"--no-zebra\"), groupProps && \"\".concat(CLASS_NAME, \"--group-row\"), summaryProps && \"\".concat(CLASS_NAME, \"--summary-row\"), summaryProps && \"\".concat(CLASS_NAME, \"--summary-position-\").concat(summaryProps.position), groupProps && groupProps.collapsed && \"\".concat(CLASS_NAME, \"--collapsed\"), selected && \"\".concat(CLASS_NAME, \"--selected\"), expanded && \"\".concat(CLASS_NAME, \"--expanded\"), hasLockedStart ? \"\".concat(CLASS_NAME, \"--has-locked-start\") : \"\".concat(CLASS_NAME, \"--no-locked-start\"), hasLockedEnd ? \"\".concat(CLASS_NAME, \"--has-locked-end\") : \"\".concat(CLASS_NAME, \"--no-locked-end\"), showHorizontalCellBorders && \"\".concat(CLASS_NAME, \"--show-horizontal-borders\"), active && \"\".concat(CLASS_NAME, \"--active\"), virtualizeColumns && \"\".concat(CLASS_NAME, \"--virtualize-columns\"), rowHeight && \"\".concat(CLASS_NAME, \"--rowheight\"), naturalRowHeight && \"\".concat(CLASS_NAME, \"--natural-rowheight\"), realIndex == 0 && \"\".concat(CLASS_NAME, \"--first\"), last && \"\".concat(CLASS_NAME, \"--last\"), indexInGroup == 0 && \"\".concat(CLASS_NAME, \"--first-in-group\"), lastInGroup && \"\".concat(CLASS_NAME, \"--last-in-group\"), hasRowSpan ? \"\".concat(CLASS_NAME, \"--has-rowspan\") : '');\n\n  if (passedProps) {\n    className = (0, _join.default)(className, selected && passedProps.selectedClassName);\n  }\n\n  var style = _objectSpread(_objectSpread({}, props.style), {}, {\n    height: naturalRowHeight ? null : rowHeight,\n    width: props.width,\n    minWidth: minWidth,\n    direction: 'ltr'\n  });\n\n  if (maxWidth != null) {\n    style.maxWidth = maxWidth;\n  }\n\n  if (maxRowHeight != null) {\n    style.maxHeight = maxRowHeight;\n  }\n\n  if (rowStyle) {\n    if (typeof rowStyle === 'function') {\n      var rowStyleResult = rowStyle({\n        data: data,\n        props: props,\n        style: style\n      });\n\n      if (rowStyleResult !== undefined) {\n        style = _objectSpread(_objectSpread({}, style), rowStyleResult);\n      }\n    } else {\n      style = _objectSpread(_objectSpread({}, style), rowStyle);\n    }\n  }\n\n  if (rowClassName) {\n    if (typeof rowClassName === 'function') {\n      rowClassName = rowClassName({\n        data: data,\n        props: props,\n        className: className\n      });\n    }\n\n    if (rowClassName && typeof rowClassName == 'string') {\n      className = (0, _join.default)(className, rowClassName);\n    }\n  }\n\n  var rowProps = _objectSpread(_objectSpread(_objectSpread({}, props), {}, {\n    className: className,\n    style: style,\n    ref: domRef\n  }, passedProps), {}, {\n    onClick: onClick,\n    onContextMenu: onContextMenu\n  });\n\n  rowProps.children = [_react.default.createElement(\"div\", {\n    key: \"cellWrap\",\n    className: \"InovuaReactDataGrid__row-cell-wrap InovuaReactDataGrid__row-hover-target\",\n    style: {\n      width: props.width,\n      height: naturalRowHeight ? null : rowHeight,\n      position: 'absolute',\n      top: 0,\n      left: rtl ? -(props.emptyScrollOffset || 0) : 0\n    }\n  }, renderRowInstance(data, columns, style))];\n  var groupDepth = groupColumn ? 0 : data && data.__group ? data.depth - 1 : data && data.__summary ? rowProps.summaryProps.depth : props.depth || 0;\n  var activeBordersDiv = sticky ? _react.default.createElement(\"div\", {\n    key: \"active-row-borders\",\n    className: (0, _join.default)(\"\".concat(CLASS_NAME, \"-active-borders\"), hasBorderTop.current && \"\".concat(CLASS_NAME, \"-active-borders--has-border-top\"), hasBorderBottom.current && \"\".concat(CLASS_NAME, \"-actived-borders--has-border-bottom\"))\n  }) : null;\n  var shouldRender = expanded || shouldRenderCollapsedRowDetails;\n\n  if (computedRowExpandEnabled && shouldRender && !data.__group) {\n    var rowDetailsInfo = {\n      data: data,\n      rtl: rtl,\n      isRowExpandable: isRowExpandable,\n      rowIndex: realIndex,\n      remoteRowIndex: remoteRowIndex,\n      rowId: props.getItemId(data),\n      rowExpanded: expanded,\n      id: id,\n      rowSelected: selected,\n      rowActive: active,\n      toggleRowExpand: toggleRowExpand,\n      setRowExpanded: setRowExpanded,\n      dataSource: dataSourceArray\n    };\n    var detailsStyle = {\n      position: 'absolute',\n      height: rowHeight - initialRowHeight,\n      overflow: renderDetailsGrid ? 'visible' : 'auto',\n      top: initialRowHeight\n    };\n\n    if (rtl) {\n      detailsStyle.direction = 'rtl';\n    }\n\n    if (rowDetailsWidth == 'max-viewport-width') {\n      detailsStyle.width = Math.min(availableWidth, props.width || maxWidth);\n    }\n\n    if (rowDetailsWidth === 'min-viewport-width') {\n      detailsStyle.width = Math.max(availableWidth, props.width || maxWidth);\n    }\n\n    if (rowDetailsWidth === 'viewport-width') {\n      detailsStyle.width = availableWidth;\n    }\n\n    if (groupDepth) {\n      detailsStyle[rtl ? 'paddingRight' : 'paddingLeft'] = (groupNestingSize || 0) * groupDepth;\n    }\n\n    detailsStyle[rtl ? 'right' : 'left'] = 0;\n\n    if (isNaN(detailsStyle.width)) {\n      delete detailsStyle.width;\n    }\n\n    if (!expanded) {\n      detailsStyle.display = 'none';\n    }\n\n    if (rowDetailsStyle) {\n      if (typeof rowDetailsStyle === 'function') {\n        var styleResult = rowDetailsStyle(detailsStyle, rowDetailsInfo);\n\n        if (styleResult !== undefined) {\n          detailsStyle = styleResult;\n        }\n      } else {\n        detailsStyle = _objectSpread(_objectSpread({}, detailsStyle), rowDetailsStyle);\n      }\n    }\n\n    var showBorderBottom = !lastInGroup || last;\n\n    if (nativeScroll && last && expanded) {\n      showBorderBottom = false;\n    }\n\n    rowProps.children.push(_react.default.createElement(\"div\", {\n      key: \"rowDetails\",\n      style: detailsStyle,\n      onClick: skipSelect,\n      className: (0, _join.default)(\"\".concat(CLASS_NAME, \"-details\"), \"\".concat(CLASS_NAME, \"-details--\").concat(rowDetailsWidth), renderDetailsGrid ? \"\".concat(CLASS_NAME, \"-details--details-grid\") : null, !nativeScroll || nativeScroll && scrollbars && !scrollbars.vertical || availableWidth > minWidth ? \"\".concat(CLASS_NAME, \"-details--show-border-right\") : null, showBorderBottom ? \"\".concat(CLASS_NAME, \"-details--show-border-bottom\") : '')\n    }, renderRowDetails(rowDetailsInfo)), _react.default.createElement(\"div\", {\n      className: \"\".concat(CLASS_NAME, \"-details-special-bottom-border\"),\n      key: \"row-details-special-bottom-border\",\n      style: (0, _defineProperty2.default)({}, rtl ? 'right' : 'left', (groupDepth || 0) * groupNestingSize)\n    }), groupDepth ? (0, _toConsumableArray2.default)(new Array(groupDepth)).map(function (_, index) {\n      var _style2;\n\n      return _react.default.createElement(\"div\", {\n        key: index,\n        className: \"\".concat(CLASS_NAME, \"-details-border\"),\n        style: (_style2 = {\n          height: '100%',\n          position: 'absolute'\n        }, (0, _defineProperty2.default)(_style2, rtl ? 'right' : 'left', (index + 1) * groupNestingSize), (0, _defineProperty2.default)(_style2, \"top\", 0), _style2)\n      });\n    }) : null, rowDetailsWidth != 'max-viewport-width' ? _react.default.createElement(\"div\", {\n      key: \"rowDetailsBorder\",\n      style: (0, _defineProperty2.default)({\n        top: initialRowHeight - 1,\n        width: availableWidth\n      }, rtl ? 'right' : 'left', (groupDepth || 0) * groupNestingSize),\n      className: \"\".concat(CLASS_NAME, \"-details-special-top-border\")\n    }) : null);\n  }\n\n  if (sticky) {\n    if (activeBordersDiv) {\n      var _style4;\n\n      rowProps.children.push(_react.default.createElement(\"div\", {\n        key: \"active-row-borders\",\n        className: \"InovuaReactDataGrid__row-active-borders-wrapper\",\n        style: (_style4 = {\n          height: '100%',\n          position: 'absolute',\n          top: 0\n        }, (0, _defineProperty2.default)(_style4, rtl ? 'right' : 'left', (groupNestingSize || 0) * groupDepth), (0, _defineProperty2.default)(_style4, \"width\", availableWidth - (groupNestingSize || 0) * groupDepth), (0, _defineProperty2.default)(_style4, \"pointerEvents\", 'none'), _style4)\n      }, activeBordersDiv));\n    }\n  }\n\n  var row;\n\n  if (renderRow) {\n    row = renderRow(rowProps);\n  }\n\n  if (onRenderRow) {\n    onRenderRow(rowProps);\n  }\n\n  if (row === undefined) {\n    row = _react.default.createElement(\"div\", _objectSpread(_objectSpread({}, (0, _reactCleanProps.default)(rowProps, DataGridRow.propTypes)), {}, {\n      id: null,\n      data: null,\n      value: null\n    }));\n  }\n\n  return row;\n});\n\nvar emptyFn = function emptyFn() {};\n\nDataGridRow.defaultProps = {\n  onClick: emptyFn,\n  onMouseEnter: emptyFn,\n  onMouseLeave: emptyFn,\n  onMouseDown: emptyFn,\n  columnRenderStartIndex: 0,\n  showAllGroupCells: false\n};\nDataGridRow.propTypes = {\n  rowActive: _propTypes.default.bool,\n  rowSelected: _propTypes.default.bool,\n  availableWidth: _propTypes.default.number,\n  computedGroupBy: _propTypes.default.array,\n  expandGroupTitle: _propTypes.default.bool,\n  expandColumn: _propTypes.default.any,\n  getCellSelectionKey: _propTypes.default.func,\n  depth: _propTypes.default.number,\n  columns: _propTypes.default.array,\n  columnsMap: _propTypes.default.shape({}),\n  active: _propTypes.default.bool,\n  computedActiveCell: _propTypes.default.any,\n  cellFactory: _propTypes.default.func,\n  computedCellMultiSelectionEnabled: _propTypes.default.bool,\n  computedCellSelection: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),\n  columnRenderCount: _propTypes.default.number,\n  columnRenderStartIndex: _propTypes.default.number,\n  columnUserSelect: _propTypes.default.bool,\n  deselectAll: _propTypes.default.func,\n  empty: _propTypes.default.bool,\n  even: _propTypes.default.bool,\n  firstLockedEndIndex: _propTypes.default.number,\n  firstLockedStartIndex: _propTypes.default.number,\n  firstUnlockedIndex: _propTypes.default.number,\n  flex: _propTypes.default.number,\n  groupCount: _propTypes.default.number,\n  groupNestingSize: _propTypes.default.number,\n  treeNestingSize: _propTypes.default.number,\n  groupProps: _propTypes.default.object,\n  summaryProps: _propTypes.default.object,\n  hasLockedEnd: _propTypes.default.bool,\n  hasLockedStart: _propTypes.default.bool,\n  indexInGroup: _propTypes.default.number,\n  last: _propTypes.default.bool,\n  lastCellInRange: _propTypes.default.any,\n  lastNonEmpty: _propTypes.default.bool,\n  lastRowInGroup: _propTypes.default.bool,\n  lockedEndColumns: _propTypes.default.array,\n  lockedStartColumns: _propTypes.default.array,\n  maxRowHeight: _propTypes.default.number,\n  minRowHeight: _propTypes.default.number,\n  maxVisibleRows: _propTypes.default.number,\n  minWidth: _propTypes.default.number,\n  multiSelect: _propTypes.default.bool,\n  odd: _propTypes.default.bool,\n  onArrowDown: _propTypes.default.func,\n  onArrowUp: _propTypes.default.func,\n  onCellClick: _propTypes.default.func,\n  onCellEnter: _propTypes.default.func,\n  onCellMouseDown: _propTypes.default.func,\n  onCellSelectionDraggerMouseDown: _propTypes.default.func,\n  onRowContextMenu: _propTypes.default.func,\n  passedProps: _propTypes.default.object,\n  realIndex: _propTypes.default.number,\n  renderIndex: _propTypes.default.number,\n  renderRow: _propTypes.default.func,\n  onRenderRow: _propTypes.default.func,\n  rowHeight: _propTypes.default.number,\n  rowExpandHeight: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.func]),\n  initialRowHeight: _propTypes.default.number,\n  defaultRowHeight: _propTypes.default.number,\n  emptyScrollOffset: _propTypes.default.number,\n  rowIndex: _propTypes.default.number,\n  remoteRowIndex: _propTypes.default.number,\n  rowIndexInGroup: _propTypes.default.bool,\n  rowStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.func]),\n  rowClassName: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.func]),\n  scrollLeft: _propTypes.default.number,\n  selectAll: _propTypes.default.func,\n  selected: _propTypes.default.bool,\n  expanded: _propTypes.default.bool,\n  selection: _propTypes.default.any,\n  computedRowExpandEnabled: _propTypes.default.bool,\n  computedTreeEnabled: _propTypes.default.bool,\n  computedRenderRowDetails: _propTypes.default.func,\n  isRowExpandableAt: _propTypes.default.func,\n  setRowSelected: _propTypes.default.func,\n  setRowExpanded: _propTypes.default.func,\n  toggleRowExpand: _propTypes.default.func,\n  toggleNodeExpand: _propTypes.default.func,\n  expandOnMouseDown: _propTypes.default.bool,\n  loadNodeAsync: _propTypes.default.func,\n  showAllGroupCells: _propTypes.default.bool,\n  computedShowCellBorders: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.bool]),\n  showHorizontalCellBorders: _propTypes.default.bool,\n  showVerticalCellBorders: _propTypes.default.bool,\n  totalColumnCount: _propTypes.default.number,\n  totalComputedWidth: _propTypes.default.number,\n  totalDataCount: _propTypes.default.number,\n  totalLockedEndWidth: _propTypes.default.number,\n  totalLockedStartWidth: _propTypes.default.number,\n  totalUnlockedWidth: _propTypes.default.number,\n  unlockedColumns: _propTypes.default.array,\n  virtualizeColumns: _propTypes.default.bool,\n  nativeScroll: _propTypes.default.bool,\n  shouldRenderCollapsedRowDetails: _propTypes.default.bool,\n  rowDetailsStyle: _propTypes.default.oneOfType([_propTypes.default.func, _propTypes.default.object]),\n  dataSourceArray: _propTypes.default.array,\n  getItemId: _propTypes.default.func.isRequired,\n  editable: _propTypes.default.bool,\n  editing: _propTypes.default.bool,\n  editValue: _propTypes.default.any,\n  editRowIndex: _propTypes.default.number,\n  editColumnIndex: _propTypes.default.number,\n  editColumnId: _propTypes.default.any,\n  naturalRowHeight: _propTypes.default.bool,\n  renderDetailsGrid: _propTypes.default.func,\n  scrollToColumn: _propTypes.default.func,\n  scrollToIndexIfNeeded: _propTypes.default.func,\n  renderNodeTool: _propTypes.default.func,\n  computedEnableRowspan: _propTypes.default.bool,\n  setRowSpan: _propTypes.default.func,\n  treeColumn: _propTypes.default.string,\n  scrollbars: _propTypes.default.shape({\n    horizontal: _propTypes.default.bool,\n    vertical: _propTypes.default.bool\n  }),\n  rtl: _propTypes.default.bool,\n  computedPivot: _propTypes.default.array,\n  groupColumnSummaries: _propTypes.default.any,\n  groupSummary: _propTypes.default.any,\n  groupColumn: _propTypes.default.any,\n  lastUnlockedIndex: _propTypes.default.number,\n  lastLockedEndIndex: _propTypes.default.number,\n  lastLockedStartIndex: _propTypes.default.number,\n  computedShowZebraRows: _propTypes.default.bool,\n  computedRowspans: _propTypes.default.any,\n  editStartEvent: _propTypes.default.string,\n  onGroupToggle: _propTypes.default.func,\n  onEditStop: _propTypes.default.func,\n  onEditStart: _propTypes.default.func,\n  onEditCancel: _propTypes.default.func,\n  onEditValueChange: _propTypes.default.func,\n  onEditComplete: _propTypes.default.func,\n  onFilterValueChange: _propTypes.default.func,\n  tryNextRowEdit: _propTypes.default.func,\n  getScrollLeftMax: _propTypes.default.func,\n  activeRowRef: _propTypes.default.any,\n  sticky: _propTypes.default.bool,\n  edition: _propTypes.default.string,\n  computedLicenseValid: _propTypes.default.bool,\n  parentGroupDataArray: _propTypes.default.any,\n  rowDetailsWidth: _propTypes.default.oneOf(['max-viewport-width', 'min-viewport-width', 'viewport-width']),\n  computedHasColSpan: _propTypes.default.bool,\n  onRowReorder: _propTypes.default.oneOfType([_propTypes.default.func, _propTypes.default.bool]),\n  onDragRowMouseDown: _propTypes.default.func,\n  renderLockedStartCells: _propTypes.default.func,\n  renderLockedEndCells: _propTypes.default.func,\n  setActiveIndex: _propTypes.default.func,\n  renderTreeCollapseTool: _propTypes.default.func,\n  renderTreeExpandTool: _propTypes.default.func,\n  renderTreeLoadingTool: _propTypes.default.func,\n  currentEditCompletePromise: _propTypes.default.any,\n  enableColumnAutosize: _propTypes.default.bool,\n  columnHoverClassName: _propTypes.default.string,\n  computedEnableColumnHover: _propTypes.default.bool,\n  onColumnMouseEnter: _propTypes.default.func,\n  onColumnMouseLeave: _propTypes.default.func,\n  columnIndexHovered: _propTypes.default.number,\n  renderRowDetailsExpandIcon: _propTypes.default.func,\n  renderRowDetailsCollapsedIcon: _propTypes.default.func\n};\n\nvar _default = _react.default.memo(DataGridRow, function (prevProps, nextProps) {\n  var areEqual = (0, _shallowequal.equalReturnKey)(prevProps, nextProps, {\n    computedActiveCell: 1,\n    computedActiveIndex: 1,\n    columnRenderStartIndex: 1,\n    activeRowRef: 1,\n    active: 1,\n    onKeyDown: 1,\n    onFocus: 1,\n    setRowSpan: 1,\n    passedProps: 1,\n    computedRowspans: 1,\n    lockedStartColumns: 1,\n    selection: 1,\n    lockedEndColumns: 1,\n    unlockedColumns: 1,\n    maxVisibleRows: 1,\n    onClick: 1,\n    style: 1,\n    loadNodeAsync: 1,\n    scrollToIndexIfNeeded: 1,\n    onColumnMouseEnter: 1,\n    onColumnMouseLeave: 1,\n    computedCellSelection: 1,\n    getCellSelectionKey: 1\n  });\n\n  if (areEqual.result) {\n    if (prevProps.computedActiveCell != nextProps.computedActiveCell) {\n      var _ref2 = prevProps.computedActiveCell || [],\n          _ref3 = (0, _slicedToArray2.default)(_ref2, 1),\n          oldRowIndex = _ref3[0];\n\n      var _ref4 = nextProps.computedActiveCell || [],\n          _ref5 = (0, _slicedToArray2.default)(_ref4, 1),\n          newRowIndex = _ref5[0];\n\n      if (oldRowIndex === nextProps.rowIndex || newRowIndex === nextProps.rowIndex) {\n        return false;\n      }\n    }\n  }\n\n  if (!areEqual.result) {\n    return false;\n  }\n\n  if (prevProps.active !== nextProps.active) {\n    return false;\n  }\n\n  if (JSON.stringify(prevProps.style) !== JSON.stringify(nextProps.style)) {\n    return false;\n  }\n\n  var prevActiveCellRow, prevActiveColumn;\n  var activeCellRow, activeColumn;\n\n  if (prevProps.computedActiveCell) {\n    var _prevProps$computedAc = (0, _slicedToArray2.default)(prevProps.computedActiveCell, 2);\n\n    prevActiveCellRow = _prevProps$computedAc[0];\n    prevActiveColumn = _prevProps$computedAc[1];\n  }\n\n  if (nextProps.computedActiveCell) {\n    var _nextProps$computedAc = (0, _slicedToArray2.default)(nextProps.computedActiveCell, 2);\n\n    activeCellRow = _nextProps$computedAc[0];\n    activeColumn = _nextProps$computedAc[1];\n  }\n\n  if (activeCellRow !== prevActiveCellRow) {\n    if (nextProps.rowIndex === activeCellRow || nextProps.rowIndex === prevActiveCellRow) {\n      return false;\n    }\n  } else {\n    if (nextProps.rowIndex === activeCellRow && activeColumn !== prevActiveColumn) {\n      return false;\n    }\n  }\n\n  return true;\n});\n\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}