{"ast":null,"code":"/** \n * Copyright © INOVUA TRADING.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = require(\"react\");\n\nvar diff = function diff(a1, a2) {\n  if (a1.length != a2.length) {\n    return true;\n  }\n\n  for (var i = 0; i < a1.length; i++) {\n    if (!Object.is(a1[i], a2[i])) {\n      return true;\n    }\n  }\n\n  return false;\n};\n\nvar resolved = Promise.resolve(true);\n\nvar useLoadDataEffect = function useLoadDataEffect(_ref, fn, _ref2) {\n  var getDataSource = _ref.getDataSource;\n  var reloadDeps = _ref2.reloadDeps,\n      noReloadDeps = _ref2.noReloadDeps;\n  var prevComputedDepsRef = (0, _react.useRef)([]);\n  var reloadRef = (0, _react.useRef)();\n  var noReloadRef = (0, _react.useRef)();\n  var reloadDepsDifferent = !reloadRef.current || diff(reloadRef.current, reloadDeps);\n  var noReloadDepsDifferent = !noReloadRef.current || diff(noReloadRef.current, noReloadDeps);\n  var depsDifferent = reloadDepsDifferent || noReloadDepsDifferent;\n  var shouldReload = reloadDepsDifferent;\n  var shouldReloadRef = (0, _react.useRef)(false);\n  var computedDeps = depsDifferent ? [{}] : prevComputedDepsRef.current;\n  var resolveRef = (0, _react.useRef)(null);\n  var promiseRef = (0, _react.useRef)(resolved);\n\n  if (depsDifferent) {\n    shouldReloadRef.current = shouldReload;\n    promiseRef.current = new Promise(function (resolve) {\n      resolveRef.current = resolve;\n    });\n  }\n\n  var _useState = (0, _react.useState)(function () {\n    return new Set();\n  }),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 1),\n      pendingSet = _useState2[0];\n\n  var intercept = (0, _react.useCallback)(function (promise, dataSource) {\n    var isRemote = typeof dataSource === 'function' || (dataSource === null || dataSource === void 0 ? void 0 : dataSource.then);\n\n    if (!isRemote) {}\n\n    pendingSet.clear();\n    pendingSet.add(promise);\n    return promise.then(function (r) {\n      if (pendingSet.has(promise)) {\n        pendingSet.delete(promise);\n        return r;\n      }\n\n      return Promise.reject({\n        message: \"This request is discarded as it was still pending when a new request came in.\",\n        result: r\n      });\n    });\n  }, []);\n  (0, _react.useLayoutEffect)(function () {\n    var reload = shouldReloadRef.current;\n    var dataSource = getDataSource({\n      shouldReload: reload\n    });\n    fn(dataSource, {\n      shouldReload: reload,\n      intercept: intercept\n    }).then(function () {\n      if (resolveRef.current) {\n        resolveRef.current();\n      }\n    });\n    shouldReloadRef.current = shouldReload;\n  }, computedDeps);\n  reloadRef.current = reloadDeps;\n  noReloadRef.current = noReloadDeps;\n  prevComputedDepsRef.current = computedDeps;\n  return promiseRef.current;\n};\n\nvar _default = useLoadDataEffect;\nexports.default = _default;","map":{"version":3,"sources":["/Users/sungjaejoo/Desktop/ILP-main/node_modules/@inovua/reactdatagrid-community/hooks/useLoadDataEffect/index.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_slicedToArray2","_react","diff","a1","a2","length","i","is","resolved","Promise","resolve","useLoadDataEffect","_ref","fn","_ref2","getDataSource","reloadDeps","noReloadDeps","prevComputedDepsRef","useRef","reloadRef","noReloadRef","reloadDepsDifferent","current","noReloadDepsDifferent","depsDifferent","shouldReload","shouldReloadRef","computedDeps","resolveRef","promiseRef","_useState","useState","Set","_useState2","pendingSet","intercept","useCallback","promise","dataSource","isRemote","then","clear","add","r","has","delete","reject","message","result","useLayoutEffect","reload","_default"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAApC;;AAEAC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,eAAe,GAAGP,sBAAsB,CAACC,OAAO,CAAC,sCAAD,CAAR,CAA5C;;AAEA,IAAIO,MAAM,GAAGP,OAAO,CAAC,OAAD,CAApB;;AAEA,IAAIQ,IAAI,GAAG,SAASA,IAAT,CAAcC,EAAd,EAAkBC,EAAlB,EAAsB;AAC/B,MAAID,EAAE,CAACE,MAAH,IAAaD,EAAE,CAACC,MAApB,EAA4B;AAC1B,WAAO,IAAP;AACD;;AAED,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,EAAE,CAACE,MAAvB,EAA+BC,CAAC,EAAhC,EAAoC;AAClC,QAAI,CAACX,MAAM,CAACY,EAAP,CAAUJ,EAAE,CAACG,CAAD,CAAZ,EAAiBF,EAAE,CAACE,CAAD,CAAnB,CAAL,EAA8B;AAC5B,aAAO,IAAP;AACD;AACF;;AAED,SAAO,KAAP;AACD,CAZD;;AAcA,IAAIE,QAAQ,GAAGC,OAAO,CAACC,OAAR,CAAgB,IAAhB,CAAf;;AAEA,IAAIC,iBAAiB,GAAG,SAASA,iBAAT,CAA2BC,IAA3B,EAAiCC,EAAjC,EAAqCC,KAArC,EAA4C;AAClE,MAAIC,aAAa,GAAGH,IAAI,CAACG,aAAzB;AACA,MAAIC,UAAU,GAAGF,KAAK,CAACE,UAAvB;AAAA,MACIC,YAAY,GAAGH,KAAK,CAACG,YADzB;AAEA,MAAIC,mBAAmB,GAAG,CAAC,GAAGjB,MAAM,CAACkB,MAAX,EAAmB,EAAnB,CAA1B;AACA,MAAIC,SAAS,GAAG,CAAC,GAAGnB,MAAM,CAACkB,MAAX,GAAhB;AACA,MAAIE,WAAW,GAAG,CAAC,GAAGpB,MAAM,CAACkB,MAAX,GAAlB;AACA,MAAIG,mBAAmB,GAAG,CAACF,SAAS,CAACG,OAAX,IAAsBrB,IAAI,CAACkB,SAAS,CAACG,OAAX,EAAoBP,UAApB,CAApD;AACA,MAAIQ,qBAAqB,GAAG,CAACH,WAAW,CAACE,OAAb,IAAwBrB,IAAI,CAACmB,WAAW,CAACE,OAAb,EAAsBN,YAAtB,CAAxD;AACA,MAAIQ,aAAa,GAAGH,mBAAmB,IAAIE,qBAA3C;AACA,MAAIE,YAAY,GAAGJ,mBAAnB;AACA,MAAIK,eAAe,GAAG,CAAC,GAAG1B,MAAM,CAACkB,MAAX,EAAmB,KAAnB,CAAtB;AACA,MAAIS,YAAY,GAAGH,aAAa,GAAG,CAAC,EAAD,CAAH,GAAUP,mBAAmB,CAACK,OAA9D;AACA,MAAIM,UAAU,GAAG,CAAC,GAAG5B,MAAM,CAACkB,MAAX,EAAmB,IAAnB,CAAjB;AACA,MAAIW,UAAU,GAAG,CAAC,GAAG7B,MAAM,CAACkB,MAAX,EAAmBX,QAAnB,CAAjB;;AAEA,MAAIiB,aAAJ,EAAmB;AACjBE,IAAAA,eAAe,CAACJ,OAAhB,GAA0BG,YAA1B;AACAI,IAAAA,UAAU,CAACP,OAAX,GAAqB,IAAId,OAAJ,CAAY,UAAUC,OAAV,EAAmB;AAClDmB,MAAAA,UAAU,CAACN,OAAX,GAAqBb,OAArB;AACD,KAFoB,CAArB;AAGD;;AAED,MAAIqB,SAAS,GAAG,CAAC,GAAG9B,MAAM,CAAC+B,QAAX,EAAqB,YAAY;AAC/C,WAAO,IAAIC,GAAJ,EAAP;AACD,GAFe,CAAhB;AAAA,MAGIC,UAAU,GAAG,CAAC,GAAGlC,eAAe,CAACD,OAApB,EAA6BgC,SAA7B,EAAwC,CAAxC,CAHjB;AAAA,MAIII,UAAU,GAAGD,UAAU,CAAC,CAAD,CAJ3B;;AAMA,MAAIE,SAAS,GAAG,CAAC,GAAGnC,MAAM,CAACoC,WAAX,EAAwB,UAAUC,OAAV,EAAmBC,UAAnB,EAA+B;AACrE,QAAIC,QAAQ,GAAG,OAAOD,UAAP,KAAsB,UAAtB,KAAqCA,UAAU,KAAK,IAAf,IAAuBA,UAAU,KAAK,KAAK,CAA3C,GAA+C,KAAK,CAApD,GAAwDA,UAAU,CAACE,IAAxG,CAAf;;AAEA,QAAI,CAACD,QAAL,EAAe,CAAE;;AAEjBL,IAAAA,UAAU,CAACO,KAAX;AACAP,IAAAA,UAAU,CAACQ,GAAX,CAAeL,OAAf;AACA,WAAOA,OAAO,CAACG,IAAR,CAAa,UAAUG,CAAV,EAAa;AAC/B,UAAIT,UAAU,CAACU,GAAX,CAAeP,OAAf,CAAJ,EAA6B;AAC3BH,QAAAA,UAAU,CAACW,MAAX,CAAkBR,OAAlB;AACA,eAAOM,CAAP;AACD;;AAED,aAAOnC,OAAO,CAACsC,MAAR,CAAe;AACpBC,QAAAA,OAAO,EAAE,+EADW;AAEpBC,QAAAA,MAAM,EAAEL;AAFY,OAAf,CAAP;AAID,KAVM,CAAP;AAWD,GAlBe,EAkBb,EAlBa,CAAhB;AAmBA,GAAC,GAAG3C,MAAM,CAACiD,eAAX,EAA4B,YAAY;AACtC,QAAIC,MAAM,GAAGxB,eAAe,CAACJ,OAA7B;AACA,QAAIgB,UAAU,GAAGxB,aAAa,CAAC;AAC7BW,MAAAA,YAAY,EAAEyB;AADe,KAAD,CAA9B;AAGAtC,IAAAA,EAAE,CAAC0B,UAAD,EAAa;AACbb,MAAAA,YAAY,EAAEyB,MADD;AAEbf,MAAAA,SAAS,EAAEA;AAFE,KAAb,CAAF,CAGGK,IAHH,CAGQ,YAAY;AAClB,UAAIZ,UAAU,CAACN,OAAf,EAAwB;AACtBM,QAAAA,UAAU,CAACN,OAAX;AACD;AACF,KAPD;AAQAI,IAAAA,eAAe,CAACJ,OAAhB,GAA0BG,YAA1B;AACD,GAdD,EAcGE,YAdH;AAeAR,EAAAA,SAAS,CAACG,OAAV,GAAoBP,UAApB;AACAK,EAAAA,WAAW,CAACE,OAAZ,GAAsBN,YAAtB;AACAC,EAAAA,mBAAmB,CAACK,OAApB,GAA8BK,YAA9B;AACA,SAAOE,UAAU,CAACP,OAAlB;AACD,CAnED;;AAqEA,IAAI6B,QAAQ,GAAGzC,iBAAf;AACAd,OAAO,CAACE,OAAR,GAAkBqD,QAAlB","sourcesContent":["/** \n * Copyright © INOVUA TRADING.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = require(\"react\");\n\nvar diff = function diff(a1, a2) {\n  if (a1.length != a2.length) {\n    return true;\n  }\n\n  for (var i = 0; i < a1.length; i++) {\n    if (!Object.is(a1[i], a2[i])) {\n      return true;\n    }\n  }\n\n  return false;\n};\n\nvar resolved = Promise.resolve(true);\n\nvar useLoadDataEffect = function useLoadDataEffect(_ref, fn, _ref2) {\n  var getDataSource = _ref.getDataSource;\n  var reloadDeps = _ref2.reloadDeps,\n      noReloadDeps = _ref2.noReloadDeps;\n  var prevComputedDepsRef = (0, _react.useRef)([]);\n  var reloadRef = (0, _react.useRef)();\n  var noReloadRef = (0, _react.useRef)();\n  var reloadDepsDifferent = !reloadRef.current || diff(reloadRef.current, reloadDeps);\n  var noReloadDepsDifferent = !noReloadRef.current || diff(noReloadRef.current, noReloadDeps);\n  var depsDifferent = reloadDepsDifferent || noReloadDepsDifferent;\n  var shouldReload = reloadDepsDifferent;\n  var shouldReloadRef = (0, _react.useRef)(false);\n  var computedDeps = depsDifferent ? [{}] : prevComputedDepsRef.current;\n  var resolveRef = (0, _react.useRef)(null);\n  var promiseRef = (0, _react.useRef)(resolved);\n\n  if (depsDifferent) {\n    shouldReloadRef.current = shouldReload;\n    promiseRef.current = new Promise(function (resolve) {\n      resolveRef.current = resolve;\n    });\n  }\n\n  var _useState = (0, _react.useState)(function () {\n    return new Set();\n  }),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 1),\n      pendingSet = _useState2[0];\n\n  var intercept = (0, _react.useCallback)(function (promise, dataSource) {\n    var isRemote = typeof dataSource === 'function' || (dataSource === null || dataSource === void 0 ? void 0 : dataSource.then);\n\n    if (!isRemote) {}\n\n    pendingSet.clear();\n    pendingSet.add(promise);\n    return promise.then(function (r) {\n      if (pendingSet.has(promise)) {\n        pendingSet.delete(promise);\n        return r;\n      }\n\n      return Promise.reject({\n        message: \"This request is discarded as it was still pending when a new request came in.\",\n        result: r\n      });\n    });\n  }, []);\n  (0, _react.useLayoutEffect)(function () {\n    var reload = shouldReloadRef.current;\n    var dataSource = getDataSource({\n      shouldReload: reload\n    });\n    fn(dataSource, {\n      shouldReload: reload,\n      intercept: intercept\n    }).then(function () {\n      if (resolveRef.current) {\n        resolveRef.current();\n      }\n    });\n    shouldReloadRef.current = shouldReload;\n  }, computedDeps);\n  reloadRef.current = reloadDeps;\n  noReloadRef.current = noReloadDeps;\n  prevComputedDepsRef.current = computedDeps;\n  return promiseRef.current;\n};\n\nvar _default = useLoadDataEffect;\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}