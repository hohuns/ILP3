{"ast":null,"code":"/** \n * Copyright © INOVUA TRADING.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = require(\"react\");\n\nvar useEditable = function useEditable(props, computedProps, computedPropsRef) {\n  var editInfoRef = (0, _react.useRef)(null);\n  var isInEdit = (0, _react.useRef)(false);\n  var currentEditCompletePromise = (0, _react.useRef)(Promise.resolve(true));\n  var onEditStop = (0, _react.useCallback)(function (editProps) {\n    var computedProps = computedPropsRef.current;\n\n    if (!computedProps) {\n      return;\n    }\n\n    if (computedProps.initialProps.onEditStop) {\n      computedProps.initialProps.onEditStop(editProps);\n    }\n\n    setTimeout(function () {\n      editInfoRef.current = null;\n    }, 0);\n  }, []);\n  var onEditCancel = (0, _react.useCallback)(function (editProps) {\n    var computedProps = computedPropsRef.current;\n\n    if (!computedProps) {\n      return;\n    }\n\n    if (computedProps.initialProps.onEditCancel) {\n      computedProps.initialProps.onEditCancel(editProps);\n    }\n\n    setTimeout(function () {\n      computedProps.isInEdit.current = false;\n    }, 50);\n  }, []);\n  var onEditComplete = (0, _react.useCallback)(function (editProps) {\n    var computedProps = computedPropsRef.current;\n\n    if (!computedProps) {\n      return;\n    }\n\n    if (computedProps.autoFocusOnEditComplete) {\n      computedProps.focus();\n    }\n\n    if (computedProps.initialProps.onEditComplete) {\n      currentEditCompletePromise.current = Promise.resolve(computedProps.initialProps.onEditComplete(editProps));\n    }\n\n    computedProps.isInEdit.current = false;\n  }, []);\n  var onEditValueChange = (0, _react.useCallback)(function (editProps) {\n    var computedProps = computedPropsRef.current;\n\n    if (!computedProps) {\n      return;\n    }\n\n    if (computedProps.initialProps.onEditValueChange) {\n      computedProps.initialProps.onEditValueChange(editProps);\n    }\n  }, []);\n  var onEditStart = (0, _react.useCallback)(function (editProps) {\n    var computedProps = computedPropsRef.current;\n\n    if (!computedProps) {\n      return;\n    }\n\n    var columnId = editProps.columnId;\n    editInfoRef.current = {\n      columnId: columnId,\n      columnIndex: editProps.columnIndex,\n      rowId: editProps.rowId,\n      rowIndex: editProps.rowIndex\n    };\n\n    if (computedProps.initialProps.onEditStart) {\n      computedProps.initialProps.onEditStart(editProps);\n    }\n\n    requestAnimationFrame(function () {\n      var computedProps = computedPropsRef.current;\n\n      if (!computedProps) {\n        return;\n      }\n\n      var col = computedProps.getColumnBy(columnId);\n\n      if (!col) {\n        return;\n      }\n\n      computedProps.scrollToColumn(col.computedVisibleIndex, {\n        duration: 50\n      });\n    });\n    computedProps.isInEdit.current = true;\n  }, []);\n  var tryStartEdit = (0, _react.useCallback)(function () {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n      rowIndex: undefined,\n      rowId: undefined,\n      columnId: '',\n      dir: 1\n    },\n        rowIndex = _ref.rowIndex,\n        rowId = _ref.rowId,\n        columnId = _ref.columnId,\n        dir = _ref.dir;\n\n    var computedProps = computedPropsRef.current;\n\n    if (!computedProps) {\n      return Promise.reject(new Error(\"Grid was probably unmounted\"));\n    }\n\n    var col = computedProps.getColumnBy(columnId);\n\n    if (!col) {\n      return Promise.reject(new Error(\"No column found for columnId: \".concat(columnId)));\n    }\n\n    if (rowIndex === undefined) {\n      rowIndex = computedProps.getRowIndexById(rowId);\n    }\n\n    return new Promise(function (resolve, reject) {\n      computedProps.scrollToIndex(rowIndex, undefined, function () {\n        setTimeout(function () {\n          computedProps.getColumnLayout().tryStartEdit({\n            rowIndex: rowIndex,\n            rowId: rowId,\n            columnIndex: col.computedVisibleIndex,\n            columnId: columnId,\n            dir: dir\n          }).then(resolve, reject);\n        }, 50);\n      });\n    });\n  }, []);\n  var startEdit = (0, _react.useCallback)(function () {\n    var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n      rowIndex: undefined,\n      rowId: undefined,\n      columnId: '',\n      dir: 1,\n      value: ''\n    },\n        rowIndex = _ref2.rowIndex,\n        rowId = _ref2.rowId,\n        columnId = _ref2.columnId,\n        dir = _ref2.dir,\n        value = _ref2.value;\n\n    var computedProps = computedPropsRef.current;\n\n    if (!computedProps) {\n      return Promise.reject(new Error(\"Grid was probably unmounted\"));\n    }\n\n    var col = computedProps.getColumnBy(columnId);\n\n    if (!col) {\n      return Promise.reject(new Error(\"No column found for columnId: \".concat(columnId)));\n    }\n\n    if (rowIndex === undefined) {\n      rowIndex = computedProps.getRowIndexById(rowId);\n    }\n\n    return new Promise(function (resolve, reject) {\n      computedProps.scrollToIndex(rowIndex, undefined, function () {\n        setTimeout(function () {\n          computedProps.getColumnLayout().startEdit({\n            rowIndex: rowIndex,\n            rowId: rowId,\n            columnIndex: col.computedVisibleIndex,\n            columnId: columnId,\n            value: value\n          }).then(resolve, reject);\n        }, 50);\n      });\n    });\n  }, []);\n  var completeEdit = (0, _react.useCallback)(function () {\n    var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n      rowIndex: undefined,\n      rowId: undefined,\n      columnId: '',\n      dir: 1,\n      value: ''\n    },\n        rowId = _ref3.rowId,\n        rowIndex = _ref3.rowIndex,\n        columnId = _ref3.columnId,\n        value = _ref3.value;\n\n    var computedProps = computedPropsRef.current;\n\n    if (!computedProps) {\n      return Promise.reject(new Error(\"Grid was probably unmounted\"));\n    }\n\n    var col = computedProps.getColumnBy(columnId);\n    var editInfo = getCurrentEditInfo();\n\n    if (!editInfo) {\n      return;\n    }\n\n    if (!col && editInfo) {\n      col = computedProps.getColumnBy(editInfo.columnId);\n      rowIndex = editInfo.rowIndex;\n    }\n\n    if (!col) {\n      return;\n    }\n\n    if (rowIndex === undefined) {\n      rowIndex = computedProps.getRowIndexById(rowId);\n    }\n\n    computedProps.scrollToIndex(rowIndex, undefined, function () {\n      setTimeout(function () {\n        computedProps.getColumnLayout().completeEdit({\n          rowIndex: rowIndex,\n          columnIndex: col.computedVisibleIndex,\n          value: value\n        });\n      }, 50);\n    });\n  }, []);\n  var cancelEdit = (0, _react.useCallback)(function () {\n    var _ref4 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n      rowIndex: undefined,\n      columnId: undefined\n    },\n        rowIndex = _ref4.rowIndex,\n        columnId = _ref4.columnId;\n\n    var editInfo = editInfoRef.current;\n\n    if (!editInfo) {\n      return;\n    }\n\n    var col = columnId ? computedProps.getColumnBy(columnId) : null;\n\n    if (!col && editInfo) {\n      col = computedProps.getColumnBy(editInfo.columnId);\n      rowIndex = editInfo.rowIndex;\n    }\n\n    if (!col) {\n      return;\n    }\n\n    computedProps.getColumnLayout().cancelEdit({\n      rowIndex: rowIndex,\n      columnIndex: col.computedVisibleIndex\n    });\n  }, []);\n  var getCurrentEditInfo = (0, _react.useCallback)(function () {\n    return editInfoRef.current;\n  }, []);\n  return {\n    getCurrentEditInfo: getCurrentEditInfo,\n    startEdit: startEdit,\n    onEditStart: onEditStart,\n    onEditStop: onEditStop,\n    onEditCancel: onEditCancel,\n    onEditComplete: onEditComplete,\n    onEditValueChange: onEditValueChange,\n    completeEdit: completeEdit,\n    cancelEdit: cancelEdit,\n    tryStartEdit: tryStartEdit,\n    isInEdit: isInEdit,\n    currentEditCompletePromise: currentEditCompletePromise\n  };\n};\n\nvar _default = useEditable;\nexports.default = _default;","map":{"version":3,"sources":["/Users/sungjaejoo/Desktop/리액트/인터로거/ILP-main/node_modules/@inovua/reactdatagrid-community/hooks/useEditable/index.js"],"names":["Object","defineProperty","exports","value","default","_react","require","useEditable","props","computedProps","computedPropsRef","editInfoRef","useRef","isInEdit","currentEditCompletePromise","Promise","resolve","onEditStop","useCallback","editProps","current","initialProps","setTimeout","onEditCancel","onEditComplete","autoFocusOnEditComplete","focus","onEditValueChange","onEditStart","columnId","columnIndex","rowId","rowIndex","requestAnimationFrame","col","getColumnBy","scrollToColumn","computedVisibleIndex","duration","tryStartEdit","_ref","arguments","length","undefined","dir","reject","Error","concat","getRowIndexById","scrollToIndex","getColumnLayout","then","startEdit","_ref2","completeEdit","_ref3","editInfo","getCurrentEditInfo","cancelEdit","_ref4","_default"],"mappings":"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","sourcesContent":["/** \n * Copyright © INOVUA TRADING.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = require(\"react\");\n\nvar useEditable = function useEditable(props, computedProps, computedPropsRef) {\n  var editInfoRef = (0, _react.useRef)(null);\n  var isInEdit = (0, _react.useRef)(false);\n  var currentEditCompletePromise = (0, _react.useRef)(Promise.resolve(true));\n  var onEditStop = (0, _react.useCallback)(function (editProps) {\n    var computedProps = computedPropsRef.current;\n\n    if (!computedProps) {\n      return;\n    }\n\n    if (computedProps.initialProps.onEditStop) {\n      computedProps.initialProps.onEditStop(editProps);\n    }\n\n    setTimeout(function () {\n      editInfoRef.current = null;\n    }, 0);\n  }, []);\n  var onEditCancel = (0, _react.useCallback)(function (editProps) {\n    var computedProps = computedPropsRef.current;\n\n    if (!computedProps) {\n      return;\n    }\n\n    if (computedProps.initialProps.onEditCancel) {\n      computedProps.initialProps.onEditCancel(editProps);\n    }\n\n    setTimeout(function () {\n      computedProps.isInEdit.current = false;\n    }, 50);\n  }, []);\n  var onEditComplete = (0, _react.useCallback)(function (editProps) {\n    var computedProps = computedPropsRef.current;\n\n    if (!computedProps) {\n      return;\n    }\n\n    if (computedProps.autoFocusOnEditComplete) {\n      computedProps.focus();\n    }\n\n    if (computedProps.initialProps.onEditComplete) {\n      currentEditCompletePromise.current = Promise.resolve(computedProps.initialProps.onEditComplete(editProps));\n    }\n\n    computedProps.isInEdit.current = false;\n  }, []);\n  var onEditValueChange = (0, _react.useCallback)(function (editProps) {\n    var computedProps = computedPropsRef.current;\n\n    if (!computedProps) {\n      return;\n    }\n\n    if (computedProps.initialProps.onEditValueChange) {\n      computedProps.initialProps.onEditValueChange(editProps);\n    }\n  }, []);\n  var onEditStart = (0, _react.useCallback)(function (editProps) {\n    var computedProps = computedPropsRef.current;\n\n    if (!computedProps) {\n      return;\n    }\n\n    var columnId = editProps.columnId;\n    editInfoRef.current = {\n      columnId: columnId,\n      columnIndex: editProps.columnIndex,\n      rowId: editProps.rowId,\n      rowIndex: editProps.rowIndex\n    };\n\n    if (computedProps.initialProps.onEditStart) {\n      computedProps.initialProps.onEditStart(editProps);\n    }\n\n    requestAnimationFrame(function () {\n      var computedProps = computedPropsRef.current;\n\n      if (!computedProps) {\n        return;\n      }\n\n      var col = computedProps.getColumnBy(columnId);\n\n      if (!col) {\n        return;\n      }\n\n      computedProps.scrollToColumn(col.computedVisibleIndex, {\n        duration: 50\n      });\n    });\n    computedProps.isInEdit.current = true;\n  }, []);\n  var tryStartEdit = (0, _react.useCallback)(function () {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n      rowIndex: undefined,\n      rowId: undefined,\n      columnId: '',\n      dir: 1\n    },\n        rowIndex = _ref.rowIndex,\n        rowId = _ref.rowId,\n        columnId = _ref.columnId,\n        dir = _ref.dir;\n\n    var computedProps = computedPropsRef.current;\n\n    if (!computedProps) {\n      return Promise.reject(new Error(\"Grid was probably unmounted\"));\n    }\n\n    var col = computedProps.getColumnBy(columnId);\n\n    if (!col) {\n      return Promise.reject(new Error(\"No column found for columnId: \".concat(columnId)));\n    }\n\n    if (rowIndex === undefined) {\n      rowIndex = computedProps.getRowIndexById(rowId);\n    }\n\n    return new Promise(function (resolve, reject) {\n      computedProps.scrollToIndex(rowIndex, undefined, function () {\n        setTimeout(function () {\n          computedProps.getColumnLayout().tryStartEdit({\n            rowIndex: rowIndex,\n            rowId: rowId,\n            columnIndex: col.computedVisibleIndex,\n            columnId: columnId,\n            dir: dir\n          }).then(resolve, reject);\n        }, 50);\n      });\n    });\n  }, []);\n  var startEdit = (0, _react.useCallback)(function () {\n    var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n      rowIndex: undefined,\n      rowId: undefined,\n      columnId: '',\n      dir: 1,\n      value: ''\n    },\n        rowIndex = _ref2.rowIndex,\n        rowId = _ref2.rowId,\n        columnId = _ref2.columnId,\n        dir = _ref2.dir,\n        value = _ref2.value;\n\n    var computedProps = computedPropsRef.current;\n\n    if (!computedProps) {\n      return Promise.reject(new Error(\"Grid was probably unmounted\"));\n    }\n\n    var col = computedProps.getColumnBy(columnId);\n\n    if (!col) {\n      return Promise.reject(new Error(\"No column found for columnId: \".concat(columnId)));\n    }\n\n    if (rowIndex === undefined) {\n      rowIndex = computedProps.getRowIndexById(rowId);\n    }\n\n    return new Promise(function (resolve, reject) {\n      computedProps.scrollToIndex(rowIndex, undefined, function () {\n        setTimeout(function () {\n          computedProps.getColumnLayout().startEdit({\n            rowIndex: rowIndex,\n            rowId: rowId,\n            columnIndex: col.computedVisibleIndex,\n            columnId: columnId,\n            value: value\n          }).then(resolve, reject);\n        }, 50);\n      });\n    });\n  }, []);\n  var completeEdit = (0, _react.useCallback)(function () {\n    var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n      rowIndex: undefined,\n      rowId: undefined,\n      columnId: '',\n      dir: 1,\n      value: ''\n    },\n        rowId = _ref3.rowId,\n        rowIndex = _ref3.rowIndex,\n        columnId = _ref3.columnId,\n        value = _ref3.value;\n\n    var computedProps = computedPropsRef.current;\n\n    if (!computedProps) {\n      return Promise.reject(new Error(\"Grid was probably unmounted\"));\n    }\n\n    var col = computedProps.getColumnBy(columnId);\n    var editInfo = getCurrentEditInfo();\n\n    if (!editInfo) {\n      return;\n    }\n\n    if (!col && editInfo) {\n      col = computedProps.getColumnBy(editInfo.columnId);\n      rowIndex = editInfo.rowIndex;\n    }\n\n    if (!col) {\n      return;\n    }\n\n    if (rowIndex === undefined) {\n      rowIndex = computedProps.getRowIndexById(rowId);\n    }\n\n    computedProps.scrollToIndex(rowIndex, undefined, function () {\n      setTimeout(function () {\n        computedProps.getColumnLayout().completeEdit({\n          rowIndex: rowIndex,\n          columnIndex: col.computedVisibleIndex,\n          value: value\n        });\n      }, 50);\n    });\n  }, []);\n  var cancelEdit = (0, _react.useCallback)(function () {\n    var _ref4 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n      rowIndex: undefined,\n      columnId: undefined\n    },\n        rowIndex = _ref4.rowIndex,\n        columnId = _ref4.columnId;\n\n    var editInfo = editInfoRef.current;\n\n    if (!editInfo) {\n      return;\n    }\n\n    var col = columnId ? computedProps.getColumnBy(columnId) : null;\n\n    if (!col && editInfo) {\n      col = computedProps.getColumnBy(editInfo.columnId);\n      rowIndex = editInfo.rowIndex;\n    }\n\n    if (!col) {\n      return;\n    }\n\n    computedProps.getColumnLayout().cancelEdit({\n      rowIndex: rowIndex,\n      columnIndex: col.computedVisibleIndex\n    });\n  }, []);\n  var getCurrentEditInfo = (0, _react.useCallback)(function () {\n    return editInfoRef.current;\n  }, []);\n  return {\n    getCurrentEditInfo: getCurrentEditInfo,\n    startEdit: startEdit,\n    onEditStart: onEditStart,\n    onEditStop: onEditStop,\n    onEditCancel: onEditCancel,\n    onEditComplete: onEditComplete,\n    onEditValueChange: onEditValueChange,\n    completeEdit: completeEdit,\n    cancelEdit: cancelEdit,\n    tryStartEdit: tryStartEdit,\n    isInEdit: isInEdit,\n    currentEditCompletePromise: currentEditCompletePromise\n  };\n};\n\nvar _default = useEditable;\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}