{"ast":null,"code":"/** \n * Copyright © INOVUA TRADING.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = require(\"react\");\n\nvar useColumnHover = function useColumnHover(_props, _computedProps, computedPropsRef) {\n  var _useState = (0, _react.useState)(-1),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      columnIndexHovered = _useState2[0],\n      setColumnIndexHovered = _useState2[1];\n\n  var onColumnMouseEnter = (0, _react.useCallback)(function (cellProps) {\n    var computedProps = computedPropsRef.current;\n\n    if (!computedProps) {\n      return;\n    }\n\n    if (computedProps.computedEnableColumnHover || cellProps.computedEnableColumnHover) {\n      var columnIndex = cellProps.columnIndex;\n\n      if (columnIndex != null) {\n        setColumnIndexHovered(columnIndex);\n      }\n    }\n  }, []);\n  var onColumnMouseLeave = (0, _react.useCallback)(function (cellProps) {\n    var computedProps = computedPropsRef.current;\n\n    if (!computedProps) {\n      return;\n    }\n\n    if (computedProps.computedEnableColumnHover || cellProps.computedEnableColumnHover) {\n      setColumnIndexHovered(-1);\n    }\n  }, []);\n  return {\n    columnIndexHovered: columnIndexHovered,\n    onColumnMouseEnter: onColumnMouseEnter,\n    onColumnMouseLeave: onColumnMouseLeave\n  };\n};\n\nvar _default = useColumnHover;\nexports.default = _default;","map":{"version":3,"sources":["/Users/sungjaejoo/Desktop/리액트/인터로거/ILP-main/node_modules/@inovua/reactdatagrid-community/hooks/useColumnHover.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_slicedToArray2","_react","useColumnHover","_props","_computedProps","computedPropsRef","_useState","useState","_useState2","columnIndexHovered","setColumnIndexHovered","onColumnMouseEnter","useCallback","cellProps","computedProps","current","computedEnableColumnHover","columnIndex","onColumnMouseLeave","_default"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAApC;;AAEAC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,eAAe,GAAGP,sBAAsB,CAACC,OAAO,CAAC,sCAAD,CAAR,CAA5C;;AAEA,IAAIO,MAAM,GAAGP,OAAO,CAAC,OAAD,CAApB;;AAEA,IAAIQ,cAAc,GAAG,SAASA,cAAT,CAAwBC,MAAxB,EAAgCC,cAAhC,EAAgDC,gBAAhD,EAAkE;AACrF,MAAIC,SAAS,GAAG,CAAC,GAAGL,MAAM,CAACM,QAAX,EAAqB,CAAC,CAAtB,CAAhB;AAAA,MACIC,UAAU,GAAG,CAAC,GAAGR,eAAe,CAACD,OAApB,EAA6BO,SAA7B,EAAwC,CAAxC,CADjB;AAAA,MAEIG,kBAAkB,GAAGD,UAAU,CAAC,CAAD,CAFnC;AAAA,MAGIE,qBAAqB,GAAGF,UAAU,CAAC,CAAD,CAHtC;;AAKA,MAAIG,kBAAkB,GAAG,CAAC,GAAGV,MAAM,CAACW,WAAX,EAAwB,UAAUC,SAAV,EAAqB;AACpE,QAAIC,aAAa,GAAGT,gBAAgB,CAACU,OAArC;;AAEA,QAAI,CAACD,aAAL,EAAoB;AAClB;AACD;;AAED,QAAIA,aAAa,CAACE,yBAAd,IAA2CH,SAAS,CAACG,yBAAzD,EAAoF;AAClF,UAAIC,WAAW,GAAGJ,SAAS,CAACI,WAA5B;;AAEA,UAAIA,WAAW,IAAI,IAAnB,EAAyB;AACvBP,QAAAA,qBAAqB,CAACO,WAAD,CAArB;AACD;AACF;AACF,GAdwB,EActB,EAdsB,CAAzB;AAeA,MAAIC,kBAAkB,GAAG,CAAC,GAAGjB,MAAM,CAACW,WAAX,EAAwB,UAAUC,SAAV,EAAqB;AACpE,QAAIC,aAAa,GAAGT,gBAAgB,CAACU,OAArC;;AAEA,QAAI,CAACD,aAAL,EAAoB;AAClB;AACD;;AAED,QAAIA,aAAa,CAACE,yBAAd,IAA2CH,SAAS,CAACG,yBAAzD,EAAoF;AAClFN,MAAAA,qBAAqB,CAAC,CAAC,CAAF,CAArB;AACD;AACF,GAVwB,EAUtB,EAVsB,CAAzB;AAWA,SAAO;AACLD,IAAAA,kBAAkB,EAAEA,kBADf;AAELE,IAAAA,kBAAkB,EAAEA,kBAFf;AAGLO,IAAAA,kBAAkB,EAAEA;AAHf,GAAP;AAKD,CArCD;;AAuCA,IAAIC,QAAQ,GAAGjB,cAAf;AACAL,OAAO,CAACE,OAAR,GAAkBoB,QAAlB","sourcesContent":["/** \n * Copyright © INOVUA TRADING.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = require(\"react\");\n\nvar useColumnHover = function useColumnHover(_props, _computedProps, computedPropsRef) {\n  var _useState = (0, _react.useState)(-1),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      columnIndexHovered = _useState2[0],\n      setColumnIndexHovered = _useState2[1];\n\n  var onColumnMouseEnter = (0, _react.useCallback)(function (cellProps) {\n    var computedProps = computedPropsRef.current;\n\n    if (!computedProps) {\n      return;\n    }\n\n    if (computedProps.computedEnableColumnHover || cellProps.computedEnableColumnHover) {\n      var columnIndex = cellProps.columnIndex;\n\n      if (columnIndex != null) {\n        setColumnIndexHovered(columnIndex);\n      }\n    }\n  }, []);\n  var onColumnMouseLeave = (0, _react.useCallback)(function (cellProps) {\n    var computedProps = computedPropsRef.current;\n\n    if (!computedProps) {\n      return;\n    }\n\n    if (computedProps.computedEnableColumnHover || cellProps.computedEnableColumnHover) {\n      setColumnIndexHovered(-1);\n    }\n  }, []);\n  return {\n    columnIndexHovered: columnIndexHovered,\n    onColumnMouseEnter: onColumnMouseEnter,\n    onColumnMouseLeave: onColumnMouseLeave\n  };\n};\n\nvar _default = useColumnHover;\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}