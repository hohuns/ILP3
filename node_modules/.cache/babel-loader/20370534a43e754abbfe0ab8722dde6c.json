{"ast":null,"code":"var _jsxFileName = \"/Users/sungjaejoo/Desktop/ILP-main/src/components/Layout/DialogUndoingBox.tsx\";\n\n/* eslint-disable react/jsx-boolean-value */\n\n/* eslint-disable no-useless-escape */\n\n/* eslint-disable arrow-body-style */\n\n/* eslint-disable no-param-reassign */\n\n/* eslint-disable yoda */\n\n/* eslint-disable prefer-const */\n\n/* eslint-disable no-undef */\n\n/* eslint-disable no-unused-vars */\nimport Button from \"@mui/material/Button\";\nimport Dialog from \"@mui/material/Dialog\";\nimport { useTranslation } from \"react-i18next\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogContentText from \"@mui/material/DialogContentText\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport PropTypes from \"prop-types\";\nimport { Grid, TextField, Box, MenuItem } from \"@mui/material\";\nimport { useState, useEffect } from \"react\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\nimport { usersActions } from \"../../store/userSlice\"; // eslint-disable-next-line arrow-body-style\n\nconst DialogEquipment = _ref => {\n  let {\n    open,\n    close\n  } = _ref;\n  const reduxSiteCode = useSelector(state => state.siteCode);\n  const [numEquipment, setNumEquipment] = useState();\n  const [rfidNumPerEquip, setRfidNumPerEquip] = useState();\n  const [prefix, setPrefix] = useState();\n  const [locationArray, SetLocationArray] = useState([]);\n  const [tempLocationArray, SetTempLocationArray] = useState([]);\n  const storedSite = localStorage.getItem(\"siteCode\");\n  const dispatch = useDispatch();\n  const {\n    t\n  } = useTranslation([\"assetRegistration\"]); // Input change Handler\n\n  const numEquipmentChangeHandler = event => {\n    setNumEquipment(event.target.value);\n  };\n\n  const rfidNumPerEquipChangeHandler = event => {\n    setRfidNumPerEquip(event.target.value);\n  }; //  Loading the prefix for generate the inbound label\n\n\n  const loadPrefix = async () => {\n    try {\n      var _tempLocationArray$fi, _json$filter;\n\n      // Mapping between reduxSiteCode and siteCode\n      let result = tempLocationArray === null || tempLocationArray === void 0 ? void 0 : (_tempLocationArray$fi = tempLocationArray.filter(r => r.siteCode === reduxSiteCode)) === null || _tempLocationArray$fi === void 0 ? void 0 : _tempLocationArray$fi.map(r => r.id)[0];\n      const data = await fetch(`/echoMe/prefix/listAllPrefixSequence`);\n\n      if (!data.ok) {\n        console.log(\"error message from loadPrefix\");\n        let errorText = await data.text();\n        console.log(errorText);\n        throw Error(errorText);\n      }\n\n      const json = await data.json();\n      const temp = [];\n      json === null || json === void 0 ? void 0 : (_json$filter = json.filter(r => r.site === result)) === null || _json$filter === void 0 ? void 0 : _json$filter.map(r => temp.push(r.prefix)); // let finalRoute = _.uniqBy(temp, \"id\");\n\n      SetLocationArray(temp);\n    } catch (err) {\n      console.error(err);\n    }\n  }; //  fetch loadprefix when dialog is opened\n\n\n  useEffect(() => {\n    loadPrefix();\n  }, [open]); // Data fetching functions\n\n  const loadLocation = async () => {\n    loadPrefix();\n\n    try {\n      const data = await fetch(`/echoMe/loc/listLocSite`);\n\n      if (!data.ok) {\n        console.log(\"error message from loadPrefix\");\n        let errorText = await data.text();\n        console.log(errorText);\n        throw Error(errorText);\n      }\n\n      const json = await data.json();\n      const temp = [];\n      json === null || json === void 0 ? void 0 : json.map(r => {\n        return temp.push({\n          id: r.id,\n          siteCode: r.siteCode\n        });\n      });\n      SetTempLocationArray(temp);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  useEffect(() => {\n    loadLocation();\n  }, [reduxSiteCode, storedSite]); //  Fetching the location code from redux\n\n  useEffect(() => {\n    dispatch(usersActions.updateSiteCode(storedSite));\n  }, [storedSite]); //  Button Functions\n\n  const handleClose = () => {\n    //  Resetting the values\n    setPrefix(\"\");\n    setNumEquipment(\"\");\n    setRfidNumPerEquip(\"\");\n    close();\n  };\n\n  const handleChange = async event => {\n    setPrefix(event.target.value);\n\n    try {\n      const data = await fetch(`/echoMe/prefix?containerPrefix=${event.target.value}`);\n\n      if (!data.ok) {\n        console.log(\"error message from fetch Prefix\");\n        let errorText = await data.text();\n        console.log(errorText);\n        throw Error(errorText);\n      }\n\n      const json = await data.json();\n    } catch (err) {\n      alert(err);\n    }\n  };\n\n  const genEquRfidTagZpl = (rfid, barCode) => {\n    return `CT~~CD,~CC^~CT~ ^XA ^MD25 ~TA000 ~JSN ^LT0 ^MNW ^MTT ^PON ^PMN ^LH0,0 ^JMA ^PR6,6 ~SD15 ^JUS ^LRN ^CI27 ^PA0,1,1,0 ^RS8,,,3 ^XZ ^XA ^MMT ^PW945 ^LL472 ^LS0 ^FPH,3^FT11,395^A0N,150,150^FB934,1,38,C^FH\\\\^CI28^FD${barCode}^FS^CI27 ^BY5,3,200^FT139,236^BCN,,N,N ^FH\\\\^FD>:${barCode}^FS ^RFW,H,1,2,1^FD4000^FS ^RFW,A,2,6,1^FD${rfid}^FS ^PQ1,0,1,Y ^XZ`;\n  };\n\n  const submitHandler = async event => {\n    event.preventDefault();\n\n    if (!prefix) {\n      alert(t(\"assetReg.DialogEquipmentRegistration.alert-submitHandler1\"));\n    } else if (!numEquipment || !rfidNumPerEquip) {\n      alert(t(\"assetReg.DialogEquipmentRegistration.alert-submitHandler2\"));\n    } else if (prefix && numEquipment && rfidNumPerEquip) {\n      //  fetching data\n      try {\n        const data = await fetch(`/echoMe/reg/genRfidContainer?containerQty=${numEquipment}&rfidQty=${rfidNumPerEquip}`);\n\n        if (!data.ok) {\n          console.log(\"error message from genRfidContainer\");\n          let errorText = await data.text();\n          console.log(errorText);\n          throw Error(errorText);\n        }\n\n        const json = await data.json(); //  get rfid and barcode from json\n\n        let zpl = json === null || json === void 0 ? void 0 : json.map(e => {\n          return genEquRfidTagZpl(e.rfid, e.containerCode);\n        }).join(\"\");\n        console.log(zpl); // Print dialog\n\n        setTimeout(() => {\n          let printWindow = window.open();\n          printWindow.document.open(\"text/plain\");\n          printWindow.document.write(zpl);\n          printWindow.document.close();\n          printWindow.focus();\n          printWindow.print();\n          printWindow.close();\n        }); //  Resetting the values and close\n\n        handleClose();\n      } catch (err) {\n        console.error(err);\n        alert(err);\n      }\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Dialog, {\n    open: open,\n    onClose: close,\n    fullWidth: true,\n    maxWidth: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 9\n    }\n  }, t(\"assetReg.DialogEquipmentRegistration.header-name\")), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DialogContentText, {\n    align: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 11\n    }\n  }, t(\"assetReg.DialogEquipmentRegistration.body\"), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 62\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    variant: \"div\",\n    sx: {\n      padding: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: submitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    mt: \"5px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    fullWidth: true,\n    variant: \"standard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    id: \"simple-select-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 27\n    }\n  }, t(\"assetReg.DialogEquipmentRegistration.input-prefix\")), /*#__PURE__*/React.createElement(Select, {\n    labelId: \"simple-select-label\",\n    id: \"demo-simple-select\",\n    label: \"Site\",\n    onChange: handleChange,\n    defaultValue: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 27\n    }\n  }, locationArray === null || locationArray === void 0 ? void 0 : locationArray.map(location => /*#__PURE__*/React.createElement(MenuItem, {\n    key: location,\n    value: location,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 31\n    }\n  }, location)))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    margin: \"dense\",\n    id: \"numEquipment-input\",\n    name: \"numEquipment\",\n    label: t(\"assetReg.DialogEquipmentRegistration.input-numEquipment\"),\n    type: \"number\",\n    fullWidth: true,\n    InputProps: {\n      inputProps: {\n        min: 1,\n        max: 999\n      }\n    },\n    onChange: numEquipmentChangeHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 23\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    margin: \"dense\",\n    id: \"rfidNumPerEquip-input\",\n    name: \"rfidNumPerEquip\",\n    label: t(\"assetReg.DialogEquipmentRegistration.input-rfidNumPerEquip\"),\n    type: \"number\",\n    fullWidth: true,\n    InputProps: {\n      inputProps: {\n        min: 1,\n        max: 9\n      }\n    },\n    onChange: rfidNumPerEquipChangeHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 23\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    fullWidth: true,\n    onClick: loadPrefix,\n    style: {\n      color: \"white\",\n      backgroundColor: \"blue\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 23\n    }\n  }, t(\"assetReg.DialogEquipmentRegistration.button-refresh\"))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    fullWidth: true,\n    type: \"submit\",\n    style: {\n      color: \"white\",\n      backgroundColor: \"blue\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 23\n    }\n  }, t(\"assetReg.DialogEquipmentRegistration.button-generate\"))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    fullWidth: true,\n    onClick: handleClose,\n    style: {\n      color: \"white\",\n      backgroundColor: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 23\n    }\n  }, t(\"assetReg.DialogRegisteredEquipment.button-close\"))))))))), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 9\n    }\n  })));\n}; // Setting default values for the props of DialogStockAdjustment\n\n\nDialogEquipment.defaultProps = {\n  open: false\n}; // Typechecking props for the MDButton\n\nDialogEquipment.propTypes = {\n  open: PropTypes.bool,\n  close: PropTypes.func.isRequired\n};\nexport default DialogEquipment;","map":{"version":3,"sources":["/Users/sungjaejoo/Desktop/ILP-main/src/components/Layout/DialogUndoingBox.tsx"],"names":["Button","Dialog","useTranslation","useSelector","useDispatch","DialogActions","DialogContent","DialogContentText","DialogTitle","PropTypes","Grid","TextField","Box","MenuItem","useState","useEffect","InputLabel","FormControl","Select","usersActions","DialogEquipment","open","close","reduxSiteCode","state","siteCode","numEquipment","setNumEquipment","rfidNumPerEquip","setRfidNumPerEquip","prefix","setPrefix","locationArray","SetLocationArray","tempLocationArray","SetTempLocationArray","storedSite","localStorage","getItem","dispatch","t","numEquipmentChangeHandler","event","target","value","rfidNumPerEquipChangeHandler","loadPrefix","result","filter","r","map","id","data","fetch","ok","console","log","errorText","text","Error","json","temp","site","push","err","error","loadLocation","updateSiteCode","handleClose","handleChange","alert","genEquRfidTagZpl","rfid","barCode","submitHandler","preventDefault","zpl","e","containerCode","join","setTimeout","printWindow","window","document","write","focus","print","padding","location","inputProps","min","max","color","backgroundColor","defaultProps","propTypes","bool","func","isRequired"],"mappings":"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","sourcesContent":["/* eslint-disable react/jsx-boolean-value */\n/* eslint-disable no-useless-escape */\n/* eslint-disable arrow-body-style */\n/* eslint-disable no-param-reassign */\n/* eslint-disable yoda */\n/* eslint-disable prefer-const */\n/* eslint-disable no-undef */\n/* eslint-disable no-unused-vars */\nimport Button from \"@mui/material/Button\";\nimport Dialog from \"@mui/material/Dialog\";\nimport { useTranslation } from \"react-i18next\";\nimport { uniqBy, uniqWith } from \"lodash\";\nimport { useQuery, useQueryClient } from \"react-query\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogContentText from \"@mui/material/DialogContentText\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport PropTypes from \"prop-types\";\nimport Divider from \"@mui/material/Divider\";\nimport { Grid, TextField, Box, Typography, Menu, MenuItem } from \"@mui/material\";\nimport { useState, useEffect } from \"react\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\nimport { usersActions } from \"../../store/userSlice\";\n\n// eslint-disable-next-line arrow-body-style\nconst DialogEquipment = ({ open, close }) => {\n  const reduxSiteCode = useSelector((state) => state.siteCode);\n  const [numEquipment, setNumEquipment] = useState();\n  const [rfidNumPerEquip, setRfidNumPerEquip] = useState();\n  const [prefix, setPrefix] = useState();\n  const [locationArray, SetLocationArray] = useState([]);\n  const [tempLocationArray, SetTempLocationArray] = useState([]);\n  const storedSite = localStorage.getItem(\"siteCode\");\n  const dispatch = useDispatch();\n  const { t } = useTranslation([\"assetRegistration\"]);\n\n  // Input change Handler\n  const numEquipmentChangeHandler = (event) => {\n    setNumEquipment(event.target.value);\n  };\n\n  const rfidNumPerEquipChangeHandler = (event) => {\n    setRfidNumPerEquip(event.target.value);\n  };\n\n  //  Loading the prefix for generate the inbound label\n  const loadPrefix = async () => {\n    try {\n      // Mapping between reduxSiteCode and siteCode\n      let result = tempLocationArray\n        ?.filter((r) => r.siteCode === reduxSiteCode)\n        ?.map((r) => r.id)[0];\n      const data = await fetch(`/echoMe/prefix/listAllPrefixSequence`);\n      if (!data.ok) {\n        console.log(\"error message from loadPrefix\");\n        let errorText = await data.text();\n        console.log(errorText);\n        throw Error(errorText);\n      }\n      const json = await data.json();\n      const temp = [];\n      json?.filter((r) => r.site === result)?.map((r) => temp.push(r.prefix));\n      // let finalRoute = _.uniqBy(temp, \"id\");\n      SetLocationArray(temp);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  //  fetch loadprefix when dialog is opened\n  useEffect(() => {\n    loadPrefix();\n  }, [open]);\n\n  // Data fetching functions\n  const loadLocation = async () => {\n    loadPrefix();\n    try {\n      const data = await fetch(`/echoMe/loc/listLocSite`);\n      if (!data.ok) {\n        console.log(\"error message from loadPrefix\");\n        let errorText = await data.text();\n        console.log(errorText);\n        throw Error(errorText);\n      }\n      const json = await data.json();\n      const temp = [];\n      json?.map((r) => {\n        return temp.push({\n          id: r.id,\n          siteCode: r.siteCode,\n        });\n      });\n      SetTempLocationArray(temp);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  useEffect(() => {\n    loadLocation();\n  }, [reduxSiteCode, storedSite]);\n\n  //  Fetching the location code from redux\n  useEffect(() => {\n    dispatch(usersActions.updateSiteCode(storedSite));\n  }, [storedSite]);\n\n  //  Button Functions\n  const handleClose = () => {\n    //  Resetting the values\n    setPrefix(\"\");\n    setNumEquipment(\"\");\n    setRfidNumPerEquip(\"\");\n    close();\n  };\n\n  const handleChange = async (event) => {\n    setPrefix(event.target.value);\n    try {\n      const data = await fetch(`/echoMe/prefix?containerPrefix=${event.target.value}`);\n      if (!data.ok) {\n        console.log(\"error message from fetch Prefix\");\n        let errorText = await data.text();\n        console.log(errorText);\n        throw Error(errorText);\n      }\n      const json = await data.json();\n    } catch (err) {\n      alert(err);\n    }\n  };\n\n  const genEquRfidTagZpl = (rfid, barCode) => {\n    return `CT~~CD,~CC^~CT~ ^XA ^MD25 ~TA000 ~JSN ^LT0 ^MNW ^MTT ^PON ^PMN ^LH0,0 ^JMA ^PR6,6 ~SD15 ^JUS ^LRN ^CI27 ^PA0,1,1,0 ^RS8,,,3 ^XZ ^XA ^MMT ^PW945 ^LL472 ^LS0 ^FPH,3^FT11,395^A0N,150,150^FB934,1,38,C^FH\\\\^CI28^FD${barCode}^FS^CI27 ^BY5,3,200^FT139,236^BCN,,N,N ^FH\\\\^FD>:${barCode}^FS ^RFW,H,1,2,1^FD4000^FS ^RFW,A,2,6,1^FD${rfid}^FS ^PQ1,0,1,Y ^XZ`;\n  };\n\n  const submitHandler = async (event) => {\n    event.preventDefault();\n    if (!prefix) {\n      alert(t(\"assetReg.DialogEquipmentRegistration.alert-submitHandler1\"));\n    } else if (!numEquipment || !rfidNumPerEquip) {\n      alert(t(\"assetReg.DialogEquipmentRegistration.alert-submitHandler2\"));\n    } else if (prefix && numEquipment && rfidNumPerEquip) {\n      //  fetching data\n      try {\n        const data = await fetch(\n          `/echoMe/reg/genRfidContainer?containerQty=${numEquipment}&rfidQty=${rfidNumPerEquip}`\n        );\n        if (!data.ok) {\n          console.log(\"error message from genRfidContainer\");\n          let errorText = await data.text();\n          console.log(errorText);\n          throw Error(errorText);\n        }\n        const json = await data.json();\n\n        //  get rfid and barcode from json\n        let zpl = json\n          ?.map((e) => {\n            return genEquRfidTagZpl(e.rfid, e.containerCode);\n          })\n          .join(\"\");\n        console.log(zpl);\n\n        // Print dialog\n        setTimeout(() => {\n          let printWindow = window.open();\n          printWindow.document.open(\"text/plain\");\n          printWindow.document.write(zpl);\n          printWindow.document.close();\n          printWindow.focus();\n          printWindow.print();\n          printWindow.close();\n        });\n\n        //  Resetting the values and close\n        handleClose();\n      } catch (err) {\n        console.error(err);\n        alert(err);\n      }\n    }\n  };\n\n  return (\n    <>\n      <Dialog open={open} onClose={close} fullWidth={true} maxWidth=\"sm\">\n        <DialogTitle>{t(\"assetReg.DialogEquipmentRegistration.header-name\")}</DialogTitle>\n        <DialogContent>\n          <DialogContentText align=\"left\">\n            {t(\"assetReg.DialogEquipmentRegistration.body\")} <br />\n            <Box variant=\"div\" sx={{ padding: \"20px\" }}>\n              <form onSubmit={submitHandler}>\n                <Grid container spacing={2} mt=\"5px\">\n                  <Grid container spacing={2}>\n                    <Grid item xs={12} sm={1}>\n                      {}\n                    </Grid>\n                    <Grid item xs={12} sm={10}>\n                      <Box>\n                        <FormControl fullWidth variant=\"standard\">\n                          <InputLabel id=\"simple-select-label\">\n                            {t(\"assetReg.DialogEquipmentRegistration.input-prefix\")}\n                          </InputLabel>\n                          <Select\n                            labelId=\"simple-select-label\"\n                            id=\"demo-simple-select\"\n                            label=\"Site\"\n                            onChange={handleChange}\n                            defaultValue=\"\"\n                          >\n                            {locationArray?.map((location) => (\n                              <MenuItem key={location} value={location}>\n                                {location}\n                              </MenuItem>\n                            ))}\n                          </Select>\n                        </FormControl>\n                      </Box>\n                    </Grid>\n                    <Grid item xs={12} sm={1}>\n                      {}\n                    </Grid>\n                    <Grid item xs={12} sm={1}>\n                      {}\n                    </Grid>\n                    <Grid item xs={12} sm={5}>\n                      <TextField\n                        margin=\"dense\"\n                        id=\"numEquipment-input\"\n                        name=\"numEquipment\"\n                        label={t(\"assetReg.DialogEquipmentRegistration.input-numEquipment\")}\n                        type=\"number\"\n                        fullWidth={true}\n                        InputProps={{ inputProps: { min: 1, max: 999 } }}\n                        onChange={numEquipmentChangeHandler}\n                      />\n                    </Grid>\n                    <Grid item xs={12} sm={5}>\n                      <TextField\n                        margin=\"dense\"\n                        id=\"rfidNumPerEquip-input\"\n                        name=\"rfidNumPerEquip\"\n                        label={t(\"assetReg.DialogEquipmentRegistration.input-rfidNumPerEquip\")}\n                        type=\"number\"\n                        fullWidth={true}\n                        InputProps={{ inputProps: { min: 1, max: 9 } }}\n                        onChange={rfidNumPerEquipChangeHandler}\n                      />\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                      {}\n                    </Grid>\n                    <Grid item xs={12} sm={2}>\n                      <Button\n                        variant=\"contained\"\n                        fullWidth={true}\n                        onClick={loadPrefix}\n                        style={{ color: \"white\", backgroundColor: \"blue\" }}\n                      >\n                        {t(\"assetReg.DialogEquipmentRegistration.button-refresh\")}\n                      </Button>\n                    </Grid>\n                    <Grid item xs={12} sm={2}>\n                      <Button\n                        variant=\"contained\"\n                        fullWidth={true}\n                        type=\"submit\"\n                        style={{ color: \"white\", backgroundColor: \"blue\" }}\n                      >\n                        {t(\"assetReg.DialogEquipmentRegistration.button-generate\")}\n                      </Button>\n                    </Grid>\n                    <Grid item xs={12} sm={2}>\n                      <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        fullWidth={true}\n                        onClick={handleClose}\n                        style={{ color: \"white\", backgroundColor: \"red\" }}\n                      >\n                        {t(\"assetReg.DialogRegisteredEquipment.button-close\")}\n                      </Button>\n                    </Grid>\n                  </Grid>\n                </Grid>\n              </form>\n            </Box>\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>{}</DialogActions>\n      </Dialog>\n    </>\n  );\n};\n\n// Setting default values for the props of DialogStockAdjustment\nDialogEquipment.defaultProps = {\n  open: false,\n};\n\n// Typechecking props for the MDButton\nDialogEquipment.propTypes = {\n  open: PropTypes.bool,\n  close: PropTypes.func.isRequired,\n};\n\nexport default DialogEquipment;\n"]},"metadata":{},"sourceType":"module"}