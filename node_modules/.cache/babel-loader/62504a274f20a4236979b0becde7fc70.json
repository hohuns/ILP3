{"ast":null,"code":"/** \n * Copyright Â© INOVUA TRADING.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _setColumnId = _interopRequireDefault(require(\"../setColumnId\"));\n\nvar _computeFlexWidths = _interopRequireDefault(require(\"../utils/flex/computeFlexWidths\"));\n\nvar _mapColumns = _interopRequireDefault(require(\"../mapColumns\"));\n\nvar _defaultCheckColumnId = require(\"./defaultCheckColumnId\");\n\nvar _defaultRowExpandColumnId = require(\"./defaultRowExpandColumnId\");\n\nvar _defaultRowIndexColumnId = require(\"./defaultRowIndexColumnId\");\n\nvar _defaultGroupColumnId = require(\"./defaultGroupColumnId\");\n\nvar _defaultRowReorderColumnId = require(\"./defaultRowReorderColumnId\");\n\nvar _setComputedColumnWidths = _interopRequireDefault(require(\"./setComputedColumnWidths\"));\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      (0, _defineProperty2.default)(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nvar DEFAULT_COLUMN_PROPS = {\n  isColumn: true,\n  keepFlex: true\n};\nvar defaultPivotGrandSummaryColumn = {\n  sortable: false,\n  draggable: false,\n  filterable: false\n};\nvar defaultPivotSummaryColumn = defaultPivotGrandSummaryColumn;\nvar emptyArray = [];\nvar emptyObject = Object.freeze ? Object.freeze({}) : {};\n\nvar _default = function _default(_ref) {\n  var _ref$generatedColumns = _ref.generatedColumnsLength,\n      generatedColumnsLength = _ref$generatedColumns === void 0 ? 0 : _ref$generatedColumns,\n      columns = _ref.columns,\n      columnMinWidth = _ref.columnMinWidth,\n      columnMaxWidth = _ref.columnMaxWidth,\n      columnDefaultWidth = _ref.columnDefaultWidth,\n      columnWidth = _ref.columnWidth,\n      _ref$columnSizes = _ref.columnSizes,\n      columnSizes = _ref$columnSizes === void 0 ? emptyObject : _ref$columnSizes,\n      _ref$columnVisibility = _ref.columnVisibilityMap,\n      columnVisibilityMap = _ref$columnVisibility === void 0 ? emptyObject : _ref$columnVisibility,\n      _ref$columnFlexes = _ref.columnFlexes,\n      columnFlexes = _ref$columnFlexes === void 0 ? emptyObject : _ref$columnFlexes,\n      _ref$lockedColumnsSta = _ref.lockedColumnsState,\n      lockedColumnsState = _ref$lockedColumnsSta === void 0 ? emptyObject : _ref$lockedColumnsSta,\n      columnOrder = _ref.columnOrder,\n      computedPivotUniqueValuesPerColumn = _ref.computedPivotUniqueValuesPerColumn,\n      editable = _ref.editable,\n      pivot = _ref.pivot,\n      sortable = _ref.sortable,\n      filterable = _ref.filterable,\n      resizable = _ref.resizable,\n      pivotGrandSummaryColumn = _ref.pivotGrandSummaryColumn,\n      lockable = _ref.lockable,\n      checkboxColumn = _ref.checkboxColumn,\n      rowIndexColumn = _ref.rowIndexColumn,\n      filter = _ref.filter,\n      rtl = _ref.rtl,\n      filterValueMap = _ref.filterValueMap,\n      sortInfo = _ref.sortInfo,\n      showPivotSummaryColumns = _ref.showPivotSummaryColumns,\n      _ref$availableWidth = _ref.availableWidth,\n      availableWidth = _ref$availableWidth === void 0 ? 0 : _ref$availableWidth,\n      onRowReorder = _ref.onRowReorder,\n      rowReorderColumn = _ref.rowReorderColumn;\n\n  if (columnVisibilityMap) {\n    columnVisibilityMap = _objectSpread({}, columnVisibilityMap);\n  }\n\n  var groupColumnSummaryReducers = {};\n  var pivotColumnSummaryReducers = {};\n\n  var addSortInfo = function addSortInfo(col) {\n    col.computedSortable = (typeof col.sortable === 'boolean' ? col.sortable : sortable) || false;\n    col.computedSortInfo = null;\n\n    if (col.computedSortable && sortInfo) {\n      col.computedSortInfo = Array.isArray(sortInfo) ? sortInfo.filter(function (info) {\n        return info.name === col.id || info.id === col.id || info.name === col.sortName;\n      })[0] : sortInfo.name === col.id || sortInfo.id === col.id || sortInfo.name === col.sortName ? sortInfo : null;\n    }\n  };\n\n  var addFilterValue = function addFilterValue(col) {\n    col.computedFilterable = (typeof col.filterable === 'boolean' ? col.filterable : filterable) || undefined;\n    col.computedFilterValue = null;\n\n    if (col.computedFilterable && filterValueMap) {\n      col.computedFilterValue = filterValueMap[col.id];\n    }\n\n    if (col.computedFilterable === undefined && col.computedFilterValue) {\n      col.computedFilterable = true;\n    }\n\n    col.computedFilterable = !!col.computedFilterable;\n  };\n\n  var hasLockedStart = false;\n  var hasLockedEnd = false;\n  var rowExpandColumn;\n  var setComputedColumnWidthsParam = {\n    columnFlexes: columnFlexes,\n    columnSizes: columnSizes,\n    columnDefaultWidth: columnDefaultWidth,\n    columnWidth: columnWidth,\n    columnMinWidth: columnMinWidth,\n    columnMaxWidth: columnMaxWidth\n  };\n  var hasDedicatedGroupColumn = false;\n  var normalizedColumns = columns.map(function (column) {\n    return _objectSpread(_objectSpread({}, DEFAULT_COLUMN_PROPS), column);\n  }).map(_setColumnId.default).map(function (col, i) {\n    col.computedInitialIndex = i - generatedColumnsLength;\n    (0, _setComputedColumnWidths.default)(col, setComputedColumnWidthsParam);\n    col.computedVisible = col.visible !== undefined ? !!col.visible : columnVisibilityMap[col.id] === false ? false : true;\n\n    if (col.computedVisible && pivot && !col.groupSummaryReducer && col.id !== _defaultGroupColumnId.id) {\n      col.computedVisible = false;\n    }\n\n    if (col.computedVisible === false) {\n      columnVisibilityMap[col.id] = false;\n    } else {\n      delete columnVisibilityMap[col.id];\n\n      if (col.id === _defaultGroupColumnId.id) {\n        hasDedicatedGroupColumn = true;\n      }\n    }\n\n    col.computedHeader = col.header === undefined ? col.name || '' : col.header;\n    col.computedLocked = col.locked;\n\n    if (col.computedLocked === undefined && lockedColumnsState[col.id] !== undefined) {\n      col.computedLocked = lockedColumnsState[col.id];\n    }\n\n    if (col.computedLocked === undefined && col.defaultLocked !== undefined) {\n      col.computedLocked = col.defaultLocked;\n    }\n\n    if (!filter || filter(col)) {\n      if (col.computedLocked === true || col.computedLocked === 'start') {\n        col.computedLocked = 'start';\n        hasLockedStart = true;\n      }\n\n      if (col.computedLocked === 'end') {\n        hasLockedEnd = true;\n      }\n    }\n\n    col.computedLocked = col.computedLocked || false;\n\n    if (col.id === _defaultRowExpandColumnId.id) {\n      rowExpandColumn = col;\n    }\n\n    if (col.enableColumnHover != null) {\n      col.computedEnableColumnHover = col.enableColumnHover;\n      delete col.enableColumnHover;\n    }\n\n    return col;\n  });\n\n  if (hasLockedStart) {\n    if (rowExpandColumn != null) {\n      rowExpandColumn.computedLocked = 'start';\n    }\n\n    if (checkboxColumn) {\n      var normalizedCheckboxColumn = normalizedColumns.filter(function (c) {\n        return c.checkboxColumn && c.id == _defaultCheckColumnId.id;\n      })[0];\n\n      if (normalizedCheckboxColumn) {\n        normalizedCheckboxColumn.computedLocked = 'start';\n      }\n    }\n\n    if (hasDedicatedGroupColumn) {\n      var normalizedGroupColumn = normalizedColumns.filter(function (c) {\n        return c.groupColumn && c.id == _defaultGroupColumnId.id;\n      })[0];\n\n      if (normalizedGroupColumn) {\n        normalizedGroupColumn.computedLocked = 'start';\n      }\n    }\n\n    var autoLockColumns = normalizedColumns.filter(function (c) {\n      return !!c.autoLock;\n    });\n\n    if (autoLockColumns.length) {\n      autoLockColumns.forEach(function (c) {\n        c.computedLocked = 'start';\n      });\n    }\n\n    if (rowReorderColumn || onRowReorder && (typeof onRowReorder === 'function' || typeof onRowReorder === 'boolean')) {\n      var normalizedRowReorderColumn = normalizedColumns.filter(function (c) {\n        return c.id === _defaultRowReorderColumnId.id;\n      })[0];\n\n      if (normalizedRowReorderColumn) {\n        normalizedRowReorderColumn.computedLocked = 'start';\n      }\n    }\n  }\n\n  var computedEnableRowspan = false;\n  normalizedColumns.forEach(function (col, index) {\n    col.computedAbsoluteIndex = index;\n    addSortInfo(col);\n    addFilterValue(col);\n\n    if (typeof col.rowspan === 'function') {\n      computedEnableRowspan = true;\n    }\n\n    col.computedResizable = (typeof col.resizable !== 'boolean' ? resizable : col.resizable) || false;\n    col.computedLockable = (typeof col.lockable !== 'boolean' ? lockable : col.lockable) || false;\n  });\n  var columnsMap = (0, _mapColumns.default)(normalizedColumns, {\n    showWarnings: true\n  });\n  var visibleColumns = normalizedColumns.filter(function (c) {\n    return c.computedVisible !== false;\n  });\n\n  if (columnOrder) {\n    if (checkboxColumn) {\n      var checkboxColumnIndex = columnOrder.indexOf(_defaultCheckColumnId.id);\n\n      if (checkboxColumnIndex == -1) {\n        columnOrder = [_defaultCheckColumnId.id].concat((0, _toConsumableArray2.default)(columnOrder));\n      }\n    }\n  }\n\n  if (rowExpandColumn) {\n    if (!columnOrder) {\n      columnOrder = visibleColumns.map(function (c) {\n        return c.id;\n      });\n    }\n\n    var rowExpandColumnIndex = columnOrder.indexOf(_defaultRowExpandColumnId.id);\n\n    if (rowExpandColumnIndex !== 0) {\n      columnOrder = [_defaultRowExpandColumnId.id].concat((0, _toConsumableArray2.default)(columnOrder.filter(function (id) {\n        return id != _defaultRowExpandColumnId.id;\n      })));\n    }\n  }\n\n  if (rowReorderColumn || onRowReorder && (typeof onRowReorder === 'function' || typeof onRowReorder === 'boolean')) {\n    if (!columnOrder) {\n      columnOrder = visibleColumns.map(function (c) {\n        return c.id;\n      });\n    }\n\n    var rowReorderColumnIndex = columnOrder.indexOf(_defaultRowReorderColumnId.id);\n\n    if (rowReorderColumnIndex !== 0) {\n      columnOrder = [_defaultRowReorderColumnId.id].concat((0, _toConsumableArray2.default)(columnOrder.filter(function (id) {\n        return id !== _defaultRowReorderColumnId.id;\n      })));\n    }\n  }\n\n  if (rowIndexColumn) {\n    if (!columnOrder) {\n      columnOrder = visibleColumns.map(function (c) {\n        return c.id;\n      });\n    }\n\n    var rowIndexColumnIndex = columnOrder.indexOf(_defaultRowIndexColumnId.id);\n\n    if (rowIndexColumnIndex != 0) {\n      columnOrder = [].concat((0, _toConsumableArray2.default)(columnOrder.filter(function (id) {\n        var col = columnsMap[id];\n        return col && col.groupSpacerColumn;\n      })), [_defaultRowIndexColumnId.id], (0, _toConsumableArray2.default)(columnOrder.filter(function (id) {\n        var col = columnsMap[id];\n\n        if (!col) {\n          return false;\n        }\n\n        return id != _defaultRowIndexColumnId.id && !col.groupSpacerColumn;\n      })));\n    }\n  }\n\n  if (generatedColumnsLength) {\n    if (!columnOrder) {\n      columnOrder = visibleColumns.map(function (c) {\n        return c.id;\n      });\n    }\n\n    var generatedColumns = visibleColumns.filter(function (c) {\n      return c.groupSpacerColumn;\n    });\n    var generatedColumnIds = generatedColumns.reduce(function (acc, col) {\n      acc[col.id] = true;\n      return acc;\n    }, {});\n    columnOrder = [].concat((0, _toConsumableArray2.default)(generatedColumns.map(function (c) {\n      return c.id;\n    })), (0, _toConsumableArray2.default)(columnOrder.filter(function (id) {\n      return !generatedColumnIds[id];\n    })));\n  }\n\n  if (columnOrder) {\n    var groupSpacerColumns = visibleColumns.filter(function (col) {\n      return col.groupSpacerColumn;\n    });\n    var groupColumns = visibleColumns.filter(function (col) {\n      return col.groupColumn && !col.groupSpacerColumn;\n    });\n    var ungroupColumns = visibleColumns.filter(function (col) {\n      return !col.groupColumn && !col.groupSpacerColumn;\n    });\n    visibleColumns = columnOrder.map(function (colId) {\n      return ungroupColumns.find(function (col) {\n        return col.id == colId;\n      });\n    }).filter(function (x) {\n      return !!x;\n    });\n    visibleColumns = [].concat((0, _toConsumableArray2.default)(groupSpacerColumns), (0, _toConsumableArray2.default)(groupColumns), (0, _toConsumableArray2.default)(visibleColumns));\n  }\n\n  if (typeof filter == 'function') {\n    visibleColumns = visibleColumns.filter(filter);\n  }\n\n  normalizedColumns.forEach(function (col) {\n    if (col.groupSummaryReducer) {\n      groupColumnSummaryReducers[col.id] = col.groupSummaryReducer;\n\n      if (!col.groupSummaryReducer.reducer && col.groupSummaryReducer.reduce) {\n        groupColumnSummaryReducers[col.id].reducer = col.groupSummaryReducer.reduce;\n      }\n    }\n  });\n  var groupColumn = visibleColumns.filter(function (col) {\n    return !!col.groupColumn;\n  })[0];\n\n  if (pivot && computedPivotUniqueValuesPerColumn && groupColumn) {\n    var aggregateColumns = visibleColumns.filter(function (col) {\n      return !!col.groupSummaryReducer;\n    });\n    var newColumns = [groupColumn].concat((0, _toConsumableArray2.default)(getPivotColumns(aggregateColumns, computedPivotUniqueValuesPerColumn, columnSizes, pivot, pivotGrandSummaryColumn, showPivotSummaryColumns))).map(function (col) {\n      (0, _setComputedColumnWidths.default)(col, setComputedColumnWidthsParam);\n      col.computedResizable = (typeof col.resizable !== 'boolean' ? resizable : col.resizable) || false;\n      return col;\n    });\n    visibleColumns = newColumns;\n    columnsMap = _objectSpread(_objectSpread({}, columnsMap), (0, _mapColumns.default)(newColumns, {\n      showWarnings: true\n    }));\n  }\n\n  var flexes = [];\n  var maxWidths = [];\n  var minWidths = [];\n  var minColumnsSize = 0;\n  var availableWidthForFlex = availableWidth;\n  visibleColumns.forEach(function (col) {\n    if (col.computedFlex == null) {\n      availableWidthForFlex -= col.computedWidth || col.computedDefaultWidth || col.computedMinWidth || 0;\n    }\n\n    flexes.push(col.computedFlex || 0);\n    maxWidths.push(col.computedMaxWidth || null);\n    minWidths.push(col.computedMinWidth || null);\n  });\n  availableWidthForFlex = Math.max(availableWidthForFlex, 0);\n  var flexWidths = (0, _computeFlexWidths.default)({\n    flexes: flexes,\n    availableSize: availableWidthForFlex,\n    maxWidths: maxWidths,\n    minWidths: minWidths\n  });\n  var totalFlexColumnCount = 0;\n  visibleColumns.forEach(function (col, index) {\n    if (col.computedFlex != null) {\n      col.computedWidth = flexWidths[index] || 0;\n      totalFlexColumnCount++;\n      minColumnsSize += col.minWidth || 0;\n    } else {\n      minColumnsSize += col.computedWidth || 0;\n    }\n  });\n  var unlockedColumns = visibleColumns;\n  var lockedStartColumns = [];\n  var lockedEndColumns = [];\n\n  if (hasLockedStart || hasLockedEnd) {\n    unlockedColumns = groupColumn && hasLockedStart ? visibleColumns.filter(function (col) {\n      return !col.computedLocked && !col.groupColumn;\n    }) : visibleColumns.filter(function (col) {\n      return !col.computedLocked;\n    });\n    lockedStartColumns = hasLockedStart ? visibleColumns.filter(function (col) {\n      return col.computedLocked === 'start' || col.groupColumn;\n    }) : emptyArray;\n    lockedEndColumns = hasLockedEnd ? groupColumn && hasLockedStart ? visibleColumns.filter(function (col) {\n      return col.computedLocked === 'end' && !col.groupColumn;\n    }) : visibleColumns.filter(function (col) {\n      return col.computedLocked === 'end';\n    }) : emptyArray;\n    visibleColumns = [].concat((0, _toConsumableArray2.default)(lockedStartColumns), (0, _toConsumableArray2.default)(unlockedColumns), (0, _toConsumableArray2.default)(lockedEndColumns));\n  }\n\n  var visibleColumnsMap = (0, _mapColumns.default)(visibleColumns, {\n    showWarnings: true\n  });\n  var sumPrefixWidth = 0;\n  var totalLockedStartWidth = 0;\n  var totalLockedEndWidth = 0;\n  var totalUnlockedWidth = 0;\n  var columnWidthPrefixSums = [];\n  var computedHasColSpan = false;\n  visibleColumns.forEach(function (col, index, arr) {\n    col.computedVisibleIndex = index;\n    col.computedVisibleCount = arr.length;\n\n    if (col.colspan) {\n      computedHasColSpan = true;\n    }\n\n    col.computedOffset = sumPrefixWidth;\n    var computedLocked = col.computedLocked,\n        computedWidth = col.computedWidth;\n\n    if (computedLocked === 'start') {\n      totalLockedStartWidth += computedWidth || 0;\n    } else if (computedLocked === 'end') {\n      totalLockedEndWidth += computedWidth || 0;\n    } else {\n      totalUnlockedWidth += computedWidth || 0;\n    }\n\n    addSortInfo(col);\n\n    if (editable && col.editable === undefined) {\n      col.computedEditable = true;\n    }\n\n    if (col.editable !== undefined) {\n      col.computedEditable = col.editable;\n    }\n\n    columnWidthPrefixSums.push(col.computedOffset || 0);\n    sumPrefixWidth += computedWidth || 0;\n  });\n\n  if (pivot) {\n    pivot.forEach(function (pivotCol) {\n      if (typeof pivotCol !== 'string' && pivotCol.summaryReducer) {\n        pivotColumnSummaryReducers[pivotCol.name] = pivotCol.summaryReducer;\n      }\n    });\n  }\n\n  return {\n    pivotColumnSummaryReducers: pivotColumnSummaryReducers,\n    minColumnsSize: minColumnsSize,\n    totalFlexColumnCount: totalFlexColumnCount,\n    groupColumnSummaryReducers: Object.keys(groupColumnSummaryReducers).length ? groupColumnSummaryReducers : undefined,\n    totalComputedWidth: sumPrefixWidth,\n    totalLockedStartWidth: totalLockedStartWidth,\n    totalLockedEndWidth: totalLockedEndWidth,\n    totalUnlockedWidth: totalUnlockedWidth,\n    lockedStartColumns: lockedStartColumns,\n    lockedEndColumns: lockedEndColumns,\n    unlockedColumns: unlockedColumns,\n    columnWidthPrefixSums: columnWidthPrefixSums,\n    columnVisibilityMap: columnVisibilityMap,\n    computedEnableRowspan: computedEnableRowspan,\n    computedHasColSpan: computedHasColSpan,\n    visibleColumns: visibleColumns,\n    allColumns: normalizedColumns,\n    columnsMap: columnsMap,\n    visibleColumnsMap: visibleColumnsMap\n  };\n};\n\nexports.default = _default;\n\nvar getPivotGroupColumnForPath = function getPivotGroupColumnForPath(columnConfig, _ref2) {\n  var pivot = _ref2.pivot,\n      pivotGrandSummaryColumn = _ref2.pivotGrandSummaryColumn;\n  var pivotMap = pivot.reduce(function (acc, p) {\n    if (!p.summaryReducer) {\n      return acc;\n    }\n\n    var col = p ? p.summaryColumn || {} : {};\n    acc[p.name || p] = col;\n    return acc;\n  }, {});\n\n  if (pivotGrandSummaryColumn === true) {\n    pivotGrandSummaryColumn = {};\n  }\n\n  if (pivotGrandSummaryColumn) {\n    pivotGrandSummaryColumn.pivotGrandSummaryColumn = true;\n    pivotGrandSummaryColumn = _objectSpread(_objectSpread({}, defaultPivotGrandSummaryColumn), pivotGrandSummaryColumn);\n  }\n\n  columnConfig = _objectSpread(_objectSpread({}, defaultPivotSummaryColumn), columnConfig);\n  var _columnConfig = columnConfig,\n      pivotSummaryPath = _columnConfig.pivotSummaryPath;\n  var lastItem = pivotSummaryPath[pivotSummaryPath.length - 1];\n  var name = lastItem ? lastItem.field : null;\n  var col = !lastItem ? pivotGrandSummaryColumn : pivotMap[name] || {};\n  var result = columnConfig;\n\n  if (lastItem) {\n    columnConfig.header = \"Summary for \".concat(lastItem.field, \" \").concat(lastItem.value);\n  }\n\n  if (!pivotGrandSummaryColumn && !pivotMap[name]) {\n    return null;\n  }\n\n  if (col) {\n    if (typeof col === 'function') {\n      result = _objectSpread(_objectSpread({}, columnConfig), col(columnConfig));\n    } else {\n      result = _objectSpread(_objectSpread({}, columnConfig), col);\n    }\n  }\n\n  return result;\n};\n\nvar getPivotColumns = function getPivotColumns(aggregateColumns, uniqueValuesRoot, columnSizes, pivot, pivotGrandSummaryColumn, showPivotSummaryColumns) {\n  var parentGroups = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : [];\n  var pivotColumnPath = arguments.length > 7 ? arguments[7] : undefined;\n  var newColumns = [];\n  var field = uniqueValuesRoot.field,\n      values = uniqueValuesRoot.values;\n  var parentGroup = parentGroups[parentGroups.length - 1];\n\n  if (field && values) {\n    Object.keys(values).forEach(function (value) {\n      var groupId = \"\".concat(parentGroup ? parentGroup.name + '_' : '').concat(field, \":\").concat(value);\n      var group = {\n        name: groupId,\n        header: \"\".concat(field, \"-\").concat(value),\n        pivotPath: [{\n          value: value,\n          field: field\n        }]\n      };\n\n      if (parentGroup) {\n        group.group = parentGroup.name;\n        group.pivotPath = [].concat((0, _toConsumableArray2.default)(parentGroup.pivotPath || []), (0, _toConsumableArray2.default)(group.pivotPath));\n      }\n\n      var nextRoot = values[value];\n      pivotColumnPath = pivotColumnPath || [];\n      newColumns.push.apply(newColumns, (0, _toConsumableArray2.default)(getPivotColumns(aggregateColumns, nextRoot, columnSizes, pivot, pivotGrandSummaryColumn, showPivotSummaryColumns, [].concat((0, _toConsumableArray2.default)(parentGroups), [{\n        name: groupId,\n        pivotPath: group.pivotPath,\n        depth: parentGroup ? parentGroup.depth + 1 : 0\n      }]), [].concat((0, _toConsumableArray2.default)(pivotColumnPath), [value]))));\n\n      if (!parentGroup && showPivotSummaryColumns) {\n        var summaryCol = getPivotGroupColumnForPath({\n          header: \"Summary for \".concat(group.header),\n          id: \"__summary_\".concat(group.name),\n          pivotSummaryColumn: true,\n          pivotSummaryPath: group.pivotPath\n        }, {\n          pivot: pivot\n        });\n\n        if (summaryCol) {\n          newColumns.push(summaryCol);\n        }\n      }\n    });\n  } else {\n    newColumns.push.apply(newColumns, (0, _toConsumableArray2.default)(aggregateColumns.map(function (col) {\n      var result = _objectSpread(_objectSpread({}, col), {}, {\n        sortable: false,\n        showInContextMenu: false,\n        draggable: false,\n        pivotColumn: true,\n        pivotColumnPath: [].concat((0, _toConsumableArray2.default)(pivotColumnPath || []), [col.pivotName || col.name || col.id]),\n        id: \"\".concat(parentGroup.name, \"-\").concat(col.id),\n        group: parentGroup.name\n      });\n\n      if (columnSizes[result.id]) {\n        result.computedWidth = columnSizes[result.id];\n      }\n\n      return result;\n    })));\n    var prevParentGroup = parentGroups[parentGroups.length - 2];\n\n    if (showPivotSummaryColumns && prevParentGroup) {\n      var summaryCol = getPivotGroupColumnForPath({\n        group: prevParentGroup ? prevParentGroup.name : undefined,\n        header: \"Summary for \".concat(parentGroup.name, \" - \").concat(prevParentGroup ? prevParentGroup.name : ''),\n        id: \"__summary__\".concat(parentGroup.name),\n        pivotSummaryPath: parentGroup.pivotPath,\n        pivotSummaryColumn: true\n      }, {\n        pivot: pivot\n      });\n\n      if (summaryCol) {\n        newColumns.push(summaryCol);\n      }\n    }\n  }\n\n  if (!parentGroup && pivotGrandSummaryColumn && showPivotSummaryColumns) {\n    newColumns.push(getPivotGroupColumnForPath({\n      header: \"Grand summary\",\n      id: \"__summary__grand\",\n      pivotSummaryColumn: true,\n      pivotSummaryPath: []\n    }, {\n      pivot: pivot,\n      pivotGrandSummaryColumn: pivotGrandSummaryColumn\n    }));\n  }\n\n  return newColumns;\n};","map":{"version":3,"sources":["/Users/sungjaejoo/Desktop/ááµáá¢á¨áá³/ááµá«áá¥áá©áá¥/ILP-main/node_modules/@inovua/reactdatagrid-community/normalizeColumns/index.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_toConsumableArray2","_defineProperty2","_setColumnId","_computeFlexWidths","_mapColumns","_defaultCheckColumnId","_defaultRowExpandColumnId","_defaultRowIndexColumnId","_defaultGroupColumnId","_defaultRowReorderColumnId","_setComputedColumnWidths","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","DEFAULT_COLUMN_PROPS","isColumn","keepFlex","defaultPivotGrandSummaryColumn","sortable","draggable","filterable","defaultPivotSummaryColumn","emptyArray","emptyObject","freeze","_default","_ref","_ref$generatedColumns","generatedColumnsLength","columns","columnMinWidth","columnMaxWidth","columnDefaultWidth","columnWidth","_ref$columnSizes","columnSizes","_ref$columnVisibility","columnVisibilityMap","_ref$columnFlexes","columnFlexes","_ref$lockedColumnsSta","lockedColumnsState","columnOrder","computedPivotUniqueValuesPerColumn","editable","pivot","resizable","pivotGrandSummaryColumn","lockable","checkboxColumn","rowIndexColumn","rtl","filterValueMap","sortInfo","showPivotSummaryColumns","_ref$availableWidth","availableWidth","onRowReorder","rowReorderColumn","groupColumnSummaryReducers","pivotColumnSummaryReducers","addSortInfo","col","computedSortable","computedSortInfo","Array","isArray","info","name","id","sortName","addFilterValue","computedFilterable","undefined","computedFilterValue","hasLockedStart","hasLockedEnd","rowExpandColumn","setComputedColumnWidthsParam","hasDedicatedGroupColumn","normalizedColumns","map","column","computedInitialIndex","computedVisible","visible","groupSummaryReducer","computedHeader","header","computedLocked","locked","defaultLocked","enableColumnHover","computedEnableColumnHover","normalizedCheckboxColumn","c","normalizedGroupColumn","groupColumn","autoLockColumns","autoLock","normalizedRowReorderColumn","computedEnableRowspan","index","computedAbsoluteIndex","rowspan","computedResizable","computedLockable","columnsMap","showWarnings","visibleColumns","checkboxColumnIndex","indexOf","concat","rowExpandColumnIndex","rowReorderColumnIndex","rowIndexColumnIndex","groupSpacerColumn","generatedColumns","generatedColumnIds","reduce","acc","groupSpacerColumns","groupColumns","ungroupColumns","colId","find","x","reducer","aggregateColumns","newColumns","getPivotColumns","flexes","maxWidths","minWidths","minColumnsSize","availableWidthForFlex","computedFlex","computedWidth","computedDefaultWidth","computedMinWidth","computedMaxWidth","Math","max","flexWidths","availableSize","totalFlexColumnCount","minWidth","unlockedColumns","lockedStartColumns","lockedEndColumns","visibleColumnsMap","sumPrefixWidth","totalLockedStartWidth","totalLockedEndWidth","totalUnlockedWidth","columnWidthPrefixSums","computedHasColSpan","arr","computedVisibleIndex","computedVisibleCount","colspan","computedOffset","computedEditable","pivotCol","summaryReducer","totalComputedWidth","allColumns","getPivotGroupColumnForPath","columnConfig","_ref2","pivotMap","p","summaryColumn","_columnConfig","pivotSummaryPath","lastItem","field","result","uniqueValuesRoot","parentGroups","pivotColumnPath","values","parentGroup","groupId","group","pivotPath","nextRoot","depth","summaryCol","pivotSummaryColumn","showInContextMenu","pivotColumn","pivotName","prevParentGroup"],"mappings":"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","sourcesContent":["/** \n * Copyright Â© INOVUA TRADING.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _setColumnId = _interopRequireDefault(require(\"../setColumnId\"));\n\nvar _computeFlexWidths = _interopRequireDefault(require(\"../utils/flex/computeFlexWidths\"));\n\nvar _mapColumns = _interopRequireDefault(require(\"../mapColumns\"));\n\nvar _defaultCheckColumnId = require(\"./defaultCheckColumnId\");\n\nvar _defaultRowExpandColumnId = require(\"./defaultRowExpandColumnId\");\n\nvar _defaultRowIndexColumnId = require(\"./defaultRowIndexColumnId\");\n\nvar _defaultGroupColumnId = require(\"./defaultGroupColumnId\");\n\nvar _defaultRowReorderColumnId = require(\"./defaultRowReorderColumnId\");\n\nvar _setComputedColumnWidths = _interopRequireDefault(require(\"./setComputedColumnWidths\"));\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nvar DEFAULT_COLUMN_PROPS = {\n  isColumn: true,\n  keepFlex: true\n};\nvar defaultPivotGrandSummaryColumn = {\n  sortable: false,\n  draggable: false,\n  filterable: false\n};\nvar defaultPivotSummaryColumn = defaultPivotGrandSummaryColumn;\nvar emptyArray = [];\nvar emptyObject = Object.freeze ? Object.freeze({}) : {};\n\nvar _default = function _default(_ref) {\n  var _ref$generatedColumns = _ref.generatedColumnsLength,\n      generatedColumnsLength = _ref$generatedColumns === void 0 ? 0 : _ref$generatedColumns,\n      columns = _ref.columns,\n      columnMinWidth = _ref.columnMinWidth,\n      columnMaxWidth = _ref.columnMaxWidth,\n      columnDefaultWidth = _ref.columnDefaultWidth,\n      columnWidth = _ref.columnWidth,\n      _ref$columnSizes = _ref.columnSizes,\n      columnSizes = _ref$columnSizes === void 0 ? emptyObject : _ref$columnSizes,\n      _ref$columnVisibility = _ref.columnVisibilityMap,\n      columnVisibilityMap = _ref$columnVisibility === void 0 ? emptyObject : _ref$columnVisibility,\n      _ref$columnFlexes = _ref.columnFlexes,\n      columnFlexes = _ref$columnFlexes === void 0 ? emptyObject : _ref$columnFlexes,\n      _ref$lockedColumnsSta = _ref.lockedColumnsState,\n      lockedColumnsState = _ref$lockedColumnsSta === void 0 ? emptyObject : _ref$lockedColumnsSta,\n      columnOrder = _ref.columnOrder,\n      computedPivotUniqueValuesPerColumn = _ref.computedPivotUniqueValuesPerColumn,\n      editable = _ref.editable,\n      pivot = _ref.pivot,\n      sortable = _ref.sortable,\n      filterable = _ref.filterable,\n      resizable = _ref.resizable,\n      pivotGrandSummaryColumn = _ref.pivotGrandSummaryColumn,\n      lockable = _ref.lockable,\n      checkboxColumn = _ref.checkboxColumn,\n      rowIndexColumn = _ref.rowIndexColumn,\n      filter = _ref.filter,\n      rtl = _ref.rtl,\n      filterValueMap = _ref.filterValueMap,\n      sortInfo = _ref.sortInfo,\n      showPivotSummaryColumns = _ref.showPivotSummaryColumns,\n      _ref$availableWidth = _ref.availableWidth,\n      availableWidth = _ref$availableWidth === void 0 ? 0 : _ref$availableWidth,\n      onRowReorder = _ref.onRowReorder,\n      rowReorderColumn = _ref.rowReorderColumn;\n\n  if (columnVisibilityMap) {\n    columnVisibilityMap = _objectSpread({}, columnVisibilityMap);\n  }\n\n  var groupColumnSummaryReducers = {};\n  var pivotColumnSummaryReducers = {};\n\n  var addSortInfo = function addSortInfo(col) {\n    col.computedSortable = (typeof col.sortable === 'boolean' ? col.sortable : sortable) || false;\n    col.computedSortInfo = null;\n\n    if (col.computedSortable && sortInfo) {\n      col.computedSortInfo = Array.isArray(sortInfo) ? sortInfo.filter(function (info) {\n        return info.name === col.id || info.id === col.id || info.name === col.sortName;\n      })[0] : sortInfo.name === col.id || sortInfo.id === col.id || sortInfo.name === col.sortName ? sortInfo : null;\n    }\n  };\n\n  var addFilterValue = function addFilterValue(col) {\n    col.computedFilterable = (typeof col.filterable === 'boolean' ? col.filterable : filterable) || undefined;\n    col.computedFilterValue = null;\n\n    if (col.computedFilterable && filterValueMap) {\n      col.computedFilterValue = filterValueMap[col.id];\n    }\n\n    if (col.computedFilterable === undefined && col.computedFilterValue) {\n      col.computedFilterable = true;\n    }\n\n    col.computedFilterable = !!col.computedFilterable;\n  };\n\n  var hasLockedStart = false;\n  var hasLockedEnd = false;\n  var rowExpandColumn;\n  var setComputedColumnWidthsParam = {\n    columnFlexes: columnFlexes,\n    columnSizes: columnSizes,\n    columnDefaultWidth: columnDefaultWidth,\n    columnWidth: columnWidth,\n    columnMinWidth: columnMinWidth,\n    columnMaxWidth: columnMaxWidth\n  };\n  var hasDedicatedGroupColumn = false;\n  var normalizedColumns = columns.map(function (column) {\n    return _objectSpread(_objectSpread({}, DEFAULT_COLUMN_PROPS), column);\n  }).map(_setColumnId.default).map(function (col, i) {\n    col.computedInitialIndex = i - generatedColumnsLength;\n    (0, _setComputedColumnWidths.default)(col, setComputedColumnWidthsParam);\n    col.computedVisible = col.visible !== undefined ? !!col.visible : columnVisibilityMap[col.id] === false ? false : true;\n\n    if (col.computedVisible && pivot && !col.groupSummaryReducer && col.id !== _defaultGroupColumnId.id) {\n      col.computedVisible = false;\n    }\n\n    if (col.computedVisible === false) {\n      columnVisibilityMap[col.id] = false;\n    } else {\n      delete columnVisibilityMap[col.id];\n\n      if (col.id === _defaultGroupColumnId.id) {\n        hasDedicatedGroupColumn = true;\n      }\n    }\n\n    col.computedHeader = col.header === undefined ? col.name || '' : col.header;\n    col.computedLocked = col.locked;\n\n    if (col.computedLocked === undefined && lockedColumnsState[col.id] !== undefined) {\n      col.computedLocked = lockedColumnsState[col.id];\n    }\n\n    if (col.computedLocked === undefined && col.defaultLocked !== undefined) {\n      col.computedLocked = col.defaultLocked;\n    }\n\n    if (!filter || filter(col)) {\n      if (col.computedLocked === true || col.computedLocked === 'start') {\n        col.computedLocked = 'start';\n        hasLockedStart = true;\n      }\n\n      if (col.computedLocked === 'end') {\n        hasLockedEnd = true;\n      }\n    }\n\n    col.computedLocked = col.computedLocked || false;\n\n    if (col.id === _defaultRowExpandColumnId.id) {\n      rowExpandColumn = col;\n    }\n\n    if (col.enableColumnHover != null) {\n      col.computedEnableColumnHover = col.enableColumnHover;\n      delete col.enableColumnHover;\n    }\n\n    return col;\n  });\n\n  if (hasLockedStart) {\n    if (rowExpandColumn != null) {\n      rowExpandColumn.computedLocked = 'start';\n    }\n\n    if (checkboxColumn) {\n      var normalizedCheckboxColumn = normalizedColumns.filter(function (c) {\n        return c.checkboxColumn && c.id == _defaultCheckColumnId.id;\n      })[0];\n\n      if (normalizedCheckboxColumn) {\n        normalizedCheckboxColumn.computedLocked = 'start';\n      }\n    }\n\n    if (hasDedicatedGroupColumn) {\n      var normalizedGroupColumn = normalizedColumns.filter(function (c) {\n        return c.groupColumn && c.id == _defaultGroupColumnId.id;\n      })[0];\n\n      if (normalizedGroupColumn) {\n        normalizedGroupColumn.computedLocked = 'start';\n      }\n    }\n\n    var autoLockColumns = normalizedColumns.filter(function (c) {\n      return !!c.autoLock;\n    });\n\n    if (autoLockColumns.length) {\n      autoLockColumns.forEach(function (c) {\n        c.computedLocked = 'start';\n      });\n    }\n\n    if (rowReorderColumn || onRowReorder && (typeof onRowReorder === 'function' || typeof onRowReorder === 'boolean')) {\n      var normalizedRowReorderColumn = normalizedColumns.filter(function (c) {\n        return c.id === _defaultRowReorderColumnId.id;\n      })[0];\n\n      if (normalizedRowReorderColumn) {\n        normalizedRowReorderColumn.computedLocked = 'start';\n      }\n    }\n  }\n\n  var computedEnableRowspan = false;\n  normalizedColumns.forEach(function (col, index) {\n    col.computedAbsoluteIndex = index;\n    addSortInfo(col);\n    addFilterValue(col);\n\n    if (typeof col.rowspan === 'function') {\n      computedEnableRowspan = true;\n    }\n\n    col.computedResizable = (typeof col.resizable !== 'boolean' ? resizable : col.resizable) || false;\n    col.computedLockable = (typeof col.lockable !== 'boolean' ? lockable : col.lockable) || false;\n  });\n  var columnsMap = (0, _mapColumns.default)(normalizedColumns, {\n    showWarnings: true\n  });\n  var visibleColumns = normalizedColumns.filter(function (c) {\n    return c.computedVisible !== false;\n  });\n\n  if (columnOrder) {\n    if (checkboxColumn) {\n      var checkboxColumnIndex = columnOrder.indexOf(_defaultCheckColumnId.id);\n\n      if (checkboxColumnIndex == -1) {\n        columnOrder = [_defaultCheckColumnId.id].concat((0, _toConsumableArray2.default)(columnOrder));\n      }\n    }\n  }\n\n  if (rowExpandColumn) {\n    if (!columnOrder) {\n      columnOrder = visibleColumns.map(function (c) {\n        return c.id;\n      });\n    }\n\n    var rowExpandColumnIndex = columnOrder.indexOf(_defaultRowExpandColumnId.id);\n\n    if (rowExpandColumnIndex !== 0) {\n      columnOrder = [_defaultRowExpandColumnId.id].concat((0, _toConsumableArray2.default)(columnOrder.filter(function (id) {\n        return id != _defaultRowExpandColumnId.id;\n      })));\n    }\n  }\n\n  if (rowReorderColumn || onRowReorder && (typeof onRowReorder === 'function' || typeof onRowReorder === 'boolean')) {\n    if (!columnOrder) {\n      columnOrder = visibleColumns.map(function (c) {\n        return c.id;\n      });\n    }\n\n    var rowReorderColumnIndex = columnOrder.indexOf(_defaultRowReorderColumnId.id);\n\n    if (rowReorderColumnIndex !== 0) {\n      columnOrder = [_defaultRowReorderColumnId.id].concat((0, _toConsumableArray2.default)(columnOrder.filter(function (id) {\n        return id !== _defaultRowReorderColumnId.id;\n      })));\n    }\n  }\n\n  if (rowIndexColumn) {\n    if (!columnOrder) {\n      columnOrder = visibleColumns.map(function (c) {\n        return c.id;\n      });\n    }\n\n    var rowIndexColumnIndex = columnOrder.indexOf(_defaultRowIndexColumnId.id);\n\n    if (rowIndexColumnIndex != 0) {\n      columnOrder = [].concat((0, _toConsumableArray2.default)(columnOrder.filter(function (id) {\n        var col = columnsMap[id];\n        return col && col.groupSpacerColumn;\n      })), [_defaultRowIndexColumnId.id], (0, _toConsumableArray2.default)(columnOrder.filter(function (id) {\n        var col = columnsMap[id];\n\n        if (!col) {\n          return false;\n        }\n\n        return id != _defaultRowIndexColumnId.id && !col.groupSpacerColumn;\n      })));\n    }\n  }\n\n  if (generatedColumnsLength) {\n    if (!columnOrder) {\n      columnOrder = visibleColumns.map(function (c) {\n        return c.id;\n      });\n    }\n\n    var generatedColumns = visibleColumns.filter(function (c) {\n      return c.groupSpacerColumn;\n    });\n    var generatedColumnIds = generatedColumns.reduce(function (acc, col) {\n      acc[col.id] = true;\n      return acc;\n    }, {});\n    columnOrder = [].concat((0, _toConsumableArray2.default)(generatedColumns.map(function (c) {\n      return c.id;\n    })), (0, _toConsumableArray2.default)(columnOrder.filter(function (id) {\n      return !generatedColumnIds[id];\n    })));\n  }\n\n  if (columnOrder) {\n    var groupSpacerColumns = visibleColumns.filter(function (col) {\n      return col.groupSpacerColumn;\n    });\n    var groupColumns = visibleColumns.filter(function (col) {\n      return col.groupColumn && !col.groupSpacerColumn;\n    });\n    var ungroupColumns = visibleColumns.filter(function (col) {\n      return !col.groupColumn && !col.groupSpacerColumn;\n    });\n    visibleColumns = columnOrder.map(function (colId) {\n      return ungroupColumns.find(function (col) {\n        return col.id == colId;\n      });\n    }).filter(function (x) {\n      return !!x;\n    });\n    visibleColumns = [].concat((0, _toConsumableArray2.default)(groupSpacerColumns), (0, _toConsumableArray2.default)(groupColumns), (0, _toConsumableArray2.default)(visibleColumns));\n  }\n\n  if (typeof filter == 'function') {\n    visibleColumns = visibleColumns.filter(filter);\n  }\n\n  normalizedColumns.forEach(function (col) {\n    if (col.groupSummaryReducer) {\n      groupColumnSummaryReducers[col.id] = col.groupSummaryReducer;\n\n      if (!col.groupSummaryReducer.reducer && col.groupSummaryReducer.reduce) {\n        groupColumnSummaryReducers[col.id].reducer = col.groupSummaryReducer.reduce;\n      }\n    }\n  });\n  var groupColumn = visibleColumns.filter(function (col) {\n    return !!col.groupColumn;\n  })[0];\n\n  if (pivot && computedPivotUniqueValuesPerColumn && groupColumn) {\n    var aggregateColumns = visibleColumns.filter(function (col) {\n      return !!col.groupSummaryReducer;\n    });\n    var newColumns = [groupColumn].concat((0, _toConsumableArray2.default)(getPivotColumns(aggregateColumns, computedPivotUniqueValuesPerColumn, columnSizes, pivot, pivotGrandSummaryColumn, showPivotSummaryColumns))).map(function (col) {\n      (0, _setComputedColumnWidths.default)(col, setComputedColumnWidthsParam);\n      col.computedResizable = (typeof col.resizable !== 'boolean' ? resizable : col.resizable) || false;\n      return col;\n    });\n    visibleColumns = newColumns;\n    columnsMap = _objectSpread(_objectSpread({}, columnsMap), (0, _mapColumns.default)(newColumns, {\n      showWarnings: true\n    }));\n  }\n\n  var flexes = [];\n  var maxWidths = [];\n  var minWidths = [];\n  var minColumnsSize = 0;\n  var availableWidthForFlex = availableWidth;\n  visibleColumns.forEach(function (col) {\n    if (col.computedFlex == null) {\n      availableWidthForFlex -= col.computedWidth || col.computedDefaultWidth || col.computedMinWidth || 0;\n    }\n\n    flexes.push(col.computedFlex || 0);\n    maxWidths.push(col.computedMaxWidth || null);\n    minWidths.push(col.computedMinWidth || null);\n  });\n  availableWidthForFlex = Math.max(availableWidthForFlex, 0);\n  var flexWidths = (0, _computeFlexWidths.default)({\n    flexes: flexes,\n    availableSize: availableWidthForFlex,\n    maxWidths: maxWidths,\n    minWidths: minWidths\n  });\n  var totalFlexColumnCount = 0;\n  visibleColumns.forEach(function (col, index) {\n    if (col.computedFlex != null) {\n      col.computedWidth = flexWidths[index] || 0;\n      totalFlexColumnCount++;\n      minColumnsSize += col.minWidth || 0;\n    } else {\n      minColumnsSize += col.computedWidth || 0;\n    }\n  });\n  var unlockedColumns = visibleColumns;\n  var lockedStartColumns = [];\n  var lockedEndColumns = [];\n\n  if (hasLockedStart || hasLockedEnd) {\n    unlockedColumns = groupColumn && hasLockedStart ? visibleColumns.filter(function (col) {\n      return !col.computedLocked && !col.groupColumn;\n    }) : visibleColumns.filter(function (col) {\n      return !col.computedLocked;\n    });\n    lockedStartColumns = hasLockedStart ? visibleColumns.filter(function (col) {\n      return col.computedLocked === 'start' || col.groupColumn;\n    }) : emptyArray;\n    lockedEndColumns = hasLockedEnd ? groupColumn && hasLockedStart ? visibleColumns.filter(function (col) {\n      return col.computedLocked === 'end' && !col.groupColumn;\n    }) : visibleColumns.filter(function (col) {\n      return col.computedLocked === 'end';\n    }) : emptyArray;\n    visibleColumns = [].concat((0, _toConsumableArray2.default)(lockedStartColumns), (0, _toConsumableArray2.default)(unlockedColumns), (0, _toConsumableArray2.default)(lockedEndColumns));\n  }\n\n  var visibleColumnsMap = (0, _mapColumns.default)(visibleColumns, {\n    showWarnings: true\n  });\n  var sumPrefixWidth = 0;\n  var totalLockedStartWidth = 0;\n  var totalLockedEndWidth = 0;\n  var totalUnlockedWidth = 0;\n  var columnWidthPrefixSums = [];\n  var computedHasColSpan = false;\n  visibleColumns.forEach(function (col, index, arr) {\n    col.computedVisibleIndex = index;\n    col.computedVisibleCount = arr.length;\n\n    if (col.colspan) {\n      computedHasColSpan = true;\n    }\n\n    col.computedOffset = sumPrefixWidth;\n    var computedLocked = col.computedLocked,\n        computedWidth = col.computedWidth;\n\n    if (computedLocked === 'start') {\n      totalLockedStartWidth += computedWidth || 0;\n    } else if (computedLocked === 'end') {\n      totalLockedEndWidth += computedWidth || 0;\n    } else {\n      totalUnlockedWidth += computedWidth || 0;\n    }\n\n    addSortInfo(col);\n\n    if (editable && col.editable === undefined) {\n      col.computedEditable = true;\n    }\n\n    if (col.editable !== undefined) {\n      col.computedEditable = col.editable;\n    }\n\n    columnWidthPrefixSums.push(col.computedOffset || 0);\n    sumPrefixWidth += computedWidth || 0;\n  });\n\n  if (pivot) {\n    pivot.forEach(function (pivotCol) {\n      if (typeof pivotCol !== 'string' && pivotCol.summaryReducer) {\n        pivotColumnSummaryReducers[pivotCol.name] = pivotCol.summaryReducer;\n      }\n    });\n  }\n\n  return {\n    pivotColumnSummaryReducers: pivotColumnSummaryReducers,\n    minColumnsSize: minColumnsSize,\n    totalFlexColumnCount: totalFlexColumnCount,\n    groupColumnSummaryReducers: Object.keys(groupColumnSummaryReducers).length ? groupColumnSummaryReducers : undefined,\n    totalComputedWidth: sumPrefixWidth,\n    totalLockedStartWidth: totalLockedStartWidth,\n    totalLockedEndWidth: totalLockedEndWidth,\n    totalUnlockedWidth: totalUnlockedWidth,\n    lockedStartColumns: lockedStartColumns,\n    lockedEndColumns: lockedEndColumns,\n    unlockedColumns: unlockedColumns,\n    columnWidthPrefixSums: columnWidthPrefixSums,\n    columnVisibilityMap: columnVisibilityMap,\n    computedEnableRowspan: computedEnableRowspan,\n    computedHasColSpan: computedHasColSpan,\n    visibleColumns: visibleColumns,\n    allColumns: normalizedColumns,\n    columnsMap: columnsMap,\n    visibleColumnsMap: visibleColumnsMap\n  };\n};\n\nexports.default = _default;\n\nvar getPivotGroupColumnForPath = function getPivotGroupColumnForPath(columnConfig, _ref2) {\n  var pivot = _ref2.pivot,\n      pivotGrandSummaryColumn = _ref2.pivotGrandSummaryColumn;\n  var pivotMap = pivot.reduce(function (acc, p) {\n    if (!p.summaryReducer) {\n      return acc;\n    }\n\n    var col = p ? p.summaryColumn || {} : {};\n    acc[p.name || p] = col;\n    return acc;\n  }, {});\n\n  if (pivotGrandSummaryColumn === true) {\n    pivotGrandSummaryColumn = {};\n  }\n\n  if (pivotGrandSummaryColumn) {\n    pivotGrandSummaryColumn.pivotGrandSummaryColumn = true;\n    pivotGrandSummaryColumn = _objectSpread(_objectSpread({}, defaultPivotGrandSummaryColumn), pivotGrandSummaryColumn);\n  }\n\n  columnConfig = _objectSpread(_objectSpread({}, defaultPivotSummaryColumn), columnConfig);\n  var _columnConfig = columnConfig,\n      pivotSummaryPath = _columnConfig.pivotSummaryPath;\n  var lastItem = pivotSummaryPath[pivotSummaryPath.length - 1];\n  var name = lastItem ? lastItem.field : null;\n  var col = !lastItem ? pivotGrandSummaryColumn : pivotMap[name] || {};\n  var result = columnConfig;\n\n  if (lastItem) {\n    columnConfig.header = \"Summary for \".concat(lastItem.field, \" \").concat(lastItem.value);\n  }\n\n  if (!pivotGrandSummaryColumn && !pivotMap[name]) {\n    return null;\n  }\n\n  if (col) {\n    if (typeof col === 'function') {\n      result = _objectSpread(_objectSpread({}, columnConfig), col(columnConfig));\n    } else {\n      result = _objectSpread(_objectSpread({}, columnConfig), col);\n    }\n  }\n\n  return result;\n};\n\nvar getPivotColumns = function getPivotColumns(aggregateColumns, uniqueValuesRoot, columnSizes, pivot, pivotGrandSummaryColumn, showPivotSummaryColumns) {\n  var parentGroups = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : [];\n  var pivotColumnPath = arguments.length > 7 ? arguments[7] : undefined;\n  var newColumns = [];\n  var field = uniqueValuesRoot.field,\n      values = uniqueValuesRoot.values;\n  var parentGroup = parentGroups[parentGroups.length - 1];\n\n  if (field && values) {\n    Object.keys(values).forEach(function (value) {\n      var groupId = \"\".concat(parentGroup ? parentGroup.name + '_' : '').concat(field, \":\").concat(value);\n      var group = {\n        name: groupId,\n        header: \"\".concat(field, \"-\").concat(value),\n        pivotPath: [{\n          value: value,\n          field: field\n        }]\n      };\n\n      if (parentGroup) {\n        group.group = parentGroup.name;\n        group.pivotPath = [].concat((0, _toConsumableArray2.default)(parentGroup.pivotPath || []), (0, _toConsumableArray2.default)(group.pivotPath));\n      }\n\n      var nextRoot = values[value];\n      pivotColumnPath = pivotColumnPath || [];\n      newColumns.push.apply(newColumns, (0, _toConsumableArray2.default)(getPivotColumns(aggregateColumns, nextRoot, columnSizes, pivot, pivotGrandSummaryColumn, showPivotSummaryColumns, [].concat((0, _toConsumableArray2.default)(parentGroups), [{\n        name: groupId,\n        pivotPath: group.pivotPath,\n        depth: parentGroup ? parentGroup.depth + 1 : 0\n      }]), [].concat((0, _toConsumableArray2.default)(pivotColumnPath), [value]))));\n\n      if (!parentGroup && showPivotSummaryColumns) {\n        var summaryCol = getPivotGroupColumnForPath({\n          header: \"Summary for \".concat(group.header),\n          id: \"__summary_\".concat(group.name),\n          pivotSummaryColumn: true,\n          pivotSummaryPath: group.pivotPath\n        }, {\n          pivot: pivot\n        });\n\n        if (summaryCol) {\n          newColumns.push(summaryCol);\n        }\n      }\n    });\n  } else {\n    newColumns.push.apply(newColumns, (0, _toConsumableArray2.default)(aggregateColumns.map(function (col) {\n      var result = _objectSpread(_objectSpread({}, col), {}, {\n        sortable: false,\n        showInContextMenu: false,\n        draggable: false,\n        pivotColumn: true,\n        pivotColumnPath: [].concat((0, _toConsumableArray2.default)(pivotColumnPath || []), [col.pivotName || col.name || col.id]),\n        id: \"\".concat(parentGroup.name, \"-\").concat(col.id),\n        group: parentGroup.name\n      });\n\n      if (columnSizes[result.id]) {\n        result.computedWidth = columnSizes[result.id];\n      }\n\n      return result;\n    })));\n    var prevParentGroup = parentGroups[parentGroups.length - 2];\n\n    if (showPivotSummaryColumns && prevParentGroup) {\n      var summaryCol = getPivotGroupColumnForPath({\n        group: prevParentGroup ? prevParentGroup.name : undefined,\n        header: \"Summary for \".concat(parentGroup.name, \" - \").concat(prevParentGroup ? prevParentGroup.name : ''),\n        id: \"__summary__\".concat(parentGroup.name),\n        pivotSummaryPath: parentGroup.pivotPath,\n        pivotSummaryColumn: true\n      }, {\n        pivot: pivot\n      });\n\n      if (summaryCol) {\n        newColumns.push(summaryCol);\n      }\n    }\n  }\n\n  if (!parentGroup && pivotGrandSummaryColumn && showPivotSummaryColumns) {\n    newColumns.push(getPivotGroupColumnForPath({\n      header: \"Grand summary\",\n      id: \"__summary__grand\",\n      pivotSummaryColumn: true,\n      pivotSummaryPath: []\n    }, {\n      pivot: pivot,\n      pivotGrandSummaryColumn: pivotGrandSummaryColumn\n    }));\n  }\n\n  return newColumns;\n};"]},"metadata":{},"sourceType":"script"}