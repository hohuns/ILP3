{"ast":null,"code":"import React,{useRef}from\"react\";import\"./AddNote.css\";import{useAppSelector}from\"../../store/hooks\";function AddNoteKr(props){var titleRef=useRef(null);var textRef=useRef(null);var now=new Date();var reduxUserInfo=useAppSelector(function(state){return state.user;});function submitHandler(event){var _titleRef$current,_textRef$current;var temp=(_titleRef$current=titleRef.current)===null||_titleRef$current===void 0?void 0:_titleRef$current.value;var temp2=(_textRef$current=textRef.current)===null||_textRef$current===void 0?void 0:_textRef$current.value;if(temp&&temp2){var _titleRef$current2,_textRef$current2;event.preventDefault();var _notes={title:(_titleRef$current2=titleRef.current)===null||_titleRef$current2===void 0?void 0:_titleRef$current2.value,text:(_textRef$current2=textRef.current)===null||_textRef$current2===void 0?void 0:_textRef$current2.value,date:now.toLocaleString(),logger:reduxUserInfo};console.log(_notes);props.AddNote(_notes);props.setIsbuttonPressed(false);titleRef.current.value=\"\";textRef.current.value=\"\";}else{alert(\"제목과 내용을 모두 입력해주세요.\");}console.log({temp:temp,temp2:temp2});}return/*#__PURE__*/React.createElement(\"form\",{onSubmit:submitHandler},/*#__PURE__*/React.createElement(\"div\",{className:\"control\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"title\"},\"\\uC81C\\uBAA9\"),/*#__PURE__*/React.createElement(\"input\",{type:\"text\",id:\"title\",ref:titleRef,style:{color:\"white\"},placeholder:\"\\uC81C\\uBAA9\\uC744 \\uC785\\uB825\\uD558\\uC2DC\\uC624.\"})),/*#__PURE__*/React.createElement(\"div\",{className:\"control\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"text-log\"},\"\\uB0B4\\uC6A9\"),/*#__PURE__*/React.createElement(\"textarea\",{rows:5,id:\"text-log\",ref:textRef,style:{color:\"white\"},placeholder:\"\\uB0A8\\uAE30\\uACE0 \\uC2F6\\uC740 \\uB9D0\\uC744 \\uC801\\uC73C\\uC2DC\\uC624..\"})),/*#__PURE__*/React.createElement(\"button\",null,\"\\uC81C\\uCD9C\"));}export default AddNoteKr;","map":{"version":3,"sources":["/Users/sungjaejoo/Desktop/ILP-main/src/components/MessageLogForm/AddNoteKr.tsx"],"names":["React","useRef","useAppSelector","AddNoteKr","props","titleRef","textRef","now","Date","reduxUserInfo","state","user","submitHandler","event","temp","current","value","temp2","preventDefault","notes","title","text","date","toLocaleString","logger","console","log","AddNote","setIsbuttonPressed","alert","color"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,MAAhB,KAA8B,OAA9B,CACA,MAAO,eAAP,CACA,OAASC,cAAT,KAA+C,mBAA/C,CAeA,QAASC,CAAAA,SAAT,CAAmBC,KAAnB,CAA0C,CACxC,GAAMC,CAAAA,QAAQ,CAAGJ,MAAM,CAAmB,IAAnB,CAAvB,CACA,GAAMK,CAAAA,OAAO,CAAGL,MAAM,CAAsB,IAAtB,CAAtB,CACA,GAAMM,CAAAA,GAAG,CAAG,GAAIC,CAAAA,IAAJ,EAAZ,CACA,GAAMC,CAAAA,aAAa,CAAGP,cAAc,CAAC,SAACQ,KAAD,QAAWA,CAAAA,KAAK,CAACC,IAAjB,EAAD,CAApC,CAEA,QAASC,CAAAA,aAAT,CAAuBC,KAAvB,CAA+C,wCAC7C,GAAIC,CAAAA,IAAI,oBAAGT,QAAQ,CAACU,OAAZ,4CAAG,kBAAkBC,KAA7B,CACA,GAAIC,CAAAA,KAAK,mBAAGX,OAAO,CAACS,OAAX,2CAAG,iBAAiBC,KAA7B,CACA,GAAIF,IAAI,EAAIG,KAAZ,CAAmB,0CACjBJ,KAAK,CAACK,cAAN,GACA,GAAMC,CAAAA,MAAK,CAAG,CACZC,KAAK,qBAAEf,QAAQ,CAACU,OAAX,6CAAE,mBAAkBC,KADb,CAEZK,IAAI,oBAAEf,OAAO,CAACS,OAAV,4CAAE,kBAAiBC,KAFX,CAGZM,IAAI,CAAEf,GAAG,CAACgB,cAAJ,EAHM,CAIZC,MAAM,CAAEf,aAJI,CAAd,CAOAgB,OAAO,CAACC,GAAR,CAAYP,MAAZ,EACAf,KAAK,CAACuB,OAAN,CAAcR,MAAd,EACAf,KAAK,CAACwB,kBAAN,CAAyB,KAAzB,EACAvB,QAAQ,CAACU,OAAT,CAAkBC,KAAlB,CAA0B,EAA1B,CACAV,OAAO,CAACS,OAAR,CAAiBC,KAAjB,CAAyB,EAAzB,CACD,CAdD,IAcO,CACLa,KAAK,CAAC,oBAAD,CAAL,CACD,CACDJ,OAAO,CAACC,GAAR,CAAY,CAAEZ,IAAI,CAAJA,IAAF,CAAQG,KAAK,CAALA,KAAR,CAAZ,EACD,CAED,mBACE,4BAAM,QAAQ,CAAEL,aAAhB,eACE,2BAAK,SAAS,CAAC,SAAf,eACE,6BAAO,OAAO,CAAC,OAAf,iBADF,cAEE,6BACE,IAAI,CAAC,MADP,CAEE,EAAE,CAAC,OAFL,CAGE,GAAG,CAAEP,QAHP,CAIE,KAAK,CAAE,CAAEyB,KAAK,CAAE,OAAT,CAJT,CAKE,WAAW,CAAC,oDALd,EAFF,CADF,cAWE,2BAAK,SAAS,CAAC,SAAf,eACE,6BAAO,OAAO,CAAC,UAAf,iBADF,cAEE,gCACE,IAAI,CAAE,CADR,CAEE,EAAE,CAAC,UAFL,CAGE,GAAG,CAAExB,OAHP,CAIE,KAAK,CAAE,CAAEwB,KAAK,CAAE,OAAT,CAJT,CAKE,WAAW,CAAC,yEALd,EAFF,CAXF,cAqBE,iDArBF,CADF,CAyBD,CAED,cAAe3B,CAAAA,SAAf","sourcesContent":["import React, { useRef } from \"react\";\nimport \"./AddNote.css\";\nimport { useAppSelector, useAppDispatch } from \"../../store/hooks\";\n\ntype AddNoteKRProps = {\n  //optional chianing\n  AddNote: (notes: {\n    title?: string;\n    text?: string;\n    date?: string;\n    logger?: string;\n  }) => void;\n\n  logger: string;\n  setIsbuttonPressed: (boolean: boolean) => void;\n};\n\nfunction AddNoteKr(props: AddNoteKRProps) {\n  const titleRef = useRef<HTMLInputElement>(null);\n  const textRef = useRef<HTMLTextAreaElement>(null);\n  const now = new Date();\n  const reduxUserInfo = useAppSelector((state) => state.user);\n\n  function submitHandler(event: React.FormEvent) {\n    let temp = titleRef.current?.value;\n    let temp2 = textRef.current?.value;\n    if (temp && temp2) {\n      event.preventDefault();\n      const notes = {\n        title: titleRef.current?.value,\n        text: textRef.current?.value,\n        date: now.toLocaleString(),\n        logger: reduxUserInfo,\n      };\n\n      console.log(notes);\n      props.AddNote(notes);\n      props.setIsbuttonPressed(false);\n      titleRef.current!.value = \"\";\n      textRef.current!.value = \"\";\n    } else {\n      alert(\"제목과 내용을 모두 입력해주세요.\");\n    }\n    console.log({ temp, temp2 });\n  }\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className=\"control\">\n        <label htmlFor=\"title\">제목</label>\n        <input\n          type=\"text\"\n          id=\"title\"\n          ref={titleRef}\n          style={{ color: \"white\" }}\n          placeholder=\"제목을 입력하시오.\"\n        />\n      </div>\n      <div className=\"control\">\n        <label htmlFor=\"text-log\">내용</label>\n        <textarea\n          rows={5}\n          id=\"text-log\"\n          ref={textRef}\n          style={{ color: \"white\" }}\n          placeholder=\"남기고 싶은 말을 적으시오..\"\n        ></textarea>\n      </div>\n      <button>제출</button>\n    </form>\n  );\n}\n\nexport default AddNoteKr;\n"]},"metadata":{},"sourceType":"module"}