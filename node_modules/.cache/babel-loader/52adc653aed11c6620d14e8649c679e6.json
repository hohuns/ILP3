{"ast":null,"code":"/** \n * Copyright © INOVUA TRADING.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _renderGroupTitle = _interopRequireDefault(require(\"./renderGroupTitle\"));\n\nvar _default = function _default(cellProps, rowProps) {\n  var groupProps = rowProps.groupProps,\n      totalLockedStartWidth = rowProps.totalLockedStartWidth,\n      totalLockedEndWidth = rowProps.totalLockedEndWidth,\n      totalUnlockedWidth = rowProps.totalUnlockedWidth,\n      totalComputedWidth = rowProps.totalComputedWidth,\n      totalColumnCount = rowProps.totalColumnCount,\n      firstLockedEndIndex = rowProps.firstLockedEndIndex,\n      firstUnlockedIndex = rowProps.firstUnlockedIndex,\n      groupColumn = rowProps.groupColumn,\n      hasLockedEnd = rowProps.hasLockedEnd,\n      hasLockedStart = rowProps.hasLockedStart;\n  var computedVisibleIndex = cellProps.computedVisibleIndex,\n      computedLocked = cellProps.computedLocked,\n      expandColumnIndex = cellProps.expandColumnIndex;\n  var expandColumn = computedVisibleIndex === expandColumnIndex;\n  var expandGroupTitle = rowProps.expandGroupTitle;\n\n  if (!hasLockedStart && !hasLockedEnd) {\n    expandGroupTitle = true;\n  }\n\n  var data = rowProps.data;\n  var lockedStart = computedLocked === 'start';\n  var lockedEnd = computedLocked === 'end';\n\n  if (groupProps && computedVisibleIndex < groupProps.depth || expandColumnIndex != null && computedVisibleIndex < expandColumnIndex) {\n    cellProps.value = null;\n    cellProps.noBackground = true;\n    return cellProps;\n  }\n\n  if (computedVisibleIndex === (groupProps === null || groupProps === void 0 ? void 0 : groupProps.depth)) {\n    cellProps.value = null;\n    cellProps.collapsed = groupProps.collapsed;\n    cellProps.textAlign = 'center';\n    cellProps.noBackground = false;\n    cellProps.firstInSection = true;\n    return cellProps;\n  }\n\n  if (computedVisibleIndex === (groupProps === null || groupProps === void 0 ? void 0 : groupProps.depth) + 1 || expandColumn) {\n    var remainingWidth = lockedStart ? totalLockedStartWidth : totalComputedWidth - totalLockedEndWidth;\n\n    if (expandGroupTitle || expandColumn) {\n      remainingWidth = totalComputedWidth;\n      cellProps.last = true;\n      cellProps.computedColspan = Math.max(totalColumnCount - computedVisibleIndex, 1);\n    } else {\n      cellProps.computedColspan = Math.max(lockedStart ? firstUnlockedIndex - computedVisibleIndex : lockedEnd ? totalColumnCount - computedVisibleIndex : firstLockedEndIndex - computedVisibleIndex, 1);\n    }\n\n    cellProps.lastInSection = true;\n    cellProps.noBackground = false;\n    cellProps.computedWidth = remainingWidth - cellProps.computedOffset;\n\n    if (!expandColumn) {\n      cellProps.value = (0, _renderGroupTitle.default)({\n        cellProps: cellProps,\n        rowProps: rowProps,\n        groupProps: groupProps\n      });\n    }\n\n    cellProps.zIndex = 1;\n    cellProps.textAlign = 'start';\n\n    if (cellProps.render) {\n      if (!expandColumn) {\n        cellProps.render = function () {\n          return cellProps.value;\n        };\n      }\n    }\n\n    return cellProps;\n  }\n\n  if (lockedStart) {\n    cellProps.hidden = true;\n  } else {\n    var fakeHidden = lockedEnd ? computedVisibleIndex !== firstLockedEndIndex : computedVisibleIndex !== firstUnlockedIndex;\n\n    if (!cellProps.hidden) {\n      cellProps.textAlign = 'start';\n      cellProps.value = fakeHidden ? null : (0, _renderGroupTitle.default)({\n        cellProps: cellProps,\n        rowProps: rowProps,\n        groupProps: groupProps\n      });\n\n      if (cellProps.render) {\n        cellProps.render = function () {\n          return cellProps.value;\n        };\n      }\n\n      cellProps.computedWidth = lockedEnd ? totalLockedEndWidth : totalUnlockedWidth;\n\n      if (!lockedEnd && computedVisibleIndex >= firstUnlockedIndex + 1) {\n        cellProps.hidden = true;\n      }\n\n      cellProps.firstInSection = true;\n      cellProps.last = hasLockedEnd ? lockedEnd : true;\n      cellProps.lastInSection = true;\n      cellProps.computedColspan = Math.max(lockedEnd ? totalColumnCount - computedVisibleIndex : firstLockedEndIndex - computedVisibleIndex, 1);\n    }\n  }\n\n  return cellProps;\n};\n\nexports.default = _default;","map":{"version":3,"sources":["/Users/sungjaejoo/Desktop/ILP-main/node_modules/@inovua/reactdatagrid-community/Layout/ColumnLayout/Content/adjustCellProps.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_renderGroupTitle","_default","cellProps","rowProps","groupProps","totalLockedStartWidth","totalLockedEndWidth","totalUnlockedWidth","totalComputedWidth","totalColumnCount","firstLockedEndIndex","firstUnlockedIndex","groupColumn","hasLockedEnd","hasLockedStart","computedVisibleIndex","computedLocked","expandColumnIndex","expandColumn","expandGroupTitle","data","lockedStart","lockedEnd","depth","noBackground","collapsed","textAlign","firstInSection","remainingWidth","last","computedColspan","Math","max","lastInSection","computedWidth","computedOffset","zIndex","render","hidden","fakeHidden"],"mappings":"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","sourcesContent":["/** \n * Copyright © INOVUA TRADING.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _renderGroupTitle = _interopRequireDefault(require(\"./renderGroupTitle\"));\n\nvar _default = function _default(cellProps, rowProps) {\n  var groupProps = rowProps.groupProps,\n      totalLockedStartWidth = rowProps.totalLockedStartWidth,\n      totalLockedEndWidth = rowProps.totalLockedEndWidth,\n      totalUnlockedWidth = rowProps.totalUnlockedWidth,\n      totalComputedWidth = rowProps.totalComputedWidth,\n      totalColumnCount = rowProps.totalColumnCount,\n      firstLockedEndIndex = rowProps.firstLockedEndIndex,\n      firstUnlockedIndex = rowProps.firstUnlockedIndex,\n      groupColumn = rowProps.groupColumn,\n      hasLockedEnd = rowProps.hasLockedEnd,\n      hasLockedStart = rowProps.hasLockedStart;\n  var computedVisibleIndex = cellProps.computedVisibleIndex,\n      computedLocked = cellProps.computedLocked,\n      expandColumnIndex = cellProps.expandColumnIndex;\n  var expandColumn = computedVisibleIndex === expandColumnIndex;\n  var expandGroupTitle = rowProps.expandGroupTitle;\n\n  if (!hasLockedStart && !hasLockedEnd) {\n    expandGroupTitle = true;\n  }\n\n  var data = rowProps.data;\n  var lockedStart = computedLocked === 'start';\n  var lockedEnd = computedLocked === 'end';\n\n  if (groupProps && computedVisibleIndex < groupProps.depth || expandColumnIndex != null && computedVisibleIndex < expandColumnIndex) {\n    cellProps.value = null;\n    cellProps.noBackground = true;\n    return cellProps;\n  }\n\n  if (computedVisibleIndex === (groupProps === null || groupProps === void 0 ? void 0 : groupProps.depth)) {\n    cellProps.value = null;\n    cellProps.collapsed = groupProps.collapsed;\n    cellProps.textAlign = 'center';\n    cellProps.noBackground = false;\n    cellProps.firstInSection = true;\n    return cellProps;\n  }\n\n  if (computedVisibleIndex === (groupProps === null || groupProps === void 0 ? void 0 : groupProps.depth) + 1 || expandColumn) {\n    var remainingWidth = lockedStart ? totalLockedStartWidth : totalComputedWidth - totalLockedEndWidth;\n\n    if (expandGroupTitle || expandColumn) {\n      remainingWidth = totalComputedWidth;\n      cellProps.last = true;\n      cellProps.computedColspan = Math.max(totalColumnCount - computedVisibleIndex, 1);\n    } else {\n      cellProps.computedColspan = Math.max(lockedStart ? firstUnlockedIndex - computedVisibleIndex : lockedEnd ? totalColumnCount - computedVisibleIndex : firstLockedEndIndex - computedVisibleIndex, 1);\n    }\n\n    cellProps.lastInSection = true;\n    cellProps.noBackground = false;\n    cellProps.computedWidth = remainingWidth - cellProps.computedOffset;\n\n    if (!expandColumn) {\n      cellProps.value = (0, _renderGroupTitle.default)({\n        cellProps: cellProps,\n        rowProps: rowProps,\n        groupProps: groupProps\n      });\n    }\n\n    cellProps.zIndex = 1;\n    cellProps.textAlign = 'start';\n\n    if (cellProps.render) {\n      if (!expandColumn) {\n        cellProps.render = function () {\n          return cellProps.value;\n        };\n      }\n    }\n\n    return cellProps;\n  }\n\n  if (lockedStart) {\n    cellProps.hidden = true;\n  } else {\n    var fakeHidden = lockedEnd ? computedVisibleIndex !== firstLockedEndIndex : computedVisibleIndex !== firstUnlockedIndex;\n\n    if (!cellProps.hidden) {\n      cellProps.textAlign = 'start';\n      cellProps.value = fakeHidden ? null : (0, _renderGroupTitle.default)({\n        cellProps: cellProps,\n        rowProps: rowProps,\n        groupProps: groupProps\n      });\n\n      if (cellProps.render) {\n        cellProps.render = function () {\n          return cellProps.value;\n        };\n      }\n\n      cellProps.computedWidth = lockedEnd ? totalLockedEndWidth : totalUnlockedWidth;\n\n      if (!lockedEnd && computedVisibleIndex >= firstUnlockedIndex + 1) {\n        cellProps.hidden = true;\n      }\n\n      cellProps.firstInSection = true;\n      cellProps.last = hasLockedEnd ? lockedEnd : true;\n      cellProps.lastInSection = true;\n      cellProps.computedColspan = Math.max(lockedEnd ? totalColumnCount - computedVisibleIndex : firstLockedEndIndex - computedVisibleIndex, 1);\n    }\n  }\n\n  return cellProps;\n};\n\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}