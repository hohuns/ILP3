{"ast":null,"code":"/**\n * Copyright Â© INOVUA TRADING.\n *\n * This source code is licensed under the Commercial License found in the\n * LICENSE file in the root directory of this source tree.\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _updateLockedWrapperPositions = require(\"./updateLockedWrapperPositions\");\n\nvar _default = {\n  name: 'locked-columns',\n  hook: function hook() {},\n  defaultProps: function defaultProps() {\n    return {\n      updateLockedWrapperPositions: _updateLockedWrapperPositions.updateLockedWrapperPositions\n    };\n  },\n  renderLockedStartCells: function renderLockedStartCells(_ref) {\n    var lockedStartCount = _ref.lockedStartCount,\n        isHeader = _ref.isHeader,\n        lockedStartColumns = _ref.lockedStartColumns,\n        virtualizeColumns = _ref.virtualizeColumns,\n        rtl = _ref.rtl,\n        getScrollLeftMax = _ref.getScrollLeftMax,\n        lockedStartContent = _ref.lockedStartContent,\n        initialCells = _ref.initialCells,\n        sticky = _ref.sticky,\n        scrollLeft = _ref.scrollLeft,\n        groupProps = _ref.groupProps,\n        expandGroupTitle = _ref.expandGroupTitle,\n        lockedEndColumns = _ref.lockedEndColumns,\n        nativeScroll = _ref.nativeScroll,\n        scrollbarWidth = _ref.scrollbarWidth,\n        virtualListBorderLeft = _ref.virtualListBorderLeft,\n        virtualListBorderRight = _ref.virtualListBorderRight,\n        style = _ref.style,\n        addTransitionDuration = _ref.addTransitionDuration,\n        lockedEndContent = _ref.lockedEndContent,\n        hasRowDetails = _ref.hasRowDetails,\n        initialRowHeight = _ref.initialRowHeight,\n        rowHeight = _ref.rowHeight,\n        lockedEndStartIndex = _ref.lockedEndStartIndex,\n        availableWidth = _ref.availableWidth;\n\n    if (lockedStartCount) {\n      var startOffset = isHeader ? virtualListBorderLeft : 0;\n      var startWrapperWidth = lockedStartColumns.reduce(_updateLockedWrapperPositions.sumColumnWidth, 0);\n      var startWrapperStyle = {\n        width: startWrapperWidth,\n        minWidth: startWrapperWidth,\n        background: 'inherit',\n        height: '100%'\n      };\n\n      if (style) {\n        if (style.background) {\n          startWrapperStyle.background = style.background;\n        }\n\n        if (style.backgroundColor) {\n          startWrapperStyle.backgroundColor = style.backgroundColor;\n        }\n      }\n\n      if (startOffset) {\n        startWrapperStyle.paddingLeft = startOffset;\n        startWrapperStyle.position = 'relative';\n        startWrapperStyle.left = -startOffset;\n      }\n\n      if (virtualizeColumns) {\n        startWrapperStyle.height = rowHeight ? rowHeight : '100%';\n        startWrapperStyle.position = 'absolute';\n        startWrapperStyle.left = 0;\n      } else {\n        var transformStart = \"translate3d(\".concat(rtl && getScrollLeftMax ? -(getScrollLeftMax() - scrollLeft) : scrollLeft, \"px, 0px, 0px)\");\n\n        if (sticky) {\n          transformStart = 'translate3d(0px, 0px, 0px)';\n        }\n\n        startWrapperStyle.transform = transformStart;\n      }\n\n      var lockedStartInTransition = addTransitionDuration(lockedStartColumns, startWrapperStyle);\n      return _react.default.createElement(\"div\", {\n        key: \"lockedStartWrapper\",\n        className: \"InovuaReactDataGrid__locked-start-wrapper \".concat(lockedStartInTransition ? 'InovuaReactDataGrid__locked-start-wrapper--transition' : '', \" \").concat(sticky ? 'InovuaReactDataGrid__locked-start-wrapper--sticky' : '', \" InovuaReactDataGrid__locked-start-wrapper--direction-\").concat(rtl ? 'rtl' : 'ltr'),\n        style: startWrapperStyle\n      }, lockedStartContent || initialCells.slice(0, lockedStartCount));\n    }\n  },\n  renderLockedEndCells: function renderLockedEndCells(_ref2) {\n    var rtl = _ref2.rtl,\n        scrollLeft = _ref2.scrollLeft,\n        groupProps = _ref2.groupProps,\n        expandGroupTitle = _ref2.expandGroupTitle,\n        lockedEndColumns = _ref2.lockedEndColumns,\n        nativeScroll = _ref2.nativeScroll,\n        scrollbarWidth = _ref2.scrollbarWidth,\n        isHeader = _ref2.isHeader,\n        virtualListBorderLeft = _ref2.virtualListBorderLeft,\n        virtualListBorderRight = _ref2.virtualListBorderRight,\n        sticky = _ref2.sticky,\n        style = _ref2.style,\n        addTransitionDuration = _ref2.addTransitionDuration,\n        lockedEndContent = _ref2.lockedEndContent,\n        initialCells = _ref2.initialCells,\n        hasRowDetails = _ref2.hasRowDetails,\n        initialRowHeight = _ref2.initialRowHeight,\n        lockedEndStartIndex = _ref2.lockedEndStartIndex,\n        availableWidth = _ref2.availableWidth,\n        virtualizeColumns = _ref2.virtualizeColumns;\n    var lockEndPosition = rtl ? scrollLeft : (0, _updateLockedWrapperPositions.getLockedEndWrapperTranslate)({\n      lockedEndColumns: lockedEndColumns,\n      availableWidth: availableWidth,\n      virtualizeColumns: virtualizeColumns,\n      virtualListBorderRight: virtualListBorderRight\n    }) + scrollLeft;\n    var endWrapperWidth = groupProps && expandGroupTitle ? 0 : lockedEndColumns.reduce(_updateLockedWrapperPositions.sumColumnWidth, 0) + (nativeScroll ? scrollbarWidth || 0 : 0) + (isHeader ? virtualListBorderLeft + virtualListBorderRight : 0);\n    var endWrapperStyle = {\n      width: endWrapperWidth,\n      minWidth: endWrapperWidth,\n      transform: \"translate3d(\".concat(sticky ? 0 : lockEndPosition, \"px, 0px, 0px)\"),\n      position: 'absolute',\n      left: 0,\n      background: 'inherit',\n      height: '100%'\n    };\n\n    if (style) {\n      if (style.background) {\n        endWrapperStyle.background = style.background;\n      }\n\n      if (style.backgroundColor) {\n        endWrapperStyle.backgroundColor = style.backgroundColor;\n      }\n    }\n\n    var lockedEndInTransition = addTransitionDuration(lockedEndColumns, endWrapperStyle);\n\n    var lockEndActiveBorderDiv = _react.default.createElement(\"div\", {\n      key: \"--active-borders\",\n      className: \"InovuaReactDataGrid__row-active-borders\"\n    });\n\n    return _react.default.createElement(\"div\", {\n      key: \"lockedEndWrapper\",\n      className: \"InovuaReactDataGrid__locked-end-wrapper InovuaReactDataGrid__locked-end-wrapper--direction-\".concat(rtl ? 'rtl' : 'ltr', \" \").concat(sticky ? 'InovuaReactDataGrid__locked-end-wrapper--sticky' : '', \" \").concat(lockedEndInTransition ? 'InovuaReactDataGrid__locked-end-wrapper--transition' : ''),\n      style: endWrapperStyle\n    }, lockedEndContent || initialCells.slice(lockedEndStartIndex), isHeader ? hasRowDetails ? _react.default.createElement(\"div\", {\n      key: \"--active-borders-header\",\n      className: \"InovuaReactDataGrid__row-active-borders-wrapper\",\n      style: {\n        height: initialRowHeight,\n        position: 'absolute',\n        width: '100%',\n        left: 0,\n        top: 0,\n        pointerEvents: 'none'\n      }\n    }, lockEndActiveBorderDiv) : lockEndActiveBorderDiv : null);\n  }\n};\nexports.default = _default;","map":{"version":3,"sources":["/Users/sungjaejoo/Desktop/ILP-main/node_modules/@inovua/reactdatagrid-enterprise/plugins/locked-columns/index.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_react","_updateLockedWrapperPositions","_default","name","hook","defaultProps","updateLockedWrapperPositions","renderLockedStartCells","_ref","lockedStartCount","isHeader","lockedStartColumns","virtualizeColumns","rtl","getScrollLeftMax","lockedStartContent","initialCells","sticky","scrollLeft","groupProps","expandGroupTitle","lockedEndColumns","nativeScroll","scrollbarWidth","virtualListBorderLeft","virtualListBorderRight","style","addTransitionDuration","lockedEndContent","hasRowDetails","initialRowHeight","rowHeight","lockedEndStartIndex","availableWidth","startOffset","startWrapperWidth","reduce","sumColumnWidth","startWrapperStyle","width","minWidth","background","height","backgroundColor","paddingLeft","position","left","transformStart","concat","transform","lockedStartInTransition","createElement","key","className","slice","renderLockedEndCells","_ref2","lockEndPosition","getLockedEndWrapperTranslate","endWrapperWidth","endWrapperStyle","lockedEndInTransition","lockEndActiveBorderDiv","top","pointerEvents"],"mappings":"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","sourcesContent":["/**\n * Copyright Â© INOVUA TRADING.\n *\n * This source code is licensed under the Commercial License found in the\n * LICENSE file in the root directory of this source tree.\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _updateLockedWrapperPositions = require(\"./updateLockedWrapperPositions\");\n\nvar _default = {\n  name: 'locked-columns',\n  hook: function hook() {},\n  defaultProps: function defaultProps() {\n    return {\n      updateLockedWrapperPositions: _updateLockedWrapperPositions.updateLockedWrapperPositions\n    };\n  },\n  renderLockedStartCells: function renderLockedStartCells(_ref) {\n    var lockedStartCount = _ref.lockedStartCount,\n        isHeader = _ref.isHeader,\n        lockedStartColumns = _ref.lockedStartColumns,\n        virtualizeColumns = _ref.virtualizeColumns,\n        rtl = _ref.rtl,\n        getScrollLeftMax = _ref.getScrollLeftMax,\n        lockedStartContent = _ref.lockedStartContent,\n        initialCells = _ref.initialCells,\n        sticky = _ref.sticky,\n        scrollLeft = _ref.scrollLeft,\n        groupProps = _ref.groupProps,\n        expandGroupTitle = _ref.expandGroupTitle,\n        lockedEndColumns = _ref.lockedEndColumns,\n        nativeScroll = _ref.nativeScroll,\n        scrollbarWidth = _ref.scrollbarWidth,\n        virtualListBorderLeft = _ref.virtualListBorderLeft,\n        virtualListBorderRight = _ref.virtualListBorderRight,\n        style = _ref.style,\n        addTransitionDuration = _ref.addTransitionDuration,\n        lockedEndContent = _ref.lockedEndContent,\n        hasRowDetails = _ref.hasRowDetails,\n        initialRowHeight = _ref.initialRowHeight,\n        rowHeight = _ref.rowHeight,\n        lockedEndStartIndex = _ref.lockedEndStartIndex,\n        availableWidth = _ref.availableWidth;\n\n    if (lockedStartCount) {\n      var startOffset = isHeader ? virtualListBorderLeft : 0;\n      var startWrapperWidth = lockedStartColumns.reduce(_updateLockedWrapperPositions.sumColumnWidth, 0);\n      var startWrapperStyle = {\n        width: startWrapperWidth,\n        minWidth: startWrapperWidth,\n        background: 'inherit',\n        height: '100%'\n      };\n\n      if (style) {\n        if (style.background) {\n          startWrapperStyle.background = style.background;\n        }\n\n        if (style.backgroundColor) {\n          startWrapperStyle.backgroundColor = style.backgroundColor;\n        }\n      }\n\n      if (startOffset) {\n        startWrapperStyle.paddingLeft = startOffset;\n        startWrapperStyle.position = 'relative';\n        startWrapperStyle.left = -startOffset;\n      }\n\n      if (virtualizeColumns) {\n        startWrapperStyle.height = rowHeight ? rowHeight : '100%';\n        startWrapperStyle.position = 'absolute';\n        startWrapperStyle.left = 0;\n      } else {\n        var transformStart = \"translate3d(\".concat(rtl && getScrollLeftMax ? -(getScrollLeftMax() - scrollLeft) : scrollLeft, \"px, 0px, 0px)\");\n\n        if (sticky) {\n          transformStart = 'translate3d(0px, 0px, 0px)';\n        }\n\n        startWrapperStyle.transform = transformStart;\n      }\n\n      var lockedStartInTransition = addTransitionDuration(lockedStartColumns, startWrapperStyle);\n      return _react.default.createElement(\"div\", {\n        key: \"lockedStartWrapper\",\n        className: \"InovuaReactDataGrid__locked-start-wrapper \".concat(lockedStartInTransition ? 'InovuaReactDataGrid__locked-start-wrapper--transition' : '', \" \").concat(sticky ? 'InovuaReactDataGrid__locked-start-wrapper--sticky' : '', \" InovuaReactDataGrid__locked-start-wrapper--direction-\").concat(rtl ? 'rtl' : 'ltr'),\n        style: startWrapperStyle\n      }, lockedStartContent || initialCells.slice(0, lockedStartCount));\n    }\n  },\n  renderLockedEndCells: function renderLockedEndCells(_ref2) {\n    var rtl = _ref2.rtl,\n        scrollLeft = _ref2.scrollLeft,\n        groupProps = _ref2.groupProps,\n        expandGroupTitle = _ref2.expandGroupTitle,\n        lockedEndColumns = _ref2.lockedEndColumns,\n        nativeScroll = _ref2.nativeScroll,\n        scrollbarWidth = _ref2.scrollbarWidth,\n        isHeader = _ref2.isHeader,\n        virtualListBorderLeft = _ref2.virtualListBorderLeft,\n        virtualListBorderRight = _ref2.virtualListBorderRight,\n        sticky = _ref2.sticky,\n        style = _ref2.style,\n        addTransitionDuration = _ref2.addTransitionDuration,\n        lockedEndContent = _ref2.lockedEndContent,\n        initialCells = _ref2.initialCells,\n        hasRowDetails = _ref2.hasRowDetails,\n        initialRowHeight = _ref2.initialRowHeight,\n        lockedEndStartIndex = _ref2.lockedEndStartIndex,\n        availableWidth = _ref2.availableWidth,\n        virtualizeColumns = _ref2.virtualizeColumns;\n    var lockEndPosition = rtl ? scrollLeft : (0, _updateLockedWrapperPositions.getLockedEndWrapperTranslate)({\n      lockedEndColumns: lockedEndColumns,\n      availableWidth: availableWidth,\n      virtualizeColumns: virtualizeColumns,\n      virtualListBorderRight: virtualListBorderRight\n    }) + scrollLeft;\n    var endWrapperWidth = groupProps && expandGroupTitle ? 0 : lockedEndColumns.reduce(_updateLockedWrapperPositions.sumColumnWidth, 0) + (nativeScroll ? scrollbarWidth || 0 : 0) + (isHeader ? virtualListBorderLeft + virtualListBorderRight : 0);\n    var endWrapperStyle = {\n      width: endWrapperWidth,\n      minWidth: endWrapperWidth,\n      transform: \"translate3d(\".concat(sticky ? 0 : lockEndPosition, \"px, 0px, 0px)\"),\n      position: 'absolute',\n      left: 0,\n      background: 'inherit',\n      height: '100%'\n    };\n\n    if (style) {\n      if (style.background) {\n        endWrapperStyle.background = style.background;\n      }\n\n      if (style.backgroundColor) {\n        endWrapperStyle.backgroundColor = style.backgroundColor;\n      }\n    }\n\n    var lockedEndInTransition = addTransitionDuration(lockedEndColumns, endWrapperStyle);\n\n    var lockEndActiveBorderDiv = _react.default.createElement(\"div\", {\n      key: \"--active-borders\",\n      className: \"InovuaReactDataGrid__row-active-borders\"\n    });\n\n    return _react.default.createElement(\"div\", {\n      key: \"lockedEndWrapper\",\n      className: \"InovuaReactDataGrid__locked-end-wrapper InovuaReactDataGrid__locked-end-wrapper--direction-\".concat(rtl ? 'rtl' : 'ltr', \" \").concat(sticky ? 'InovuaReactDataGrid__locked-end-wrapper--sticky' : '', \" \").concat(lockedEndInTransition ? 'InovuaReactDataGrid__locked-end-wrapper--transition' : ''),\n      style: endWrapperStyle\n    }, lockedEndContent || initialCells.slice(lockedEndStartIndex), isHeader ? hasRowDetails ? _react.default.createElement(\"div\", {\n      key: \"--active-borders-header\",\n      className: \"InovuaReactDataGrid__row-active-borders-wrapper\",\n      style: {\n        height: initialRowHeight,\n        position: 'absolute',\n        width: '100%',\n        left: 0,\n        top: 0,\n        pointerEvents: 'none'\n      }\n    }, lockEndActiveBorderDiv) : lockEndActiveBorderDiv : null);\n  }\n};\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}