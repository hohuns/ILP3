{"ast":null,"code":"var _jsxFileName = \"/Users/sungjaejoo/Desktop/ILP-main/src/components/LogInForm/Loginform.tsx\";\nimport { Divider } from \"@mui/material\";\nimport { TextField } from \"@mui/material\";\nimport { Grid } from \"@mui/material\";\nimport { Typography } from \"@mui/material\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { logIn } from \"../../Service/ApiService\";\nimport { useNavigate } from \"react-router-dom\";\nimport { usersActions } from \"../../store/userSlice\";\nimport { useAppSelector, useAppDispatch } from \"../../store/hooks\";\nimport DialogLanguage from \"./DialogLanLogin\";\n\nconst Login = () => {\n  const [open, setOpen] = useState(false);\n  const dispatch = useAppDispatch();\n  const idRef = useRef(null);\n  const pwRef = useRef(null);\n  let navigate = useNavigate();\n  const reduxLan = useAppSelector(state => state.lan);\n  const storedLan = localStorage.getItem(\"lan\");\n\n  const dialogClickHandler = () => {\n    setOpen(true);\n  };\n\n  const dialogCloseHandler = () => {\n    setOpen(false);\n  };\n\n  useEffect(() => {\n    dialogClickHandler();\n    dispatch(usersActions.updateLanguage(storedLan));\n  }, []);\n\n  const formHandler = () => {\n    var _idRef$current, _pwRef$current;\n\n    const a = logIn((_idRef$current = idRef.current) === null || _idRef$current === void 0 ? void 0 : _idRef$current.value, (_pwRef$current = pwRef.current) === null || _pwRef$current === void 0 ? void 0 : _pwRef$current.value);\n    a.then(r => {\n      console.log(r);\n\n      if ((r === null || r === void 0 ? void 0 : r.registered) === true) {\n        dispatch(usersActions.updateIdToken(r.idToken));\n        dispatch(usersActions.updateIsLoggedIn(true));\n        dispatch(usersActions.updateUser(r === null || r === void 0 ? void 0 : r.displayName));\n        localStorage.setItem(\"token\", r.idToken);\n        localStorage.setItem(\"isLoggedIn\", \"true\");\n        localStorage.setItem(\"user\", r === null || r === void 0 ? void 0 : r.displayName);\n        navigate(\"/hompageen\");\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    color: \"white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, reduxLan === \"한국어\" ? \"로그에 접속 하려면 아이디와 패스워드를 입력해주세요.\" : \"Input the password to access the Message Log.\"), /*#__PURE__*/React.createElement(Divider, {\n    sx: {\n      backgroundColor: \"white\",\n      marginTop: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 4,\n    style: {\n      marginTop: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    color: \"primary\",\n    sx: {\n      input: {\n        borderRadius: \"5px\",\n        border: \"1px solid white\",\n        color: \"white\"\n      }\n    },\n    margin: \"dense\",\n    name: \"Email\",\n    label: reduxLan === \"한국어\" ? \"이메일\" : \"Email\",\n    type: \"text\",\n    fullWidth: true,\n    inputRef: idRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    margin: \"dense\",\n    required: true,\n    name: \"pw\",\n    sx: {\n      input: {\n        borderRadius: \"5px\",\n        border: \"1px solid white\",\n        color: \"white\"\n      }\n    },\n    label: reduxLan === \"한국어\" ? \"패스워드\" : \"Password\",\n    type: \"password\",\n    fullWidth: true,\n    inputRef: pwRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    style: {\n      marginTop: \"30px\"\n    },\n    onClick: formHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, reduxLan === \"한국어\" ? \"로그인\" : \"Submit\"))), /*#__PURE__*/React.createElement(DialogLanguage, {\n    open: open,\n    close: dialogCloseHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Login;","map":{"version":3,"sources":["/Users/sungjaejoo/Desktop/ILP-main/src/components/LogInForm/Loginform.tsx"],"names":["Divider","TextField","Grid","Typography","React","useEffect","useRef","useState","logIn","useNavigate","usersActions","useAppSelector","useAppDispatch","DialogLanguage","Login","open","setOpen","dispatch","idRef","pwRef","navigate","reduxLan","state","lan","storedLan","localStorage","getItem","dialogClickHandler","dialogCloseHandler","updateLanguage","formHandler","a","current","value","then","r","console","log","registered","updateIdToken","idToken","updateIsLoggedIn","updateUser","displayName","setItem","backgroundColor","marginTop","input","borderRadius","border","color"],"mappings":"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","sourcesContent":["import { Divider } from \"@mui/material\";\nimport { TextField } from \"@mui/material\";\nimport { Grid } from \"@mui/material\";\nimport { Typography } from \"@mui/material\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { logIn } from \"../../Service/ApiService\";\nimport { useNavigate } from \"react-router-dom\";\nimport { usersActions } from \"../../store/userSlice\";\nimport { useAppSelector, useAppDispatch } from \"../../store/hooks\";\nimport DialogLanguage from \"./DialogLanLogin\";\n\nconst Login = () => {\n  const [open, setOpen] = useState(false);\n  const dispatch = useAppDispatch();\n  const idRef = useRef<HTMLInputElement>(null);\n  const pwRef = useRef<HTMLInputElement>(null);\n  let navigate = useNavigate();\n  const reduxLan: string = useAppSelector((state) => state.lan);\n  const storedLan: string = localStorage.getItem(\"lan\") as string;\n  const dialogClickHandler = () => {\n    setOpen(true);\n  };\n\n  const dialogCloseHandler = () => {\n    setOpen(false);\n  };\n\n  useEffect(() => {\n    dialogClickHandler();\n    dispatch(usersActions.updateLanguage(storedLan));\n  }, []);\n\n  const formHandler = () => {\n    const a = logIn(idRef.current?.value!, pwRef.current?.value!);\n    a.then((r) => {\n      console.log(r);\n      if (r?.registered === true) {\n        dispatch(usersActions.updateIdToken(r.idToken));\n        dispatch(usersActions.updateIsLoggedIn(true));\n        dispatch(usersActions.updateUser(r?.displayName));\n        localStorage.setItem(\"token\", r.idToken);\n        localStorage.setItem(\"isLoggedIn\", \"true\");\n        localStorage.setItem(\"user\", r?.displayName);\n        navigate(\"/hompageen\");\n      }\n    });\n  };\n\n  return (\n    <section>\n      <Typography variant=\"h6\" color=\"white\">\n        {reduxLan === \"한국어\"\n          ? \"로그에 접속 하려면 아이디와 패스워드를 입력해주세요.\"\n          : \"Input the password to access the Message Log.\"}\n      </Typography>\n      <Divider sx={{ backgroundColor: \"white\", marginTop: \"10px\" }} />\n      <Grid container spacing={4} style={{ marginTop: \"10px\" }}>\n        <Grid item xs={12} sm={3}>\n          {}\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            required\n            color=\"primary\"\n            sx={{\n              input: {\n                borderRadius: \"5px\",\n                border: \"1px solid white\",\n                color: \"white\",\n              },\n            }}\n            margin=\"dense\"\n            name=\"Email\"\n            label={reduxLan === \"한국어\" ? \"이메일\" : \"Email\"}\n            type=\"text\"\n            fullWidth\n            inputRef={idRef}\n          />\n          <TextField\n            margin=\"dense\"\n            required\n            name=\"pw\"\n            sx={{\n              input: {\n                borderRadius: \"5px\",\n                border: \"1px solid white\",\n                color: \"white\",\n              },\n            }}\n            label={reduxLan === \"한국어\" ? \"패스워드\" : \"Password\"}\n            type=\"password\"\n            fullWidth\n            inputRef={pwRef}\n          />\n          <button style={{ marginTop: \"30px\" }} onClick={formHandler}>\n            {reduxLan === \"한국어\" ? \"로그인\" : \"Submit\"}\n          </button>\n        </Grid>\n      </Grid>\n      <DialogLanguage open={open} close={dialogCloseHandler} />\n    </section>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}