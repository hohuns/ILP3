{"ast":null,"code":"/** \n * Copyright © INOVUA TRADING.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _mapGroups = _interopRequireDefault(require(\"./mapGroups\"));\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      (0, _defineProperty2.default)(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nvar getGroupsDepth = function getGroupsDepth(groupsMap) {\n  if (!groupsMap) {\n    return 0;\n  }\n\n  return Math.max.apply(Math, (0, _toConsumableArray2.default)(Object.keys(groupsMap).map(function (groupName) {\n    return groupsMap[groupName].computedDepth || 0;\n  })));\n};\n\nvar getPivotGroups = function getPivotGroups(uniqueValuesRoot, parentGroup, pivotSummaryGroups) {\n  var groups = [];\n  var field = uniqueValuesRoot.field,\n      values = uniqueValuesRoot.values;\n\n  if (field && values) {\n    Object.keys(values).forEach(function (value) {\n      var groupId = \"\".concat(parentGroup ? parentGroup + '_' : '').concat(field, \":\").concat(value);\n      var defaultGroup = pivotSummaryGroups[field];\n      var group = {\n        name: groupId,\n        header: value\n      };\n\n      if (defaultGroup) {\n        if (typeof defaultGroup === 'function') {\n          group = _objectSpread(_objectSpread({}, defaultGroup(_objectSpread(_objectSpread({}, group), {}, {\n            field: field,\n            values: values\n          }))), group);\n        } else {\n          group = _objectSpread(_objectSpread({}, defaultGroup), group);\n        }\n      }\n\n      if (parentGroup) {\n        group.group = parentGroup;\n      }\n\n      groups.push(group);\n      var nextRoot = values[value];\n      groups.push.apply(groups, (0, _toConsumableArray2.default)(getPivotGroups(nextRoot, groupId, pivotSummaryGroups)));\n    });\n  }\n\n  return groups;\n};\n\nvar useGroups = function useGroups(props, computedProps) {\n  var computedPivotUniqueValuesPerColumn = computedProps.computedPivotUniqueValuesPerColumn;\n  var groups = props.groups;\n\n  if (computedPivotUniqueValuesPerColumn && computedPivotUniqueValuesPerColumn.values) {\n    var pivotSummaryGroups = computedProps.pivot ? computedProps.pivot.reduce(function (acc, pivot) {\n      if (pivot && pivot.summaryGroup) {\n        acc[pivot.name] = pivot.summaryGroup;\n      }\n\n      return acc;\n    }, {}) : {};\n    groups = getPivotGroups(computedPivotUniqueValuesPerColumn, undefined, pivotSummaryGroups);\n  }\n\n  var groupsMap = groups ? (0, _mapGroups.default)(groups, props) : null;\n  var computedGroupsDepth = getGroupsDepth(groupsMap);\n  return {\n    computedGroups: groups,\n    computedGroupsMap: groupsMap,\n    computedGroupsDepth: computedGroupsDepth\n  };\n};\n\nvar _default = useGroups;\nexports.default = _default;","map":{"version":3,"sources":["/Users/sungjaejoo/Desktop/리액트/인터로거/ILP-main/node_modules/@inovua/reactdatagrid-community/hooks/useGroups.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_defineProperty2","_toConsumableArray2","_mapGroups","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","getGroupsDepth","groupsMap","Math","max","map","groupName","computedDepth","getPivotGroups","uniqueValuesRoot","parentGroup","pivotSummaryGroups","groups","field","values","groupId","concat","defaultGroup","group","name","header","nextRoot","useGroups","props","computedProps","computedPivotUniqueValuesPerColumn","pivot","reduce","acc","summaryGroup","undefined","computedGroupsDepth","computedGroups","computedGroupsMap","_default"],"mappings":"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","sourcesContent":["/** \n * Copyright © INOVUA TRADING.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _mapGroups = _interopRequireDefault(require(\"./mapGroups\"));\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nvar getGroupsDepth = function getGroupsDepth(groupsMap) {\n  if (!groupsMap) {\n    return 0;\n  }\n\n  return Math.max.apply(Math, (0, _toConsumableArray2.default)(Object.keys(groupsMap).map(function (groupName) {\n    return groupsMap[groupName].computedDepth || 0;\n  })));\n};\n\nvar getPivotGroups = function getPivotGroups(uniqueValuesRoot, parentGroup, pivotSummaryGroups) {\n  var groups = [];\n  var field = uniqueValuesRoot.field,\n      values = uniqueValuesRoot.values;\n\n  if (field && values) {\n    Object.keys(values).forEach(function (value) {\n      var groupId = \"\".concat(parentGroup ? parentGroup + '_' : '').concat(field, \":\").concat(value);\n      var defaultGroup = pivotSummaryGroups[field];\n      var group = {\n        name: groupId,\n        header: value\n      };\n\n      if (defaultGroup) {\n        if (typeof defaultGroup === 'function') {\n          group = _objectSpread(_objectSpread({}, defaultGroup(_objectSpread(_objectSpread({}, group), {}, {\n            field: field,\n            values: values\n          }))), group);\n        } else {\n          group = _objectSpread(_objectSpread({}, defaultGroup), group);\n        }\n      }\n\n      if (parentGroup) {\n        group.group = parentGroup;\n      }\n\n      groups.push(group);\n      var nextRoot = values[value];\n      groups.push.apply(groups, (0, _toConsumableArray2.default)(getPivotGroups(nextRoot, groupId, pivotSummaryGroups)));\n    });\n  }\n\n  return groups;\n};\n\nvar useGroups = function useGroups(props, computedProps) {\n  var computedPivotUniqueValuesPerColumn = computedProps.computedPivotUniqueValuesPerColumn;\n  var groups = props.groups;\n\n  if (computedPivotUniqueValuesPerColumn && computedPivotUniqueValuesPerColumn.values) {\n    var pivotSummaryGroups = computedProps.pivot ? computedProps.pivot.reduce(function (acc, pivot) {\n      if (pivot && pivot.summaryGroup) {\n        acc[pivot.name] = pivot.summaryGroup;\n      }\n\n      return acc;\n    }, {}) : {};\n    groups = getPivotGroups(computedPivotUniqueValuesPerColumn, undefined, pivotSummaryGroups);\n  }\n\n  var groupsMap = groups ? (0, _mapGroups.default)(groups, props) : null;\n  var computedGroupsDepth = getGroupsDepth(groupsMap);\n  return {\n    computedGroups: groups,\n    computedGroupsMap: groupsMap,\n    computedGroupsDepth: computedGroupsDepth\n  };\n};\n\nvar _default = useGroups;\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}