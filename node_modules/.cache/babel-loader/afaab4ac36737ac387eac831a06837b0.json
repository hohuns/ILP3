{"ast":null,"code":"import _regeneratorRuntime from\"/Users/sungjaejoo/Desktop/ILP-main/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/sungjaejoo/Desktop/ILP-main/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{Divider}from\"@mui/material\";import{TextField}from\"@mui/material\";import{Grid}from\"@mui/material\";import{Typography}from\"@mui/material\";import React,{useRef}from\"react\";import{useNavigate}from\"react-router-dom\";import{useAppSelector}from\"../../store/hooks\";var UpdateProfileForm=function UpdateProfileForm(){var userRef=useRef(null);var navigate=useNavigate();var reduxidToken=useAppSelector(function(state){return state.idToken;});var reduxLan=useAppSelector(function(state){return state.lan;});var formHandler=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _userRef$current;var _userRef$current2,data,errorMessage,json;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:console.log((_userRef$current=userRef.current)===null||_userRef$current===void 0?void 0:_userRef$current.value);_context.prev=1;_context.next=4;return fetch(\"https://identitytoolkit.googleapis.com/v1/accounts:update?key=AIzaSyCkLePHqkPxNxPalsSLE_C4CbAaOiaGwNw\",{method:\"POST\",body:JSON.stringify({idToken:reduxidToken,displayName:(_userRef$current2=userRef.current)===null||_userRef$current2===void 0?void 0:_userRef$current2.value,photoUrl:null,returnSecureToken:false}),headers:{\"Content-Type\":\"application/json\"}});case 4:data=_context.sent;if(data.ok){_context.next=9;break;}console.log(data);errorMessage=reduxLan===\"한국어\"?\"사용자 이름 변경에 실패하였습니다.\":\"Failed to change user name.\";throw new Error(errorMessage);case 9:_context.next=11;return data.json();case 11:json=_context.sent;console.log(json);alert(\"성공하였습니다.\");_context.next=19;break;case 16:_context.prev=16;_context.t0=_context[\"catch\"](1);alert(_context.t0);case 19:case\"end\":return _context.stop();}}},_callee,null,[[1,16]]);}));return function formHandler(){return _ref.apply(this,arguments);};}();console.log(reduxidToken);return/*#__PURE__*/React.createElement(\"section\",null,/*#__PURE__*/React.createElement(Typography,{variant:\"h6\",color:\"white\"},\"\\uBCC0\\uACBD\\uD560 \\uC0AC\\uC6A9\\uC790 \\uC774\\uB984\\uC744 \\uC785\\uB825\\uD574 \\uC8FC\\uC138\\uC694.\",reduxLan===\"한국어\"?\"변경할 사용자 이름을 입력해 주세요.\":\"Input the username that you want to change.\"),/*#__PURE__*/React.createElement(Divider,{sx:{backgroundColor:\"white\",marginTop:\"10px\"}}),/*#__PURE__*/React.createElement(Grid,{container:true,spacing:4,style:{marginTop:\"10px\"}},/*#__PURE__*/React.createElement(Grid,{item:true,xs:12,sm:3}),/*#__PURE__*/React.createElement(Grid,{item:true,xs:12,sm:6},/*#__PURE__*/React.createElement(TextField,{margin:\"dense\",required:true,name:\"Username\",sx:{input:{borderRadius:\"5px\",border:\"1px solid white\",color:\"white\"}},InputLabelProps:{style:{color:\"#fff\"}},label:\"Username\",type:\"Username\",fullWidth:true,inputRef:userRef}),/*#__PURE__*/React.createElement(\"button\",{style:{marginTop:\"30px\"},onClick:formHandler},\"Submit\"))));};export default UpdateProfileForm;","map":{"version":3,"sources":["/Users/sungjaejoo/Desktop/ILP-main/src/components/UpdateProfileForm/UpdateProfileForm.tsx"],"names":["Divider","TextField","Grid","Typography","React","useRef","useNavigate","useAppSelector","UpdateProfileForm","userRef","navigate","reduxidToken","state","idToken","reduxLan","lan","formHandler","console","log","current","value","fetch","method","body","JSON","stringify","displayName","photoUrl","returnSecureToken","headers","data","ok","errorMessage","Error","json","alert","backgroundColor","marginTop","input","borderRadius","border","color","style"],"mappings":"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","sourcesContent":["import { Divider } from \"@mui/material\";\nimport { TextField } from \"@mui/material\";\nimport { Grid } from \"@mui/material\";\nimport { Typography } from \"@mui/material\";\nimport React, { useRef } from \"react\";\nimport { logIn } from \"../../Service/ApiService\";\nimport { useNavigate } from \"react-router-dom\";\nimport { usersActions } from \"../../store/userSlice\";\nimport { useAppSelector, useAppDispatch } from \"../../store/hooks\";\n\nconst UpdateProfileForm = () => {\n  const userRef = useRef<HTMLInputElement>(null);\n  let navigate = useNavigate();\n  const reduxidToken = useAppSelector((state) => state.idToken);\n  const reduxLan = useAppSelector((state) => state.lan);\n\n  const formHandler = async () => {\n    console.log(userRef.current?.value);\n    try {\n      const data = await fetch(\n        \"https://identitytoolkit.googleapis.com/v1/accounts:update?key=AIzaSyCkLePHqkPxNxPalsSLE_C4CbAaOiaGwNw\",\n        {\n          method: \"POST\",\n          body: JSON.stringify({\n            idToken: reduxidToken,\n            displayName: userRef.current?.value,\n            photoUrl: null,\n            returnSecureToken: false,\n          }),\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n      if (!data.ok) {\n        console.log(data);\n        let errorMessage =\n          reduxLan === \"한국어\"\n            ? \"사용자 이름 변경에 실패하였습니다.\"\n            : \"Failed to change user name.\";\n        throw new Error(errorMessage);\n      }\n      const json = await data.json();\n      console.log(json);\n      alert(\"성공하였습니다.\");\n    } catch (err) {\n      alert(err);\n    }\n  };\n\n  console.log(reduxidToken);\n  return (\n    <section>\n      <Typography variant=\"h6\" color=\"white\">\n        변경할 사용자 이름을 입력해 주세요.\n        {reduxLan === \"한국어\"\n          ? \"변경할 사용자 이름을 입력해 주세요.\"\n          : \"Input the username that you want to change.\"}\n      </Typography>\n      <Divider sx={{ backgroundColor: \"white\", marginTop: \"10px\" }} />\n      <Grid container spacing={4} style={{ marginTop: \"10px\" }}>\n        <Grid item xs={12} sm={3}>\n          {}\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            margin=\"dense\"\n            required\n            name=\"Username\"\n            sx={{\n              input: {\n                borderRadius: \"5px\",\n                border: \"1px solid white\",\n                color: \"white\",\n              },\n            }}\n            InputLabelProps={{\n              style: { color: \"#fff\" },\n            }}\n            label=\"Username\"\n            type=\"Username\"\n            fullWidth\n            inputRef={userRef}\n          />\n          <button style={{ marginTop: \"30px\" }} onClick={formHandler}>\n            Submit\n          </button>\n        </Grid>\n      </Grid>\n    </section>\n  );\n};\n\nexport default UpdateProfileForm;\n"]},"metadata":{},"sourceType":"module"}