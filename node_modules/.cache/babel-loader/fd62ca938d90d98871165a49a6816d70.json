{"ast":null,"code":"var _jsxFileName = \"/Users/sungjaejoo/Desktop/ILP-main/src/components/Layout/Layout.tsx\";\nimport MainNavigation from \"./MainNavigation\";\nimport React, { useState } from \"react\";\nimport Box from \"@mui/material/Box\";\nimport SpeedDial from \"@mui/material/SpeedDial\";\nimport SpeedDialIcon from \"@mui/material/SpeedDialIcon\";\nimport SpeedDialAction from \"@mui/material/SpeedDialAction\";\nimport LoginIcon from \"@mui/icons-material/Login\";\nimport LogoutIcon from \"@mui/icons-material/Logout\";\nimport AddToHomeScreenIcon from \"@mui/icons-material/AddToHomeScreen\";\nimport VpnKeyIcon from \"@mui/icons-material/VpnKey\";\nimport { useAppDispatch } from \"../../store/hooks\";\nimport MessageIcon from \"@mui/icons-material/Message\";\nimport HomeIcon from \"@mui/icons-material/Home\";\nimport { usersActions } from \"../../store/userSlice\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\n\nconst Layout = props => {\n  const [open, setOpen] = useState(false);\n  const {\n    t\n  } = useTranslation(\"main\");\n\n  const handleOpen = () => setOpen(true);\n\n  const handleClose = () => setOpen(false);\n\n  const dispatch = useAppDispatch();\n  let navigate = useNavigate();\n  const actions = [{\n    icon: /*#__PURE__*/React.createElement(LoginIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }\n    }),\n    name: t(`Layout.iconText-login`)\n  }, {\n    icon: /*#__PURE__*/React.createElement(LogoutIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }\n    }),\n    name: t(`Layout.iconText-logout`)\n  }, {\n    icon: /*#__PURE__*/React.createElement(AddToHomeScreenIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }\n    }),\n    name: t(`Layout.iconText-signin`)\n  }, {\n    icon: /*#__PURE__*/React.createElement(VpnKeyIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }\n    }),\n    name: t(`Layout.iconText-changepw`)\n  }, {\n    icon: /*#__PURE__*/React.createElement(MessageIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }\n    }),\n    name: \"Message Log\"\n  }, {\n    icon: /*#__PURE__*/React.createElement(MessageIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }\n    }),\n    name: \"메세지 로그\"\n  }, {\n    icon: /*#__PURE__*/React.createElement(HomeIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }),\n    name: \"Home\"\n  }, {\n    icon: /*#__PURE__*/React.createElement(HomeIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    }),\n    name: \"홈\"\n  }];\n\n  const logoutHandler = () => {\n    dispatch(usersActions.updateIdToken(\"\"));\n    dispatch(usersActions.updateIsLoggedIn(false));\n    dispatch(usersActions.updateUser(\"\"));\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"isLoggedIn\");\n    localStorage.removeItem(\"user\");\n    navigate(\"/login\");\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(MainNavigation, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      height: 330,\n      transform: \"translateZ(0px)\",\n      flexGrow: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"main\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, props.children), /*#__PURE__*/React.createElement(SpeedDial, {\n    ariaLabel: \"SpeedDial tooltip example\",\n    sx: {\n      position: \"absolute\",\n      bottom: -300,\n      right: 20\n    },\n    icon: /*#__PURE__*/React.createElement(SpeedDialIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }),\n    onClose: handleClose,\n    onOpen: handleOpen,\n    open: open,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, actions.map(action => /*#__PURE__*/React.createElement(SpeedDialAction, {\n    key: action.name,\n    icon: action.icon,\n    tooltipTitle: action.name,\n    tooltipOpen: true,\n    onClick: () => {\n      if (action.name === \"LogIn\" || action.name === \"로그인\") {\n        navigate(\"/login\");\n      } else if (action.name === \"LogOut\" || action.name === \"로그아웃\") {\n        logoutHandler();\n      } else if (action.name === \"SingIn\" || action.name === \"가입하기\") {\n        navigate(\"/signin\");\n      } else if (action.name === \"Change Password\" || action.name === \"비밀번호 변경\") {\n        navigate(\"/changepassword\");\n      } else if (action.name === \"Message Log\") {\n        navigate(\"/msglogen\");\n      } else if (action.name === \"메세지 로그\") {\n        navigate(\"/msglogkr\");\n      } else if (action.name === \"Home\") {\n        navigate(\"/hompageen\");\n      } else if (action.name === \"메세지 로그\") {\n        navigate(\"/hompagekr\");\n      }\n\n      handleClose();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  })))));\n};\n\nexport default Layout;","map":{"version":3,"sources":["/Users/sungjaejoo/Desktop/ILP-main/src/components/Layout/Layout.tsx"],"names":["MainNavigation","React","useState","Box","SpeedDial","SpeedDialIcon","SpeedDialAction","LoginIcon","LogoutIcon","AddToHomeScreenIcon","VpnKeyIcon","useAppDispatch","MessageIcon","HomeIcon","usersActions","useNavigate","useTranslation","Layout","props","open","setOpen","t","handleOpen","handleClose","dispatch","navigate","actions","icon","name","logoutHandler","updateIdToken","updateIsLoggedIn","updateUser","localStorage","removeItem","height","transform","flexGrow","children","position","bottom","right","map","action"],"mappings":"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","sourcesContent":["import MainNavigation from \"./MainNavigation\";\nimport React, { useState } from \"react\";\nimport Box from \"@mui/material/Box\";\nimport SpeedDial from \"@mui/material/SpeedDial\";\nimport SpeedDialIcon from \"@mui/material/SpeedDialIcon\";\nimport SpeedDialAction from \"@mui/material/SpeedDialAction\";\nimport LoginIcon from \"@mui/icons-material/Login\";\nimport LogoutIcon from \"@mui/icons-material/Logout\";\nimport AddToHomeScreenIcon from \"@mui/icons-material/AddToHomeScreen\";\nimport VpnKeyIcon from \"@mui/icons-material/VpnKey\";\nimport { useAppSelector, useAppDispatch } from \"../../store/hooks\";\nimport MessageIcon from \"@mui/icons-material/Message\";\nimport HomeIcon from \"@mui/icons-material/Home\";\nimport { usersActions } from \"../../store/userSlice\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\n\nconst Layout = (props: { children: React.ReactFragment }) => {\n  const [open, setOpen] = useState(false);\n  const { t } = useTranslation(\"main\");\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n  const dispatch = useAppDispatch();\n  let navigate = useNavigate();\n\n  const actions = [\n    { icon: <LoginIcon />, name: t(`Layout.iconText-login`) },\n    { icon: <LogoutIcon />, name: t(`Layout.iconText-logout`) },\n    { icon: <AddToHomeScreenIcon />, name: t(`Layout.iconText-signin`) },\n    { icon: <VpnKeyIcon />, name: t(`Layout.iconText-changepw`) },\n    { icon: <MessageIcon />, name: \"Message Log\" },\n    { icon: <MessageIcon />, name: \"메세지 로그\" },\n    { icon: <HomeIcon />, name: \"Home\" },\n    { icon: <HomeIcon />, name: \"홈\" },\n  ];\n\n  const logoutHandler = () => {\n    dispatch(usersActions.updateIdToken(\"\"));\n    dispatch(usersActions.updateIsLoggedIn(false));\n    dispatch(usersActions.updateUser(\"\"));\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"isLoggedIn\");\n    localStorage.removeItem(\"user\");\n    navigate(\"/login\");\n  };\n\n  return (\n    <>\n      <MainNavigation />\n      <Box sx={{ height: 330, transform: \"translateZ(0px)\", flexGrow: 1 }}>\n        <main>{props.children}</main>\n        <SpeedDial\n          ariaLabel=\"SpeedDial tooltip example\"\n          sx={{\n            position: \"absolute\",\n            bottom: -300,\n            right: 20,\n          }}\n          icon={<SpeedDialIcon />}\n          onClose={handleClose}\n          onOpen={handleOpen}\n          open={open}\n        >\n          {actions.map((action) => (\n            <SpeedDialAction\n              key={action.name}\n              icon={action.icon}\n              tooltipTitle={action.name}\n              tooltipOpen\n              onClick={() => {\n                if (action.name === \"LogIn\" || action.name === \"로그인\") {\n                  navigate(\"/login\");\n                } else if (\n                  action.name === \"LogOut\" ||\n                  action.name === \"로그아웃\"\n                ) {\n                  logoutHandler();\n                } else if (\n                  action.name === \"SingIn\" ||\n                  action.name === \"가입하기\"\n                ) {\n                  navigate(\"/signin\");\n                } else if (\n                  action.name === \"Change Password\" ||\n                  action.name === \"비밀번호 변경\"\n                ) {\n                  navigate(\"/changepassword\");\n                } else if (action.name === \"Message Log\") {\n                  navigate(\"/msglogen\");\n                } else if (action.name === \"메세지 로그\") {\n                  navigate(\"/msglogkr\");\n                } else if (action.name === \"Home\") {\n                  navigate(\"/hompageen\");\n                } else if (action.name === \"메세지 로그\") {\n                  navigate(\"/hompagekr\");\n                }\n                handleClose();\n              }}\n            />\n          ))}\n        </SpeedDial>\n      </Box>\n    </>\n  );\n};\n\nexport default Layout;\n"]},"metadata":{},"sourceType":"module"}