{"ast":null,"code":"/** \n * Copyright © INOVUA TRADING.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _region = _interopRequireDefault(require(\"../packages/region\"));\n\nvar _getGlobal = require(\"../getGlobal\");\n\nvar globalObject = (0, _getGlobal.getGlobal)();\nvar CACHED;\nvar LISTENING_WINDOW_RESIZE;\n\nvar setupWindowResize = function setupWindowResize() {\n  LISTENING_WINDOW_RESIZE = true;\n  globalObject.addEventListener('resize', function () {\n    CACHED = null;\n  });\n};\n\nfunction getViewportRegion() {\n  if (CACHED) {\n    return CACHED;\n  }\n\n  if (!LISTENING_WINDOW_RESIZE) {\n    setupWindowResize();\n  }\n\n  var viewportWidth = Math.max(globalObject.document.documentElement.clientWidth, globalObject.innerWidth || 0);\n  var viewportHeight = Math.max(globalObject.document.documentElement.clientHeight, globalObject.innerHeight || 0);\n  return CACHED = _region.default.from({\n    top: 0,\n    left: 0,\n    width: viewportWidth,\n    height: viewportHeight\n  });\n}\n\nvar _default = getViewportRegion;\nexports.default = _default;","map":{"version":3,"sources":["/Users/sungjaejoo/Desktop/리액트/인터로거/ILP-main/node_modules/@inovua/reactdatagrid-community/common/getViewportRegion.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_region","_getGlobal","globalObject","getGlobal","CACHED","LISTENING_WINDOW_RESIZE","setupWindowResize","addEventListener","getViewportRegion","viewportWidth","Math","max","document","documentElement","clientWidth","innerWidth","viewportHeight","clientHeight","innerHeight","from","top","left","width","height","_default"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAApC;;AAEAC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,OAAO,GAAGP,sBAAsB,CAACC,OAAO,CAAC,oBAAD,CAAR,CAApC;;AAEA,IAAIO,UAAU,GAAGP,OAAO,CAAC,cAAD,CAAxB;;AAEA,IAAIQ,YAAY,GAAG,CAAC,GAAGD,UAAU,CAACE,SAAf,GAAnB;AACA,IAAIC,MAAJ;AACA,IAAIC,uBAAJ;;AAEA,IAAIC,iBAAiB,GAAG,SAASA,iBAAT,GAA6B;AACnDD,EAAAA,uBAAuB,GAAG,IAA1B;AACAH,EAAAA,YAAY,CAACK,gBAAb,CAA8B,QAA9B,EAAwC,YAAY;AAClDH,IAAAA,MAAM,GAAG,IAAT;AACD,GAFD;AAGD,CALD;;AAOA,SAASI,iBAAT,GAA6B;AAC3B,MAAIJ,MAAJ,EAAY;AACV,WAAOA,MAAP;AACD;;AAED,MAAI,CAACC,uBAAL,EAA8B;AAC5BC,IAAAA,iBAAiB;AAClB;;AAED,MAAIG,aAAa,GAAGC,IAAI,CAACC,GAAL,CAAST,YAAY,CAACU,QAAb,CAAsBC,eAAtB,CAAsCC,WAA/C,EAA4DZ,YAAY,CAACa,UAAb,IAA2B,CAAvF,CAApB;AACA,MAAIC,cAAc,GAAGN,IAAI,CAACC,GAAL,CAAST,YAAY,CAACU,QAAb,CAAsBC,eAAtB,CAAsCI,YAA/C,EAA6Df,YAAY,CAACgB,WAAb,IAA4B,CAAzF,CAArB;AACA,SAAOd,MAAM,GAAGJ,OAAO,CAACD,OAAR,CAAgBoB,IAAhB,CAAqB;AACnCC,IAAAA,GAAG,EAAE,CAD8B;AAEnCC,IAAAA,IAAI,EAAE,CAF6B;AAGnCC,IAAAA,KAAK,EAAEb,aAH4B;AAInCc,IAAAA,MAAM,EAAEP;AAJ2B,GAArB,CAAhB;AAMD;;AAED,IAAIQ,QAAQ,GAAGhB,iBAAf;AACAX,OAAO,CAACE,OAAR,GAAkByB,QAAlB","sourcesContent":["/** \n * Copyright © INOVUA TRADING.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _region = _interopRequireDefault(require(\"../packages/region\"));\n\nvar _getGlobal = require(\"../getGlobal\");\n\nvar globalObject = (0, _getGlobal.getGlobal)();\nvar CACHED;\nvar LISTENING_WINDOW_RESIZE;\n\nvar setupWindowResize = function setupWindowResize() {\n  LISTENING_WINDOW_RESIZE = true;\n  globalObject.addEventListener('resize', function () {\n    CACHED = null;\n  });\n};\n\nfunction getViewportRegion() {\n  if (CACHED) {\n    return CACHED;\n  }\n\n  if (!LISTENING_WINDOW_RESIZE) {\n    setupWindowResize();\n  }\n\n  var viewportWidth = Math.max(globalObject.document.documentElement.clientWidth, globalObject.innerWidth || 0);\n  var viewportHeight = Math.max(globalObject.document.documentElement.clientHeight, globalObject.innerHeight || 0);\n  return CACHED = _region.default.from({\n    top: 0,\n    left: 0,\n    width: viewportWidth,\n    height: viewportHeight\n  });\n}\n\nvar _default = getViewportRegion;\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}