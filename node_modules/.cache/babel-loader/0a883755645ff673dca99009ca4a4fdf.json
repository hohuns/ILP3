{"ast":null,"code":"import React,{useRef}from\"react\";import{useAppSelector}from\"../../store/hooks\";import\"./AddNote.css\";function AddNoteEn(props){var titleRef=useRef(null);var textRef=useRef(null);var now=new Date();var reduxUserInfo=useAppSelector(function(state){return state.user;});function submitHandler(event){var _titleRef$current,_textRef$current;event.preventDefault();var notes={title:(_titleRef$current=titleRef.current)===null||_titleRef$current===void 0?void 0:_titleRef$current.value,text:(_textRef$current=textRef.current)===null||_textRef$current===void 0?void 0:_textRef$current.value,date:now.toLocaleString(),logger:reduxUserInfo};props.AddNote(notes);props.setIsbuttonPressed(false);titleRef.current.value=\"\";textRef.current.value=\"\";}return/*#__PURE__*/React.createElement(\"form\",{onSubmit:submitHandler},/*#__PURE__*/React.createElement(\"div\",{className:\"control\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"title\"},\"Title\"),/*#__PURE__*/React.createElement(\"input\",{type:\"text\",id:\"title\",ref:titleRef,style:{color:\"white\"},placeholder:\"Log the title here..!\"})),/*#__PURE__*/React.createElement(\"div\",{className:\"control\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"text-log\"},\"Text Log\"),/*#__PURE__*/React.createElement(\"textarea\",{rows:5,id:\"text-log\",ref:textRef,style:{color:\"white\"},placeholder:\"Log the past event that you want to mention..\"})),/*#__PURE__*/React.createElement(\"button\",null,\"Submit\"));}export default AddNoteEn;","map":{"version":3,"sources":["/Users/sungjaejoo/Desktop/ILP-main/src/components/MessageLogForm/AddNoteEn.tsx"],"names":["React","useRef","useAppSelector","AddNoteEn","props","titleRef","textRef","now","Date","reduxUserInfo","state","user","submitHandler","event","preventDefault","notes","title","current","value","text","date","toLocaleString","logger","AddNote","setIsbuttonPressed","color"],"mappings":"AACA,MAAOA,CAAAA,KAAP,EAAgBC,MAAhB,KAA8B,OAA9B,CACA,OAASC,cAAT,KAA+C,mBAA/C,CACA,MAAO,eAAP,CAeA,QAASC,CAAAA,SAAT,CAAmBC,KAAnB,CAA0C,CACxC,GAAMC,CAAAA,QAAQ,CAAGJ,MAAM,CAAmB,IAAnB,CAAvB,CACA,GAAMK,CAAAA,OAAO,CAAGL,MAAM,CAAsB,IAAtB,CAAtB,CACA,GAAMM,CAAAA,GAAG,CAAG,GAAIC,CAAAA,IAAJ,EAAZ,CAEA,GAAMC,CAAAA,aAAa,CAAGP,cAAc,CAAC,SAACQ,KAAD,QAAWA,CAAAA,KAAK,CAACC,IAAjB,EAAD,CAApC,CACA,QAASC,CAAAA,aAAT,CAAuBC,KAAvB,CAA+C,wCAC7CA,KAAK,CAACC,cAAN,GACA,GAAMC,CAAAA,KAAK,CAAG,CACZC,KAAK,oBAAEX,QAAQ,CAACY,OAAX,4CAAE,kBAAkBC,KADb,CAEZC,IAAI,mBAAEb,OAAO,CAACW,OAAV,2CAAE,iBAAiBC,KAFX,CAGZE,IAAI,CAAEb,GAAG,CAACc,cAAJ,EAHM,CAIZC,MAAM,CAAEb,aAJI,CAAd,CAOAL,KAAK,CAACmB,OAAN,CAAcR,KAAd,EACAX,KAAK,CAACoB,kBAAN,CAAyB,KAAzB,EACAnB,QAAQ,CAACY,OAAT,CAAkBC,KAAlB,CAA0B,EAA1B,CACAZ,OAAO,CAACW,OAAR,CAAiBC,KAAjB,CAAyB,EAAzB,CACD,CAED,mBACE,4BAAM,QAAQ,CAAEN,aAAhB,eACE,2BAAK,SAAS,CAAC,SAAf,eACE,6BAAO,OAAO,CAAC,OAAf,UADF,cAEE,6BACE,IAAI,CAAC,MADP,CAEE,EAAE,CAAC,OAFL,CAGE,GAAG,CAAEP,QAHP,CAIE,KAAK,CAAE,CAAEoB,KAAK,CAAE,OAAT,CAJT,CAKE,WAAW,CAAC,uBALd,EAFF,CADF,cAWE,2BAAK,SAAS,CAAC,SAAf,eACE,6BAAO,OAAO,CAAC,UAAf,aADF,cAEE,gCACE,IAAI,CAAE,CADR,CAEE,EAAE,CAAC,UAFL,CAGE,GAAG,CAAEnB,OAHP,CAIE,KAAK,CAAE,CAAEmB,KAAK,CAAE,OAAT,CAJT,CAKE,WAAW,CAAC,+CALd,EAFF,CAXF,cAqBE,2CArBF,CADF,CAyBD,CAED,cAAetB,CAAAA,SAAf","sourcesContent":["import { string } from \"@inovua/reactdatagrid-community/filterTypes\";\nimport React, { useRef } from \"react\";\nimport { useAppSelector, useAppDispatch } from \"../../store/hooks\";\nimport \"./AddNote.css\";\n\ntype AddNoteENProps = {\n  //optional chianing\n  AddNote: (notes: {\n    title?: string;\n    text?: string;\n    date?: string;\n    logger?: string;\n  }) => void;\n\n  logger: string;\n  setIsbuttonPressed: (boolean: boolean) => void;\n};\n\nfunction AddNoteEn(props: AddNoteENProps) {\n  const titleRef = useRef<HTMLInputElement>(null);\n  const textRef = useRef<HTMLTextAreaElement>(null);\n  const now = new Date();\n\n  const reduxUserInfo = useAppSelector((state) => state.user);\n  function submitHandler(event: React.FormEvent) {\n    event.preventDefault();\n    const notes = {\n      title: titleRef.current?.value,\n      text: textRef.current?.value,\n      date: now.toLocaleString(),\n      logger: reduxUserInfo,\n    };\n\n    props.AddNote(notes);\n    props.setIsbuttonPressed(false);\n    titleRef.current!.value = \"\";\n    textRef.current!.value = \"\";\n  }\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className=\"control\">\n        <label htmlFor=\"title\">Title</label>\n        <input\n          type=\"text\"\n          id=\"title\"\n          ref={titleRef}\n          style={{ color: \"white\" }}\n          placeholder=\"Log the title here..!\"\n        />\n      </div>\n      <div className=\"control\">\n        <label htmlFor=\"text-log\">Text Log</label>\n        <textarea\n          rows={5}\n          id=\"text-log\"\n          ref={textRef}\n          style={{ color: \"white\" }}\n          placeholder=\"Log the past event that you want to mention..\"\n        ></textarea>\n      </div>\n      <button>Submit</button>\n    </form>\n  );\n}\n\nexport default AddNoteEn;\n"]},"metadata":{},"sourceType":"module"}