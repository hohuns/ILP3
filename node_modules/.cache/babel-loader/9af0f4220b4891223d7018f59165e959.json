{"ast":null,"code":"var _jsxFileName = \"/Users/sungjaejoo/Desktop/\\u1105\\u1175\\u110B\\u1162\\u11A8\\u1110\\u1173/\\u110B\\u1175\\u11AB\\u1110\\u1165\\u1105\\u1169\\u1100\\u1165/ILP-main/src/components/MessageLogForm/MessageLogFormEn.tsx\";\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport AddNoteEn from \"./AddNoteEn\";\nimport { useAppSelector, useAppDispatch } from \"../../store/hooks\";\nimport { useNavigate } from \"react-router-dom\";\nimport { usersActions } from \"../../store/userSlice\";\nimport NoteListEn from \"./NoteListEn\";\n\nconst MessageLogFormEn = () => {\n  const reduxUser = useAppSelector(state => state.user);\n  const dispatch = useAppDispatch();\n  const [note, setNote] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  let navigate = useNavigate();\n\n  const logoutHandler = () => {\n    dispatch(usersActions.updateIdToken(\"\"));\n    dispatch(usersActions.updateIsLoggedIn(false));\n    dispatch(usersActions.updateUser(\"\"));\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"isLoggedIn\");\n    localStorage.removeItem(\"user\");\n    navigate(\"/login\");\n  };\n\n  const fetchNoteHandlerEn = useCallback(async () => {\n    setIsLoading(true);\n    setError(\"\");\n\n    try {\n      const response = await fetch(\"https://react-http-2887f-default-rtdb.firebaseio.com/notes.json\");\n\n      if (!response.ok) {\n        throw new Error(\"Something went wrong!\");\n      }\n\n      const data = await response.json();\n      console.log(data);\n      const loadedNotes = [];\n\n      for (const key in data) {\n        loadedNotes.push({\n          id: key,\n          title: data[key].title,\n          text: data[key].text,\n          date: `${data[key].logger} logged message at ${data[key].date}....`\n        });\n      }\n\n      loadedNotes.reverse();\n      console.log(loadedNotes);\n      setNote(loadedNotes);\n    } catch (err) {\n      if (err instanceof Error) {\n        setError(err.message);\n      }\n    }\n\n    setIsLoading(false);\n  }, []);\n\n  async function addNoteHandlerEn(note) {\n    const response = await fetch(\"https://react-http-2887f-default-rtdb.firebaseio.com/notes.json\", {\n      method: \"POST\",\n      body: JSON.stringify(note),\n      headers: {\n        \"Content-Type\": \"appication/json\"\n      }\n    });\n    const data = await response.json();\n    console.log(data);\n    alert(`Message is successfully added..!`);\n    fetchNoteHandlerEn();\n  }\n\n  useEffect(() => {\n    fetchNoteHandlerEn();\n  }, [fetchNoteHandlerEn]);\n  let content = /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: \"white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }, \"Found no Notes.\");\n\n  if (note.length > 0) {\n    content = /*#__PURE__*/React.createElement(NoteListEn, {\n      note: note,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 15\n      }\n    });\n  }\n\n  if (error) {\n    content = /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        color: \"white\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 15\n      }\n    }, error);\n  }\n\n  if (isLoading) {\n    content = /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        color: \"white\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 15\n      }\n    }, \"Loading...\");\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    style: {\n      color: \"white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, \"Welcome..! \", reduxUser, \" \"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: logoutHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, \" Logout\")), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    style: {\n      color: \"white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }, \"Log Format\"), /*#__PURE__*/React.createElement(AddNoteEn, {\n    AddNote: addNoteHandlerEn,\n    logger: reduxUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: fetchNoteHandlerEn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, \"Update Notes\")), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    style: {\n      color: \"white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, \"Log\"), content));\n};\n\nexport default MessageLogFormEn;","map":{"version":3,"sources":["/Users/sungjaejoo/Desktop/리액트/인터로거/ILP-main/src/components/MessageLogForm/MessageLogFormEn.tsx"],"names":["React","useState","useEffect","useCallback","AddNoteEn","useAppSelector","useAppDispatch","useNavigate","usersActions","NoteListEn","MessageLogFormEn","reduxUser","state","user","dispatch","note","setNote","error","setError","isLoading","setIsLoading","navigate","logoutHandler","updateIdToken","updateIsLoggedIn","updateUser","localStorage","removeItem","fetchNoteHandlerEn","response","fetch","ok","Error","data","json","console","log","loadedNotes","key","push","id","title","text","date","logger","reverse","err","message","addNoteHandlerEn","method","body","JSON","stringify","headers","alert","content","color","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport AddNoteEn from \"./AddNoteEn\";\nimport { useAppSelector, useAppDispatch } from \"../../store/hooks\";\nimport { useNavigate } from \"react-router-dom\";\nimport { usersActions } from \"../../store/userSlice\";\nimport NoteListEn from \"./NoteListEn\";\nconst MessageLogFormEn = () => {\n  const reduxUser: string = useAppSelector((state) => state.user);\n  const dispatch = useAppDispatch();\n  const [note, setNote] = useState<\n    { id: string; title: any; text: any; date: string }[]\n  >([]);\n  const [error, setError] = useState<string>(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  let navigate = useNavigate();\n\n  const logoutHandler = () => {\n    dispatch(usersActions.updateIdToken(\"\"));\n    dispatch(usersActions.updateIsLoggedIn(false));\n    dispatch(usersActions.updateUser(\"\"));\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"isLoggedIn\");\n    localStorage.removeItem(\"user\");\n    navigate(\"/login\");\n  };\n\n  const fetchNoteHandlerEn = useCallback(async () => {\n    setIsLoading(true);\n    setError(\"\");\n    try {\n      const response = await fetch(\n        \"https://react-http-2887f-default-rtdb.firebaseio.com/notes.json\"\n      );\n      if (!response.ok) {\n        throw new Error(\"Something went wrong!\");\n      }\n\n      const data = await response.json();\n      console.log(data);\n      const loadedNotes: { id: string; title: any; text: any; date: string }[] =\n        [];\n      for (const key in data) {\n        loadedNotes.push({\n          id: key,\n          title: data[key].title,\n          text: data[key].text,\n          date: `${data[key].logger} logged message at ${data[key].date}....`,\n        });\n      }\n      loadedNotes.reverse();\n      console.log(loadedNotes);\n      setNote(loadedNotes);\n    } catch (err) {\n      if (err instanceof Error) {\n        setError(err.message);\n      }\n    }\n    setIsLoading(false);\n  }, []);\n\n  async function addNoteHandlerEn(note: {\n    id?: string;\n    title?: string;\n    text?: string;\n    date?: string;\n  }) {\n    const response = await fetch(\n      \"https://react-http-2887f-default-rtdb.firebaseio.com/notes.json\",\n      {\n        method: \"POST\",\n        body: JSON.stringify(note),\n        headers: {\n          \"Content-Type\": \"appication/json\",\n        },\n      }\n    );\n    const data = await response.json();\n    console.log(data);\n    alert(`Message is successfully added..!`);\n    fetchNoteHandlerEn();\n  }\n\n  useEffect(() => {\n    fetchNoteHandlerEn();\n  }, [fetchNoteHandlerEn]);\n\n  let content = <p style={{ color: \"white\" }}>Found no Notes.</p>;\n\n  if (note.length > 0) {\n    content = <NoteListEn note={note} />;\n  }\n\n  if (error) {\n    content = <p style={{ color: \"white\" }}>{error}</p>;\n  }\n\n  if (isLoading) {\n    content = <p style={{ color: \"white\" }}>Loading...</p>;\n  }\n\n  return (\n    <div>\n      <section>\n        <h3 style={{ color: \"white\" }}>Welcome..! {reduxUser} </h3>\n        <button onClick={logoutHandler}> Logout</button>\n      </section>\n      <section>\n        <h3 style={{ color: \"white\" }}>Log Format</h3>\n        <AddNoteEn AddNote={addNoteHandlerEn} logger={reduxUser}></AddNoteEn>\n      </section>\n      <section>\n        <button onClick={fetchNoteHandlerEn}>Update Notes</button>\n      </section>\n      <section>\n        <h3 style={{ color: \"white\" }}>Log</h3>\n        {content}\n      </section>\n    </div>\n  );\n};\n\nexport default MessageLogFormEn;\n"]},"metadata":{},"sourceType":"module"}